<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:md="http://git.erwinefamily.net/FsInfoCat/V1/ModelDefinitions.xsd"
    targetNamespace="http://git.erwinefamily.net/FsInfoCat/V1/ModelDefinitions.xsd" elementFormDefault="qualified">
    <xs:simpleType name="NonEmptyToken">
        <xs:restriction base="xs:token">
            <xs:minLength value="1" />
        </xs:restriction>
    </xs:simpleType>
    <xs:simpleType name="FileNameType">
        <xs:restriction base="md:NonEmptyToken">
            <xs:pattern value="[\da-z_A-Z-](\.[.\da-z_A-Z-]+)*" />
        </xs:restriction>
    </xs:simpleType>
    <xs:simpleType name="FilePathType">
        <xs:restriction base="md:NonEmptyToken">
            <xs:pattern value="[\da-z_A-Z-](\.[.\da-z_A-Z-]+)*" />
        </xs:restriction>
    </xs:simpleType>
    <xs:simpleType name="ClrNamespaceType">
        <xs:union>
            <xs:simpleType>
                <xs:restriction base="md:NonEmptyToken">
                    <xs:pattern value="[a-z_A-Z][\w_]*(\.[a-z_A-Z][\w_]*)*" />
                </xs:restriction>
            </xs:simpleType>
            <xs:simpleType>
                <xs:restriction base="xs:token">
                    <xs:enumeration value="" />
                </xs:restriction>
            </xs:simpleType>
        </xs:union>
    </xs:simpleType>
    <xs:simpleType name="ClrIdentifierType">
        <xs:restriction base="md:NonEmptyToken">
            <xs:pattern value="[a-z_A-Z][\w_]*" />
        </xs:restriction>
    </xs:simpleType>
    <xs:simpleType name="ClrGenericIdentifierType">
        <xs:restriction base="md:NonEmptyToken">
            <xs:pattern value="[a-z_A-Z][\w_]*\{[a-z_A-Z][\w_]*(,[a-z_A-Z][\w_]*)*\}" />
        </xs:restriction>
    </xs:simpleType>
    <xs:simpleType name="PublicIdentifierType">
        <xs:restriction base="md:ClrIdentifierType">
            <xs:pattern value="[A-Z][\da-z_A-Z]*" />
        </xs:restriction>
    </xs:simpleType>
    <xs:simpleType name="ModelInterfaceIdentifierType">
        <xs:restriction base="md:PublicIdentifierType">
            <xs:pattern value="I[A-Z][\da-zA-Z]*" />
        </xs:restriction>
    </xs:simpleType>
    <xs:simpleType name="ModelIdentifierType">
        <xs:restriction base="md:NonEmptyToken">
            <xs:pattern value="[A-Z][\da-z_A-Z]*(\{[A-Z][\da-z_A-Z]*(,[A-Z][\da-z_A-Z]*)*\})?" />
        </xs:restriction>
    </xs:simpleType>
    <xs:simpleType name="ErrorCodeType">
        <xs:restriction base="md:PublicIdentifierType">
            <xs:enumeration value="Unexpected" />
            <xs:enumeration value="IOError" />
            <xs:enumeration value="UnauthorizedAccess" />
            <xs:enumeration value="SecurityException" />
            <xs:enumeration value="InvalidPath" />
            <xs:enumeration value="PathTooLong" />
            <xs:enumeration value="CrawlOperationFailed" />
            <xs:enumeration value="DirectoryNotFound" />
            <xs:enumeration value="GetLogicalDisksFailure" />
            <xs:enumeration value="BackgroundJobFaulted" />
        </xs:restriction>
    </xs:simpleType>
    <xs:simpleType name="StatusMessageLevelType">
        <xs:restriction base="md:PublicIdentifierType">
            <xs:enumeration value="Information" />
            <xs:enumeration value="Warning" />
            <xs:enumeration value="Error" />
        </xs:restriction>
    </xs:simpleType>
    <xs:simpleType name="MessageCodeType">
        <xs:restriction base="md:PublicIdentifierType">
            <xs:enumeration value="UnexpectedError" />
            <xs:enumeration value="IOError" />
            <xs:enumeration value="UnauthorizedAccess" />
            <xs:enumeration value="SecurityException" />
            <xs:enumeration value="InvalidPath" />
            <xs:enumeration value="PathTooLong" />
            <xs:enumeration value="CrawlOperationFailed" />
            <xs:enumeration value="DirectoryNotFound" />
            <xs:enumeration value="GetLogicalDisksFailure" />
            <xs:enumeration value="BackgroundJobPending" />
            <xs:enumeration value="BackgroundJobStarted" />
            <xs:enumeration value="BackgroundJobCompleted" />
            <xs:enumeration value="CancellingBackgroundJob" />
            <xs:enumeration value="BackgroundJobCanceled" />
            <xs:enumeration value="BackgroundJobFaulted" />
            <xs:enumeration value="ItemLimitReached" />
            <xs:enumeration value="TimeLimitReached" />
            <xs:enumeration value="CrawlingSubdirectory" />
            <xs:enumeration value="ReadingFileInformation" />
        </xs:restriction>
    </xs:simpleType>
    <xs:simpleType name="DocumentationListKind">
        <xs:restriction base="xs:NCName">
            <xs:enumeration value="bullet" />
            <xs:enumeration value="table" />
        </xs:restriction>
    </xs:simpleType>
    <xs:simpleType name="PredefinedIntegerType">
        <xs:restriction base="xs:NCName">
            <xs:enumeration value="byte" />
            <xs:enumeration value="sbyte" />
            <xs:enumeration value="short" />
            <xs:enumeration value="ushort" />
            <xs:enumeration value="int" />
            <xs:enumeration value="uint" />
            <xs:enumeration value="long" />
            <xs:enumeration value="ulong" />
        </xs:restriction>
    </xs:simpleType>
    <xs:simpleType name="PredefinedValueType">
        <xs:union memberTypes="md:PredefinedIntegerType">
            <xs:simpleType>
                <xs:restriction base="xs:NCName">
                    <xs:enumeration value="decimal" />
                    <xs:enumeration value="double" />
                    <xs:enumeration value="float" />
                    <xs:enumeration value="bool" />
                    <xs:enumeration value="char" />
                </xs:restriction>
            </xs:simpleType>
        </xs:union>
    </xs:simpleType>
    <xs:simpleType name="AnyPredefinedType">
        <xs:union memberTypes="md:PredefinedValueType">
            <xs:simpleType>
                <xs:restriction base="xs:NCName">
                    <xs:enumeration value="void" />
                    <xs:enumeration value="string" />
                </xs:restriction>
            </xs:simpleType>
        </xs:union>
    </xs:simpleType>
    <xs:simpleType name="FullIdentifierType">
        <xs:restriction base="xs:NCName">
            <xs:pattern value="[A-Z][\da-z_A-Z]*(\.[A-Z][\da-z_A-Z]*)*" />
        </xs:restriction>
    </xs:simpleType>
    <xs:simpleType name="GuidType">
        <xs:restriction base="md:NonEmptyToken">
            <xs:pattern value="[a-f\d]{8}(-[a-f\d]{4}){4}[a-f\d]{8}" />
        </xs:restriction>
    </xs:simpleType>
    <xs:simpleType name="ModelScopeType">
        <xs:restriction base="xs:NCName">
            <xs:enumeration value="All" />
            <xs:enumeration value="Local" />
            <xs:enumeration value="Upstream" />
        </xs:restriction>
    </xs:simpleType>
    <xs:simpleType name="AccessModifierType">
        <xs:restriction base="xs:NCName">
            <xs:enumeration value="Public" />
            <xs:enumeration value="Protected" />
            <xs:enumeration value="Internal" />
            <xs:enumeration value="ProtectedInternal" />
            <xs:enumeration value="Private" />
        </xs:restriction>
    </xs:simpleType>
    <xs:simpleType name="PropertyAccessType">
        <xs:restriction base="xs:NCName">
            <xs:enumeration value="ReadWrite" />
            <xs:enumeration value="ReadOnly" />
            <xs:enumeration value="WriteOnly" />
        </xs:restriction>
    </xs:simpleType>
    <xs:simpleType name="TypeParameterConstraintType">
        <xs:restriction base="xs:NCName">
            <xs:enumeration value="class" />
            <xs:enumeration value="struct" />
        </xs:restriction>
    </xs:simpleType>
    <xs:simpleType name="StructLayoutType">
        <xs:restriction base="xs:NCName">
            <xs:enumeration value="Sequential" />
            <xs:enumeration value="Explicit" />
            <xs:enumeration value="Auto" />
        </xs:restriction>
    </xs:simpleType>
    <xs:complexType name="FileNamespaceType">
        <xs:sequence>
            <xs:element name="Documentation" type="md:NamespaceDocumentationType" minOccurs="0" maxOccurs="1" />
        </xs:sequence>
        <xs:attribute name="Name" type="md:FullIdentifierType" use="required" />
    </xs:complexType>
    <xs:complexType name="UsingSyntaxType">
        <xs:attribute name="Name" type="md:FullIdentifierType" use="required" />
    </xs:complexType>
    <xs:complexType name="SourceFileType">
        <xs:sequence>
            <xs:element name="Using" type="md:UsingSyntaxType" minOccurs="0" maxOccurs="unbounded" />
            <xs:element name="Namespace" type="md:FileNamespaceType" />
        </xs:sequence>
        <xs:attribute name="Path" type="xs:string" use="required" />
    </xs:complexType>
    <!-- #region Type Refences -->
    <xs:complexType name="PredefinedValueReferenceType">
        <xs:attribute name="Type" type="md:PredefinedValueType" use="required" />
    </xs:complexType>
    <xs:complexType name="AnyPredefinedReferenceType">
        <xs:attribute name="Type" type="md:AnyPredefinedType" use="required" />
    </xs:complexType>
    <xs:complexType name="EnumReferenceType">
        <xs:attribute name="Ref" type="md:NonEmptyToken" use="required" />
    </xs:complexType>
    <xs:complexType name="GenericArgumentType">
        <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="Predefined" />
            <xs:element name="Enum" />
            <xs:element name="Nullable" />
            <xs:element name="Array" />
            <xs:element name="Type" />
        </xs:choice>
        <xs:attribute name="Name" type="md:ClrIdentifierType" use="required" />
        <xs:attribute name="Constraint" type="md:TypeParameterConstraintType" use="optional" />
        <xs:attribute name="EmptyConstructorConstraint" type="xs:boolean" use="optional" default="false" />
    </xs:complexType>
    <xs:complexType name="TypeReferenceType">
        <xs:choice minOccurs="0">
            <xs:element name="Argument" type="md:GenericArgumentType" minOccurs="0" maxOccurs="unbounded" />
            <xs:group ref="md:AnyTypeReferenceGroup" minOccurs="0" maxOccurs="unbounded" />
        </xs:choice>
        <xs:attribute name="Ref" type="md:NonEmptyToken" use="required" />
    </xs:complexType>
    <xs:group name="ValueTypeReferenceGroup">
        <xs:choice>
            <xs:element name="Predefined" type="md:PredefinedValueReferenceType" />
            <xs:element name="Enum" type="md:EnumReferenceType" />
            <xs:element name="Type" type="md:TypeReferenceType" />
        </xs:choice>
    </xs:group>
    <xs:group name="AnyTypeReferenceGroup">
        <xs:choice>
            <xs:element name="Predefined" type="md:AnyPredefinedReferenceType" />
            <xs:element name="Nullable" type="md:NullableReferenceType" />
            <xs:element name="Array" type="md:ArrayReferenceType" />
            <xs:element name="Enum" type="md:EnumReferenceType" />
            <xs:element name="Type" type="md:TypeReferenceType" />
            <xs:element name="Argument">
                <xs:complexType>
                    <xs:attribute name="Name" type="md:ClrIdentifierType" use="required" />
                </xs:complexType>
            </xs:element>
        </xs:choice>
    </xs:group>
    <xs:complexType name="NullableReferenceType">
        <xs:choice>
            <xs:group ref="md:ValueTypeReferenceGroup" />
            <xs:element name="Argument">
                <xs:complexType>
                    <xs:attribute name="Name" type="md:ClrIdentifierType" use="required" />
                </xs:complexType>
            </xs:element>
        </xs:choice>
    </xs:complexType>
    <xs:complexType name="ArrayReferenceType">
        <xs:group ref="md:AnyTypeReferenceGroup" />
        <xs:attribute name="Rank" use="optional" default="1">
            <xs:simpleType>
                <xs:restriction base="xs:unsignedInt">
                    <xs:minInclusive value="1" />
                </xs:restriction>
            </xs:simpleType>
        </xs:attribute>
    </xs:complexType>
    <!-- #endregion -->
    <!-- #region CLR Types -->
    <xs:complexType name="CLRTypeDefinition" abstract="true">
        <xs:choice>
            <xs:element name="Namespace" type="md:ClrNamespaceType" />
            <xs:element name="DeclaringType" type="md:NonEmptyToken" />
        </xs:choice>
        <xs:attribute name="Name" type="md:ClrIdentifierType" use="required" />
        <xs:attribute name="ID" type="md:NonEmptyToken" use="required" />
    </xs:complexType>
    <!-- #region CLR Enum -->
    <xs:complexType name="ClrEnumMemberType" abstract="true">
        <xs:attribute name="Name" type="md:ClrIdentifierType" use="required" />
    </xs:complexType>
    <xs:complexType name="ByteClrEnumMemberType">
        <xs:complexContent>
            <xs:extension base="md:ClrEnumMemberType">
                <xs:attribute name="Value" type="xs:unsignedByte" use="optional" />
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="SByteClrEnumMemberType">
        <xs:complexContent>
            <xs:extension base="md:ClrEnumMemberType">
                <xs:attribute name="Value" type="xs:byte" use="optional" />
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="ShortClrEnumMemberType">
        <xs:complexContent>
            <xs:extension base="md:ClrEnumMemberType">
                <xs:attribute name="Value" type="xs:short" use="optional" />
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="UShortClrEnumMemberType">
        <xs:complexContent>
            <xs:extension base="md:ClrEnumMemberType">
                <xs:attribute name="Value" type="xs:unsignedShort" use="optional" />
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="IntClrEnumMemberType">
        <xs:complexContent>
            <xs:extension base="md:ClrEnumMemberType">
                <xs:attribute name="Value" type="xs:int" use="optional" />
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="UIntClrEnumMemberType">
        <xs:complexContent>
            <xs:extension base="md:ClrEnumMemberType">
                <xs:attribute name="Value" type="xs:unsignedInt" use="optional" />
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="LongClrEnumMemberType">
        <xs:complexContent>
            <xs:extension base="md:ClrEnumMemberType">
                <xs:attribute name="Value" type="xs:long" use="optional" />
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="ULongClrEnumMemberType">
        <xs:complexContent>
            <xs:extension base="md:ClrEnumMemberType">
                <xs:attribute name="Value" type="xs:unsignedLong" use="optional" />
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="ClrEnumType" abstract="true">
        <xs:complexContent>
            <xs:extension base="md:CLRTypeDefinition">
                <xs:attribute name="Flags" type="xs:boolean" use="optional" default="false" />
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="ByteClrEnumType">
        <xs:complexContent>
            <xs:extension base="md:ClrEnumType">
                <xs:sequence>
                    <xs:element name="Member" type="md:ByteClrEnumMemberType" maxOccurs="unbounded" />
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="SByteClrEnumType">
        <xs:complexContent>
            <xs:extension base="md:ClrEnumType">
                <xs:sequence>
                    <xs:element name="Member" type="md:SByteClrEnumMemberType" maxOccurs="unbounded" />
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="ShortClrEnumType">
        <xs:complexContent>
            <xs:extension base="md:ClrEnumType">
                <xs:sequence>
                    <xs:element name="Member" type="md:ShortClrEnumMemberType" maxOccurs="unbounded" />
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="UShortClrEnumType">
        <xs:complexContent>
            <xs:extension base="md:ClrEnumType">
                <xs:sequence>
                    <xs:element name="Member" type="md:UShortClrEnumMemberType" maxOccurs="unbounded" />
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="IntClrEnumType">
        <xs:complexContent>
            <xs:extension base="md:ClrEnumType">
                <xs:sequence>
                    <xs:element name="Member" type="md:IntClrEnumMemberType" maxOccurs="unbounded" />
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="UIntClrEnumType">
        <xs:complexContent>
            <xs:extension base="md:ClrEnumType">
                <xs:sequence>
                    <xs:element name="Member" type="md:UIntClrEnumMemberType" maxOccurs="unbounded" />
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="LongClrEnumType">
        <xs:complexContent>
            <xs:extension base="md:ClrEnumType">
                <xs:sequence>
                    <xs:element name="Member" type="md:LongClrEnumMemberType" maxOccurs="unbounded" />
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="ULongClrEnumType">
        <xs:complexContent>
            <xs:extension base="md:ClrEnumType">
                <xs:sequence>
                    <xs:element name="Member" type="md:ULongClrEnumMemberType" maxOccurs="unbounded" />
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <!-- #endregion -->
    <xs:complexType name="ClrTypeDefType">
        <xs:complexContent>
            <xs:extension base="md:CLRTypeDefinition">
                <xs:sequence>
                    <xs:element name="Argument" type="md:GenericArgumentType" minOccurs="0" maxOccurs="unbounded" />
                    <xs:element name="Implements" type="md:TypeReferenceType" minOccurs="0" maxOccurs="unbounded" />
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="ClrStructType">
        <xs:complexContent>
            <xs:extension base="md:ClrTypeDefType">
                <xs:attribute name="Serializable" type="xs:boolean" use="optional" default="false" />
                <xs:attribute name="Layout" type="md:StructLayoutType" use="optional" />
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="ClrClassType">
        <xs:complexContent>
            <xs:extension base="md:ClrTypeDefType">
                <xs:sequence>
                    <xs:element name="BaseType" type="md:TypeReferenceType" minOccurs="0" />
                </xs:sequence>
                <xs:attribute name="Sealed" type="xs:boolean" use="optional" default="false" />
                <xs:attribute name="Serializable" type="xs:boolean" use="optional" default="false" />
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <!-- #endregion -->
    <!-- #region Documentation -->

    <xs:complexType name="DocumentationCodeType" mixed="true">
        <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="see" type="md:DocumentationSeeType" />
        </xs:choice>
    </xs:complexType>

    <xs:complexType name="DocumentationListType">
        <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="item" type="md:DocumentationItemType" />
        </xs:choice>
        <xs:attribute name="type" type="md:DocumentationListKind" use="required" />
    </xs:complexType>

    <xs:complexType name="DocumentationBlockType" mixed="true">
        <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="see" type="md:DocumentationSeeType" />
            <xs:element name="list" type="md:DocumentationListType" />
            <xs:element name="c" type="md:DocumentationCodeType" />
            <xs:element name="para" type="md:DocumentationBlockType" />
            <xs:element name="strong" type="md:DocumentationBlockType" />
        </xs:choice>
    </xs:complexType>

    <xs:complexType name="DocumentationItemType" mixed="true">
        <xs:complexContent>
            <xs:extension base="md:DocumentationBlockType">
                <xs:choice minOccurs="0" maxOccurs="unbounded">
                    <xs:element name="term" type="md:DocumentationBlockType" />
                    <xs:element name="description" type="md:DocumentationBlockType" />
                </xs:choice>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="DocumentationSeeType" mixed="true">
        <xs:complexContent>
            <xs:extension base="md:DocumentationBlockType">
                <xs:attribute name="cref" />
                <xs:attribute name="href" />
                <xs:attribute name="langword" />
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="DocumentationSeeAlsoType">
        <xs:attribute name="cref" type="xs:string" />
        <xs:attribute name="href" type="xs:string" />
    </xs:complexType>

    <xs:complexType name="DocumentationExceptionType" mixed="true">
        <xs:attribute name="href" type="xs:string" />
    </xs:complexType>

    <xs:complexType name="DocumentationTypeParamType" mixed="true">
        <xs:complexContent>
            <xs:extension base="md:DocumentationBlockType">
                <xs:attribute name="name" type="xs:string" use="required" />
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="DocumentationParamType" mixed="true">
        <xs:complexContent>
            <xs:extension base="md:DocumentationBlockType">
                <xs:attribute name="name" type="xs:string" use="required" />
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="NamespaceDocumentationType">
        <xs:sequence>
            <xs:element name="summary" type="md:DocumentationBlockType" />
            <xs:element name="seealso" type="md:DocumentationSeeAlsoType" minOccurs="0" maxOccurs="unbounded" />
            <xs:element name="remarks" type="md:DocumentationBlockType" minOccurs="0" />
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="PropertyDocumentationType">
        <xs:sequence>
            <xs:element name="summary" type="md:DocumentationBlockType" />
            <xs:element name="value" type="md:DocumentationBlockType" />
            <xs:element name="seealso" type="md:DocumentationSeeAlsoType" minOccurs="0" maxOccurs="unbounded" />
            <xs:element name="remarks" type="md:DocumentationBlockType" minOccurs="0" />
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="EnumfieldDocumentationType">
        <xs:sequence>
            <xs:element name="summary" type="md:DocumentationBlockType" />
            <xs:element name="seealso" type="md:DocumentationSeeAlsoType" minOccurs="0" maxOccurs="unbounded" />
            <xs:element name="remarks" type="md:DocumentationBlockType" minOccurs="0" />
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="TypeDocumentationType">
        <xs:sequence>
            <xs:element name="summary" type="md:DocumentationBlockType" />
            <xs:element name="typeparam" type="md:DocumentationTypeParamType" minOccurs="0" maxOccurs="unbounded" />
            <xs:element name="seealso" type="md:DocumentationSeeAlsoType" minOccurs="0" maxOccurs="unbounded" />
            <xs:element name="remarks" type="md:DocumentationBlockType" minOccurs="0" />
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="FieldDocumentationType">
        <xs:sequence>
            <xs:element name="summary" type="md:DocumentationBlockType" />
            <xs:element name="seealso" type="md:DocumentationSeeAlsoType" minOccurs="0" maxOccurs="unbounded" />
            <xs:element name="remarks" type="md:DocumentationBlockType" minOccurs="0" />
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="ConstructorDocumentationType">
        <xs:sequence>
            <xs:element name="summary" type="md:DocumentationBlockType" />
            <xs:element name="param" type="md:DocumentationParamType" minOccurs="0" maxOccurs="unbounded" />
            <xs:element name="exception" type="md:DocumentationExceptionType" minOccurs="0" maxOccurs="unbounded" />
            <xs:element name="seealso" type="md:DocumentationSeeAlsoType" minOccurs="0" maxOccurs="unbounded" />
            <xs:element name="remarks" type="md:DocumentationBlockType" minOccurs="0" />
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="MethodDocumentationType">
        <xs:sequence>
            <xs:element name="summary" type="md:DocumentationBlockType" />
            <xs:element name="typeparam" type="md:DocumentationTypeParamType" minOccurs="0" maxOccurs="unbounded" />
            <xs:element name="param" type="md:DocumentationParamType" minOccurs="0" maxOccurs="unbounded" />
            <xs:element name="returns" type="md:DocumentationBlockType" minOccurs="0" />
            <xs:element name="exception" type="md:DocumentationExceptionType" minOccurs="0" maxOccurs="unbounded" />
            <xs:element name="seealso" type="md:DocumentationSeeAlsoType" minOccurs="0" maxOccurs="unbounded" />
            <xs:element name="remarks" type="md:DocumentationBlockType" minOccurs="0" />
        </xs:sequence>
    </xs:complexType>

    <!-- #endregion -->
    <!-- #region Static definitions -->
    <xs:complexType name="StaticFieldDefinitionType" abstract="true">
        <xs:sequence>
            <xs:element name="Documentation" type="md:TypeDocumentationType" minOccurs="0" />
        </xs:sequence>
        <xs:attribute name="Name" type="md:PublicIdentifierType" use="required" />
    </xs:complexType>
    <xs:complexType name="ConstUInt16DefinitionType">
        <xs:complexContent>
            <xs:extension base="md:StaticFieldDefinitionType">
                <xs:attribute name="Value" type="xs:unsignedShort" />
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="ConstInt32DefinitionType">
        <xs:complexContent>
            <xs:extension base="md:StaticFieldDefinitionType">
                <xs:attribute name="Value" type="xs:int" />
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="ConstUInt32DefinitionType">
        <xs:complexContent>
            <xs:extension base="md:StaticFieldDefinitionType">
                <xs:attribute name="Value" type="xs:unsignedInt" />
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="ConstInt64DefinitionType">
        <xs:complexContent>
            <xs:extension base="md:StaticFieldDefinitionType">
                <xs:attribute name="Value" type="xs:long" />
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="ConstInt64ProductType">
        <xs:complexContent>
            <xs:extension base="md:StaticFieldDefinitionType">
                <xs:sequence>
                    <xs:element name="Field">
                        <xs:complexType>
                            <xs:attribute name="Name" use="required" />
                        </xs:complexType>
                    </xs:element>
                    <xs:element name="Value" type="xs:long" />
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="StaticClassDefinitionType">
        <xs:sequence>
            <xs:element name="Documentation" type="md:TypeDocumentationType" minOccurs="0" />
            <xs:choice minOccurs="1" maxOccurs="unbounded">
                <xs:element name="UInt16" type="md:ConstUInt16DefinitionType" />
                <xs:element name="Int32" type="md:ConstInt32DefinitionType" />
                <xs:element name="UInt32" type="md:ConstUInt32DefinitionType" />
                <xs:element name="Int64" type="md:ConstInt64DefinitionType" />
                <xs:element name="Int64Product" type="md:ConstInt64ProductType" />
            </xs:choice>
        </xs:sequence>
        <xs:attribute name="Name" type="md:PublicIdentifierType" use="required" />
        <xs:attribute name="ID" type="md:ModelIdentifierType" use="required" />
        <xs:attribute name="Scope" type="md:ModelScopeType" use="optional" default="All" />
    </xs:complexType>
    <!-- #endregion -->
    <!-- #region Model Types -->
    <xs:complexType name="MemberDisplayAttribute">
        <xs:attribute name="Label" type="md:ModelIdentifierType" use="required" />
        <xs:attribute name="ShortName" type="md:ModelIdentifierType" use="optional" />
        <xs:attribute name="Description" type="md:ModelIdentifierType" use="optional" />
    </xs:complexType>

    <!-- #region Enum -->
    <xs:complexType name="EnumMemberDefinitionType" abstract="true">
        <xs:sequence>
            <xs:element name="Documentation" type="md:EnumfieldDocumentationType" />
            <xs:element name="Display" type="md:MemberDisplayAttribute" />
        </xs:sequence>
        <xs:attribute name="Name" type="md:PublicIdentifierType" use="required" />
        <xs:attribute name="MessageCode" type="md:MessageCodeType" use="optional" />
        <xs:attribute name="ErrorCode" type="md:ErrorCodeType" use="optional" />
        <xs:attribute name="StatusMessageLevel" type="md:StatusMessageLevelType" use="optional" />
    </xs:complexType>
    <xs:complexType name="ByteEnumMemberDefinitionType">
        <xs:complexContent>
            <xs:extension base="md:EnumMemberDefinitionType">
                <xs:attribute name="Value" type="xs:unsignedByte" use="optional" />
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="SByteEnumMemberDefinitionType">
        <xs:complexContent>
            <xs:extension base="md:EnumMemberDefinitionType">
                <xs:attribute name="Value" type="xs:byte" use="optional" />
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="ShortEnumMemberDefinitionType">
        <xs:complexContent>
            <xs:extension base="md:EnumMemberDefinitionType">
                <xs:attribute name="Value" type="xs:short" use="optional" />
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="UShortEnumMemberDefinitionType">
        <xs:complexContent>
            <xs:extension base="md:EnumMemberDefinitionType">
                <xs:attribute name="Value" type="xs:unsignedShort" use="optional" />
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="IntEnumMemberDefinitionType">
        <xs:complexContent>
            <xs:extension base="md:EnumMemberDefinitionType">
                <xs:attribute name="Value" type="xs:int" use="optional" />
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="UIntEnumMemberDefinitionType">
        <xs:complexContent>
            <xs:extension base="md:EnumMemberDefinitionType">
                <xs:attribute name="Value" type="xs:unsignedInt" use="optional" />
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="LongEnumMemberDefinitionType">
        <xs:complexContent>
            <xs:extension base="md:EnumMemberDefinitionType">
                <xs:attribute name="Value" type="xs:long" use="optional" />
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="ULongEnumMemberDefinitionType">
        <xs:complexContent>
            <xs:extension base="md:EnumMemberDefinitionType">
                <xs:attribute name="Value" type="xs:unsignedLong" use="optional" />
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="EnumDefinitionType" abstract="true">
        <xs:sequence>
            <xs:element name="Documentation" type="md:TypeDocumentationType" minOccurs="0" />
        </xs:sequence>
        <xs:attribute name="Name" type="md:PublicIdentifierType" use="required" />
        <xs:attribute name="ID" type="md:PublicIdentifierType" use="required" />
        <xs:attribute name="SourcePath" type="xs:string" use="required" />
        <xs:attribute name="Scope" type="md:ModelScopeType" use="optional" default="All" />
        <xs:attribute name="Flags" type="xs:boolean" use="optional" default="false" />
    </xs:complexType>
    <xs:complexType name="ByteEnumDefinitionType">
        <xs:complexContent>
            <xs:extension base="md:EnumDefinitionType">
                <xs:sequence>
                    <xs:element name="Field" type="md:ByteEnumMemberDefinitionType" minOccurs="0" maxOccurs="unbounded" />
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="SByteEnumDefinitionType">
        <xs:complexContent>
            <xs:extension base="md:EnumDefinitionType">
                <xs:sequence>
                    <xs:element name="Field" type="md:SByteEnumMemberDefinitionType" minOccurs="0" maxOccurs="unbounded" />
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="ShortEnumDefinitionType">
        <xs:complexContent>
            <xs:extension base="md:EnumDefinitionType">
                <xs:sequence>
                    <xs:element name="Field" type="md:ShortEnumMemberDefinitionType" minOccurs="0" maxOccurs="unbounded" />
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="UShortEnumDefinitionType">
        <xs:complexContent>
            <xs:extension base="md:EnumDefinitionType">
                <xs:sequence>
                    <xs:element name="Field" type="md:UShortEnumMemberDefinitionType" minOccurs="0" maxOccurs="unbounded" />
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="IntEnumDefinitionType">
        <xs:complexContent>
            <xs:extension base="md:EnumDefinitionType">
                <xs:sequence>
                    <xs:element name="Field" type="md:IntEnumMemberDefinitionType" minOccurs="0" maxOccurs="unbounded" />
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="UIntEnumDefinitionType">
        <xs:complexContent>
            <xs:extension base="md:EnumDefinitionType">
                <xs:sequence>
                    <xs:element name="Field" type="md:UIntEnumMemberDefinitionType" minOccurs="0" maxOccurs="unbounded" />
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="LongEnumDefinitionType">
        <xs:complexContent>
            <xs:extension base="md:EnumDefinitionType">
                <xs:sequence>
                    <xs:element name="Field" type="md:LongEnumMemberDefinitionType" minOccurs="0" maxOccurs="unbounded" />
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="ULongEnumDefinitionType">
        <xs:complexContent>
            <xs:extension base="md:EnumDefinitionType">
                <xs:sequence>
                    <xs:element name="Field" type="md:ULongEnumMemberDefinitionType" minOccurs="0" maxOccurs="unbounded" />
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <!-- #endregion -->

    <xs:complexType name="WindowsPropertyType">
        <xs:choice minOccurs="0">
            <xs:element name="Argument" type="md:GenericArgumentType" minOccurs="0" maxOccurs="unbounded" />
            <xs:group ref="md:AnyTypeReferenceGroup" minOccurs="0" maxOccurs="unbounded" />
        </xs:choice>
        <xs:attribute name="Name" type="md:NonEmptyToken" use="required" />
        <xs:attribute name="FormatID" type="md:GuidType" use="required" />
        <xs:attribute name="Category" type="md:NonEmptyToken" use="required" />
        <xs:attribute name="PropertyID" type="xs:unsignedShort" use="required" />
        <xs:attribute name="Link" type="xs:anyURI" use="required" />
    </xs:complexType>
    <xs:complexType name="PropertyDefinitionType">
        <xs:sequence>
            <xs:element name="Documentation" type="md:PropertyDocumentationType" />
            <xs:element name="Display" type="md:MemberDisplayAttribute" />
            <xs:group ref="md:AnyTypeReferenceGroup" />
            <xs:element name="WindowsProperty" type="md:WindowsPropertyType" minOccurs="0" />
        </xs:sequence>
        <xs:attribute name="Name" type="md:PublicIdentifierType" use="required" />
        <xs:attribute name="Access" type="md:PropertyAccessType" use="optional" default="ReadWrite" />
        <xs:attribute name="IsNotNull" type="xs:boolean" use="optional" default="false" />
    </xs:complexType>
    <xs:complexType name="MethodDefinitionType">
        <xs:sequence>
            <xs:element name="Documentation" type="md:MethodDocumentationType" minOccurs="0" />
            <xs:element name="TypeParameter" type="md:GenericArgumentType" minOccurs="0" maxOccurs="unbounded" />
            <xs:element name="Parameter" minOccurs="0" maxOccurs="unbounded">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="Default" type="xs:string" minOccurs="0" />
                        <xs:group ref="md:AnyTypeReferenceGroup" />
                    </xs:sequence>
                    <xs:attribute name="Name" type="xs:string" use="required" />
                    <xs:attribute name="IsOut" type="xs:boolean" use="optional" default="false" />
                    <xs:attribute name="DisallowNull" type="xs:boolean" use="optional" default="false" />
                </xs:complexType>
            </xs:element>
            <xs:group ref="md:AnyTypeReferenceGroup" />
        </xs:sequence>
        <xs:attribute name="Name" type="md:PublicIdentifierType" use="required" />
    </xs:complexType>
    <xs:complexType name="ModelInterfaceType">
        <xs:sequence>
            <xs:element name="Documentation" type="md:TypeDocumentationType" minOccurs="0" />
            <xs:element name="TypeParameter" type="md:GenericArgumentType" minOccurs="0" maxOccurs="unbounded" />
            <xs:element name="Implements" type="md:TypeReferenceType" minOccurs="0" maxOccurs="unbounded" />
            <xs:element name="Property" type="md:PropertyDefinitionType" minOccurs="0" maxOccurs="unbounded" />
            <xs:element name="Method" type="md:MethodDefinitionType" minOccurs="0" maxOccurs="unbounded" />
        </xs:sequence>
        <xs:attribute name="Name" type="md:PublicIdentifierType" use="required" />
        <xs:attribute name="ID" type="md:ModelIdentifierType" use="required" />
        <!-- TODO: Remove SourcePath when it is no longer needed -->
        <xs:attribute name="SourcePath" type="xs:string" use="required" />
        <xs:attribute name="IsEntity" type="xs:boolean" use="optional" default="false" />
        <xs:attribute name="Scope" type="md:ModelScopeType" use="optional" default="All" />
    </xs:complexType>
    <xs:complexType name="ResourceString" mixed="true">
        <xs:attribute name="ID" type="md:ModelIdentifierType" use="required" />
        <xs:attribute name="Comment" type="md:NonEmptyToken" use="optional" />
    </xs:complexType>
    <!-- #endregion -->
    <xs:element name="ModelGeneration">
        <xs:complexType>
            <xs:sequence>
                <xs:element name="Source" type="md:SourceFileType" minOccurs="0" maxOccurs="unbounded" />
                <xs:element name="ModelDefinitions">
                    <xs:complexType>
                        <xs:sequence>
                            <xs:choice minOccurs="0" maxOccurs="unbounded">
                                <xs:element name="ByteEnum" type="md:ByteEnumDefinitionType" />
                                <xs:element name="SByteEnum" type="md:SByteEnumDefinitionType" />
                                <xs:element name="ShortEnum" type="md:ShortEnumDefinitionType" />
                                <xs:element name="UShortEnum" type="md:UShortEnumDefinitionType" />
                                <xs:element name="IntEnum" type="md:IntEnumDefinitionType" />
                                <xs:element name="UIntEnum" type="md:UIntEnumDefinitionType" />
                                <xs:element name="LongEnum" type="md:LongEnumDefinitionType" />
                                <xs:element name="ULongEnum" type="md:ULongEnumDefinitionType" />
                            </xs:choice>
                            <xs:element name="ModelInterface" type="md:ModelInterfaceType" minOccurs="0" maxOccurs="unbounded" />
                            <xs:element name="StaticClass" type="md:StaticClassDefinitionType" minOccurs="0" maxOccurs="unbounded" />
                        </xs:sequence>
                    </xs:complexType>
                </xs:element>
                <xs:element name="CLR" minOccurs="0">
                    <xs:complexType>
                        <xs:choice minOccurs="1" maxOccurs="unbounded">
                            <xs:element name="ByteEnum" type="md:ByteClrEnumType" />
                            <xs:element name="SByteEnum" type="md:SByteClrEnumType" />
                            <xs:element name="ShortEnum" type="md:ShortClrEnumType" />
                            <xs:element name="UShortEnum" type="md:UShortClrEnumType" />
                            <xs:element name="IntEnum" type="md:IntClrEnumType" />
                            <xs:element name="UIntEnum" type="md:UIntClrEnumType" />
                            <xs:element name="LongEnum" type="md:LongClrEnumType" />
                            <xs:element name="ULongEnum" type="md:ULongClrEnumType" />
                            <xs:element name="Interface" type="md:ClrTypeDefType" />
                            <xs:element name="Struct" type="md:ClrStructType" />
                            <xs:element name="Class" type="md:ClrClassType" />
                        </xs:choice>
                    </xs:complexType>
                </xs:element>
            </xs:sequence>
        </xs:complexType>
        <xs:key name="PK_Source_Path">
            <xs:selector xpath="./md:Source" />
            <xs:field xpath="@Path" />
        </xs:key>
        <!-- #region PK_TypeDef_ID -->
        <xs:key name="PK_TypeDef_ID">
            <xs:selector xpath="./md:ModelDefinitions/md:*|./md:CLR/md:*" />
            <xs:field xpath="@ID" />
        </xs:key>
        <xs:keyref name="FK_Property_Type" refer="md:PK_TypeDef_ID">
            <xs:selector xpath="./md:CLR/md:Interface/md:Property/md:Type|./md:ModelDefinitions/md:ModelInterface/md:Property/md:Type" />
            <xs:field xpath="@Ref" />
        </xs:keyref>
        <xs:keyref name="FK_Base_Type" refer="md:PK_TypeDef_ID">
            <xs:selector xpath="./md:CLR/md:Class/md:Type" />
            <xs:field xpath="@Ref" />
        </xs:keyref>
        <!-- #endregion -->
        <!-- #region PK_TypeDef_ID -->
        <xs:key name="PK_EnumDef_ID">
            <xs:selector xpath="./md:ModelDefinitions/md:ByteEnum|./md:ModelDefinitions/md:SByteEnum|./md:ModelDefinitions/md:ShortEnum|./md:ModelDefinitions/md:UShortEnum|./md:ModelDefinitions/md:IntEnum|./md:ModelDefinitions/md:UIntEnum|./md:ModelDefinitions/md:LongEnum|./md:ModelDefinitions/md:ULongEnum|./md:CLR/md:ByteEnum|./md:CLR/md:SByteEnum|./md:CLR/md:ShortEnum|./md:CLR/md:UShortEnum|./md:CLR/md:IntEnum|./md:CLR/md:UIntEnum|./md:CLR/md:LongEnum|./md:CLR/md:ULongEnum" />
            <xs:field xpath="@ID" />
        </xs:key>
        <xs:keyref name="FK_Property_Enum" refer="md:PK_EnumDef_ID">
            <xs:selector xpath="./md:ModelDefinitions/md:ModelInterface/md:Property/md:Enum|./md:CLR/md:Interface/md:Property/md:Enum|./md:CLR/md:Class/md:Property/md:Enum|./md:CLR/md:Struct/md:Property/md:Enum" />
            <xs:field xpath="@Ref" />
        </xs:keyref>
        <!-- #endregion -->
        <!-- #region PK_Interface_ID -->
        <xs:key name="PK_Interface_ID">
            <xs:selector xpath="./md:CLR/md:Interface|./md:ModelDefinitions/md:ModelInterface" />
            <xs:field xpath="@ID" />
        </xs:key>
        <xs:keyref name="FK_Interface_Implements" refer="md:PK_Interface_ID">
            <xs:selector xpath="./md:CLR/md:Interface/md:Implements|./md:ModelDefinitions/md:ModelInterface/md:Implements" />
            <xs:field xpath="@Ref" />
        </xs:keyref>
        <!-- #endregion -->
        <!-- <xs:keyref refer="md:PK_TypeDef_ID" name="FK_SeeAlso_Cref">
            <xs:selector xpath="./md:ModelDefinitions/md:ModelInterface/md:Documentation/md:SeeAlso/md:Type" />
            <xs:field xpath="@Ref" />
        </xs:keyref> -->
        <!--
        <xs:key name="PK_Model_Id">
            <xs:selector xpath="./md:ModelDefinitions/md:ModelInterface" />
            <xs:field xpath="@Id" />
        </xs:key> -->
    </xs:element>
</xs:schema>
