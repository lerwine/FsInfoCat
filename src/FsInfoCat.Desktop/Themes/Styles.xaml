<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:View="clr-namespace:FsInfoCat.Desktop.View"
        xmlns:System="clr-namespace:System;assembly=mscorlib"
        mc:Ignorable="d"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    <Style x:Key="DefaultTextBoxBase" TargetType="TextBox">
        <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource TextBoxBorderBrush}"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="Padding" Value="2"/>
        <Style.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsInactiveSelectionHighlightEnabled" Value="True"/>
                    <Condition Property="IsSelectionActive" Value="False"/>
                </MultiTrigger.Conditions>
                <Setter Property="SelectionBrush" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}"/>
            </MultiTrigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="ReadOnlyValueTextBox" TargetType="TextBox" BasedOn="{StaticResource DefaultTextBoxBase}">
        <Setter Property="IsReadOnly"  Value="True"/>
        <Setter Property="BorderThickness" Value="0.5"/>
        <Setter Property="Padding" Value="1"/>
        <Setter Property="BorderBrush" Value="{DynamicResource ValueTextBoxBorderBrush}"/>
        <Setter Property="HorizontalScrollBarVisibility" Value="Hidden"/>
        <Setter Property="VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="TextWrapping" Value="Wrap"/>
    </Style>
    <Style x:Key="SingleLineTextBox" TargetType="TextBox" BasedOn="{StaticResource DefaultTextBoxBase}">
        <Setter Property="Height" Value="{DynamicResource DefaultTextBoxHeight}"/>
        <Setter Property="AcceptsReturn" Value="False"/>
        <Setter Property="AcceptsTab" Value="False"/>
        <Setter Property="TextWrapping" Value="NoWrap"/>
    </Style>
    <Style x:Key="SingleLineReadOnlyValueTextBox" TargetType="TextBox" BasedOn="{StaticResource SingleLineTextBox}">
        <Setter Property="IsReadOnly"  Value="True"/>
        <Setter Property="BorderThickness" Value="0.5"/>
        <Setter Property="Padding" Value="1"/>
        <Setter Property="BorderBrush" Value="{DynamicResource ValueTextBoxBorderBrush}"/>
    </Style>
    <Style x:Key="DefaultGroupBoxBase" TargetType="GroupBox">
        <Setter Property="BorderBrush" Value="#D5DFE5"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type GroupBox}">
                    <Grid SnapsToDevicePixels="true">
                        <Grid.Resources>
                            <BorderGapMaskConverter x:Key="BorderGapMaskConverter"/>
                        </Grid.Resources>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="6"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="6"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="6"/>
                        </Grid.RowDefinitions>
                        <Border Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="Transparent" CornerRadius="4" Grid.ColumnSpan="4" Grid.Column="0" Grid.RowSpan="3" Grid.Row="1"/>
                        <Border BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="White" CornerRadius="4" Grid.ColumnSpan="4" Grid.RowSpan="3" Grid.Row="1">
                            <Border.OpacityMask>
                                <MultiBinding Converter="{StaticResource BorderGapMaskConverter}" ConverterParameter="7">
                                    <Binding ElementName="Header" Path="ActualWidth"/>
                                    <Binding Path="ActualWidth" RelativeSource="{RelativeSource Self}"/>
                                    <Binding Path="ActualHeight" RelativeSource="{RelativeSource Self}"/>
                                </MultiBinding>
                            </Border.OpacityMask>
                            <Border BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" CornerRadius="3">
                                <Border BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="White" CornerRadius="2"/>
                            </Border>
                        </Border>
                        <Border x:Name="Header" Grid.Column="1" Padding="3,1,3,0" Grid.RowSpan="2" Grid.Row="0">
                            <ContentPresenter ContentSource="Header" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        </Border>
                        <ContentPresenter Grid.ColumnSpan="2" Grid.Column="1" Margin="{TemplateBinding Padding}" Grid.Row="2" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="DefaultButtonBase" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="{DynamicResource ButtonBackgroundBrush}"/>
        <Setter Property="BorderThickness" Value="{DynamicResource ThinBorderThickness}"/>
        <Setter Property="Height" Value="{DynamicResource DefaultButtonHeight}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ButtonBase}">
                    <Border x:Name="border" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" SnapsToDevicePixels="true">
                        <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Button.IsDefaulted" Value="true">
                            <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource Button.MouseOver.Background}"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.MouseOver.Border}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background}"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                            <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="DefaultPasswordBoxBase" TargetType="PasswordBox">
        <Setter Property="Height" Value="{DynamicResource DefaultTextBoxHeight}"/>
    </Style>
    <Style TargetType="Button" BasedOn="{StaticResource DefaultButtonBase}">
    </Style>
    <Style TargetType="TextBox" BasedOn="{StaticResource DefaultTextBoxBase}">
    </Style>
    <Style TargetType="GroupBox" BasedOn="{StaticResource DefaultGroupBoxBase}">
    </Style>
    <Style TargetType="PasswordBox" BasedOn="{StaticResource DefaultPasswordBoxBase}">
    </Style>
    <Style TargetType="GridSplitter">
        <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
        <Setter Property="PreviewStyle">
            <Setter.Value>
                <Style>
                    <Setter Property="Control.Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type Control}">
                                <Rectangle Fill="{DynamicResource TranslucentBlack50pctBrush}"/>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type GridSplitter}">
                    <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="TextBox" x:Key="TwoDigitNumericTextBox" BasedOn="{StaticResource SingleLineTextBox}">
        <Setter Property="MinWidth" Value="{DynamicResource DefaultTextBoxHeight}"/>
    </Style>
    <Style x:Key="MultiLineTextBox" TargetType="TextBox" BasedOn="{StaticResource DefaultTextBoxBase}">
        <Setter Property="MinHeight" Value="{DynamicResource DefaultMultiLineTextBoxHeight}"/>
        <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource TextBoxBorderBrush}"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="HorizontalScrollBarVisibility" Value="Hidden"/>
        <Setter Property="VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="Padding" Value="2"/>
        <Setter Property="AcceptsReturn" Value="True"/>
        <Setter Property="AcceptsTab" Value="True"/>
        <Setter Property="TextWrapping" Value="Wrap"/>
        <Style.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsInactiveSelectionHighlightEnabled" Value="True"/>
                    <Condition Property="IsSelectionActive" Value="False"/>
                </MultiTrigger.Conditions>
                <Setter Property="SelectionBrush" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}"/>
            </MultiTrigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="MultiLineReadOnlyValueTextBox" TargetType="TextBox" BasedOn="{StaticResource MultiLineTextBox}">
        <Setter Property="IsReadOnly"  Value="True"/>
        <Setter Property="BorderThickness" Value="0.5"/>
        <Setter Property="Padding" Value="1"/>
        <Setter Property="BorderBrush" Value="{DynamicResource ValueTextBoxBorderBrush}"/>
    </Style>
    <Style x:Key="InfoMessageTextBlock" TargetType="TextBlock">
        <Setter Property="Foreground" Value="{DynamicResource InfoDarkBrush}"/>
        <Setter Property="TextWrapping" Value="Wrap"/>
    </Style>
    <Style x:Key="SuccessMessageTextBlock" TargetType="TextBlock">
        <Setter Property="Foreground" Value="{DynamicResource SuccessDarkBrush}"/>
        <Setter Property="TextWrapping" Value="Wrap"/>
    </Style>
    <Style x:Key="WarningMessageTextBlock" TargetType="TextBlock">
        <Setter Property="Foreground" Value="{DynamicResource WarningDarkBrush}"/>
        <Setter Property="TextWrapping" Value="Wrap"/>
    </Style>
    <Style x:Key="ErrorMessageTextBlock" TargetType="TextBlock">
        <Setter Property="Foreground" Value="{DynamicResource ErrorDarkBrush}"/>
        <Setter Property="TextWrapping" Value="Wrap"/>
    </Style>
    <Style x:Key="FocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle Margin="2" StrokeDashArray="1 2" SnapsToDevicePixels="true" StrokeThickness="1" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="VerticalGridSplitterStyle" TargetType="{x:Type GridSplitter}">
        <Setter Property="Background" Value="{DynamicResource VerticalSeparatorBrush}"/>
        <Setter Property="ResizeDirection" Value="Columns"/>
        <Setter Property="Width" Value="{DynamicResource DefaultSpacingValue}"/>
        <Setter Property="VerticalAlignment" Value="Stretch"/>
        <Setter Property="Cursor" Value="SizeWE"/>
    </Style>
    <Style x:Key="HorizontalGridSplitterStyle" TargetType="{x:Type GridSplitter}">
        <Setter Property="Background" Value="{DynamicResource HorizontalSeparatorBrush}"/>
        <Setter Property="ResizeDirection" Value="Rows"/>
        <Setter Property="Height" Value="{DynamicResource DefaultSpacingValue}"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="Cursor" Value="SizeNS"/>
    </Style>
    <!--<Style TargetType="GroupBox" BasedOn="{StaticResource DefaultGroupBoxStyle}"/>-->
    <Style x:Key="DefaultGroupBoxStyle" TargetType="{x:Type GroupBox}" BasedOn="{StaticResource DefaultGroupBoxBase}">
        <Setter Property="BorderBrush" Value="{DynamicResource LightBorderBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
    </Style>
    <Style x:Key="PopupOuterBorder" TargetType="{x:Type Border}">
        <Setter Property="BorderBrush" Value="{DynamicResource PopupBorderBrush}"/>
        <Setter Property="BorderThickness" Value="{DynamicResource ThickBorderThickness}"/>
        <Setter Property="CornerRadius" Value="{DynamicResource PopupOuterBortderCornerRadius}"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Margin" Value="{DynamicResource DefaultSpacing}"/>
    </Style>
    <Style x:Key="PopupTitleBorder" TargetType="{x:Type Border}">
        <Setter Property="CornerRadius" Value="{DynamicResource PopupTitleCornerRadius}"/>
        <Setter Property="Padding" Value="{DynamicResource DefaultSpacing}"/>
    </Style>
    <Style x:Key="PopupContentBorder" TargetType="{x:Type Border}">
        <Setter Property="CornerRadius" Value="{DynamicResource PopupContentCornerRadius}"/>
        <Setter Property="Background" Value="White"/>
    </Style>
    <Style x:Key="DefaultButton" TargetType="{x:Type Button}" BasedOn="{StaticResource DefaultButtonBase}">
        <Setter Property="Width" Value="{DynamicResource DefaultButtonWidth}"/>
    </Style>
    <Style x:Key="SquareButton" TargetType="{x:Type Button}" BasedOn="{StaticResource DefaultButtonBase}">
        <Setter Property="Height" Value="{DynamicResource DefaultButtonHeight}"/>
        <Setter Property="Width" Value="{DynamicResource DefaultButtonHeight}"/>
    </Style>
    <Style x:Key="CommandButton" TargetType="{x:Type Button}" BasedOn="{StaticResource DefaultButtonBase}">
        <Setter Property="Height" Value="{DynamicResource DefaultTextBoxHeight}"/>
        <Setter Property="Width" Value="{DynamicResource DefaultTextBoxHeight}"/>
        <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
        <Setter Property="Background" Value="{StaticResource ButtonBackgroundBrush}"/>
        <Setter Property="BorderBrush" Value="{StaticResource LightBorderBrush}"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" SnapsToDevicePixels="true" Width="{TemplateBinding Width}" Height="{TemplateBinding Height}">
                        <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsDefaulted" Value="true">
                            <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource Button.MouseOver.Background}"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.MouseOver.Border}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background}"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                            <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="EditButton" TargetType="{x:Type Button}" BasedOn="{StaticResource CommandButton}">
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Image>
                        <Image.Source>
                            <DrawingImage>
                                <DrawingImage.Drawing>
                                    <DrawingGroup>
                                        <DrawingGroup.Children>
                                            <GeometryDrawing Brush="#00FFFFFF" Geometry="F1M16,16L0,16 0,0 16,0z" />
                                            <GeometryDrawing Brush="#FFF6F6F6" Geometry="F1M16,3.3413C16,4.1753,15.847,4.7793,15.04,5.5863L5.926,14.8303 1.121,16.0003 0.976000000000001,16.0003C0.436999999999999,16.0003,0,15.5633,0,15.0233L0,14.8743 1.223,10.0713 10.288,0.9783C10.92,0.3473 11.76,0.000300000000000189 12.654,0.000300000000000189 13.548,0.000300000000000189 14.388,0.3463 15.019,0.977300000000001 15.651,1.6083 16,2.4473 16,3.3413" />
                                            <GeometryDrawing Brush="#FFF0EFF1" Geometry="F1M2.9576,11.3223L2.3886,13.5933 4.6586,13.0273C4.4596,12.1853,3.7996,11.5243,2.9576,11.3223 M13.5886,2.4083C13.0746,1.8933,12.2366,1.8933,11.7206,2.4083L11.7196,2.4083 11.3226,2.8053 13.1916,4.6713 13.5886,4.2743 13.5906,4.2753 13.5886,4.2733C13.8386,4.0243 13.9756,3.6933 13.9756,3.3413 13.9756,2.9883 13.8386,2.6573 13.5886,2.4083 M10.5986,3.5283L12.4676,5.3943 5.5126,12.3403C5.1756,11.4883,4.4996,10.8103,3.6476,10.4703L3.6476,10.4703z" />
                                            <GeometryDrawing Brush="#FF00539C" Geometry="F1M13.5905,4.2755L13.5885,4.2745 13.1915,4.6715 11.3225,2.8055 11.7195,2.4075 11.7205,2.4085C12.2365,1.8935 13.0745,1.8935 13.5885,2.4085 13.8385,2.6575 13.9755,2.9885 13.9755,3.3415 13.9755,3.6935 13.8385,4.0245 13.5885,4.2735z M5.5125,12.3405C5.1755,11.4885,4.4995,10.8105,3.6475,10.4705L3.6475,10.4705 10.5985,3.5285 12.4675,5.3945z M2.3885,13.5935L2.3885,13.5935 2.3885,13.5935 2.9575,11.3225C3.7995,11.5245,4.4595,12.1855,4.6585,13.0275z M10.9965,1.6845L10.9965,1.6845 2.1235,10.5825 0.999500000000001,15.0005 5.4135,13.9255 14.3325,4.8785C14.9475,4.2645 14.9995,3.9125 14.9995,3.3415 14.9995,2.7155 14.7555,2.1265 14.3125,1.6845 13.3985,0.771499999999999 11.9105,0.771499999999999 10.9965,1.6845" />
                                        </DrawingGroup.Children>
                                    </DrawingGroup>
                                </DrawingImage.Drawing>
                            </DrawingImage>
                        </Image.Source>
                    </Image>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="DeleteButton" TargetType="{x:Type Button}" BasedOn="{StaticResource CommandButton}">
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Image>
                        <Image.Source>
                            <DrawingImage>
                                <DrawingImage.Drawing>
                                    <DrawingGroup>
                                        <DrawingGroup.Children>
                                            <GeometryDrawing Brush="#00FFFFFF" Geometry="F1M16,16L0,16 0,0 16,0z" />
                                            <GeometryDrawing Brush="#FFF6F6F6" Geometry="F1M4,16C2.897,16,2,15.103,2,14L2,5 1,5 1,2 4,2C4,0.897,4.897,0,6,0L9,0C10.103,0,11,0.897,11,2L14,2 14,5 13,5 13,14C13,15.103,12.103,16,11,16z" />
                                            <GeometryDrawing Brush="#FFEFEFF0" Geometry="F1M10,12L9,12 9,6 10,6z M8,12L7,12 7,6 8,6z M6,12L5,12 5,6 6,6z M4,14L11,14 11,4 4,4z" />
                                            <GeometryDrawing Brush="#FF424242" Geometry="F1M11,4L4,4 4,14 11,14z M6,3L9,3 9,2 6,2z M13,3L13,4 12,4 12,14C12,14.552,11.552,15,11,15L4,15C3.448,15,3,14.552,3,14L3,4 2,4 2,3 5,3 5,2C5,1.448,5.448,1,6,1L9,1C9.552,1,10,1.448,10,2L10,3z M10,6L9,6 9,12 10,12z M8,6L7,6 7,12 8,12z M6,12L5,12 5,6 6,6z" />
                                        </DrawingGroup.Children>
                                    </DrawingGroup>
                                </DrawingImage.Drawing>
                            </DrawingImage>
                        </Image.Source>
                    </Image>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ActivateButton" TargetType="{x:Type Button}" BasedOn="{StaticResource CommandButton}">
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Image>
                        <Image.Source>
                            <DrawingImage>
                                <DrawingImage.Drawing>
                                    <DrawingGroup>
                                        <DrawingGroup.Children>
                                            <GeometryDrawing Brush="#00FFFFFF" Geometry="F1M16,16L0,16 0,0 16,0z" />
                                            <GeometryDrawing Brush="#FFF6F6F6" Geometry="F1M8,16C3.582,16 0,12.419 0,8 0,3.581 3.582,0 8,0 12.418,0 16,3.581 16,8 16,12.419 12.418,16 8,16" />
                                            <GeometryDrawing Brush="#FF424242" Geometry="F1M11.5215,9.4785L9.0005,6.9565 9.0005,12.9995 7.0005,12.9995 7.0005,6.9565 4.4785,9.4785 3.0635,8.0635 8.0005,2.9995 12.9355,8.0635z M8.0005,0.999500000000001C4.1335,0.999500000000001 1.0005,4.1335 1.0005,7.9995 1.0005,11.8665 4.1335,14.9995 8.0005,14.9995 11.8665,14.9995 15.0005,11.8665 15.0005,7.9995 15.0005,4.1335 11.8665,0.999500000000001 8.0005,0.999500000000001" />
                                            <GeometryDrawing Brush="#FFF0EFF1" Geometry="F1M8,3L12.936,8.064 11.521,9.479 9,6.956 9,13 7,13 7,6.956 4.478,9.479 3.064,8.064z" />
                                        </DrawingGroup.Children>
                                    </DrawingGroup>
                                </DrawingImage.Drawing>
                            </DrawingImage>
                        </Image.Source>
                    </Image>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="DeactivateButton" TargetType="{x:Type Button}" BasedOn="{StaticResource CommandButton}">
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Image>
                        <Image.Source>
                            <DrawingImage>
                                <DrawingImage.Drawing>
                                    <DrawingGroup>
                                        <DrawingGroup.Children>
                                            <GeometryDrawing Brush="#00FFFFFF" Geometry="F1M16,16L0,16 0,0 16,0z" />
                                            <GeometryDrawing Brush="#FFF6F6F6" Geometry="F1M0,8C0,3.582 3.582,0 8,0 12.418,0 16,3.582 16,8 16,12.418 12.418,16 8,16 3.582,16 0,12.418 0,8" />
                                            <GeometryDrawing Brush="#FF1BA1E2" Geometry="F1M8,14L2.418,8.29 3.832,6.876 7,10.044 7,3 9,3 9,10.044 12.168,6.876 13.582,8.29z M8,1C4.135,1 1,4.134 1,8 1,11.865 4.135,15 8,15 11.865,15 15,11.865 15,8 15,4.134 11.865,1 8,1" />
                                            <GeometryDrawing Brush="#FFFFFFFF" Geometry="F1M8,14L2.418,8.29 3.832,6.876 7,10.044 7,3 9,3 9,10.044 12.168,6.876 13.582,8.29z" />
                                        </DrawingGroup.Children>
                                    </DrawingGroup>
                                </DrawingImage.Drawing>
                            </DrawingImage>
                        </Image.Source>
                    </Image>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="AddNewButton" TargetType="{x:Type Button}" BasedOn="{StaticResource CommandButton}">
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Image>
                        <Image.Source>
                            <DrawingImage>
                                <DrawingImage.Drawing>
                                    <DrawingGroup>
                                        <DrawingGroup.Children>
                                            <GeometryDrawing Brush="#00FFFFFF" Geometry="F1M16,16L0,16 0,0 16,0z" />
                                            <GeometryDrawing Brush="#FFF6F6F6" Geometry="F1M6.0003,-0.000199999999999534L6.0003,5.9998 0.000300000000000189,5.9998 0.000300000000000189,9.9998 6.0003,9.9998 6.0003,15.9998 10.0003,15.9998 10.0003,9.9998 16.0003,9.9998 16.0003,5.9998 10.0003,5.9998 10.0003,-0.000199999999999534z" />
                                            <GeometryDrawing Brush="#FF388934" Geometry="F1M15,9L9,9 9,15 7,15 7,9 1,9 1,7 7,7 7,1 9,1 9,7 15,7z" />
                                        </DrawingGroup.Children>
                                    </DrawingGroup>
                                </DrawingImage.Drawing>
                            </DrawingImage>
                        </Image.Source>
                    </Image>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="OpenButton" TargetType="{x:Type Button}" BasedOn="{StaticResource CommandButton}">
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Image>
                        <Image.Source>
                            <DrawingImage>
                                <DrawingImage.Drawing>
                                    <DrawingGroup>
                                        <DrawingGroup.Children>
                                            <GeometryDrawing Brush="#00FFFFFF" Geometry="F1M16,16L0,16 0,0 16,0z" />
                                            <GeometryDrawing Brush="#FFF6F6F6" Geometry="F1M16,6.6719L16,7.3279 10.207,13.1209 7.379,10.2929 8.672,8.9999 5.5,8.9999C4.673,8.9999 4,9.6729 4,10.4999 4,11.3269 4.673,11.9999 5.5,11.9999L6.5,11.9999 6.5,15.9999 5.5,15.9999C2.467,15.9999 0,13.5319 0,10.4999 0,7.4669 2.467,4.9999 5.5,4.9999L8.672,4.9999 7.379,3.7069 10.207,0.878900000000001z" />
                                            <GeometryDrawing Brush="#FF00529C" Geometry="F1M14.9141,7L10.2071,11.707 8.7931,10.293 11.0861,8 5.5001,8C4.1221,8 3.0001,9.121 3.0001,10.5 3.0001,11.879 4.1221,13 5.5001,13L5.5001,15C3.0181,15 1.0001,12.981 1.0001,10.5 1.0001,8.019 3.0181,6 5.5001,6L11.0861,6 8.7931,3.707 10.2071,2.293z" />
                                        </DrawingGroup.Children>
                                    </DrawingGroup>
                                </DrawingImage.Drawing>
                            </DrawingImage>
                        </Image.Source>
                    </Image>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="FilterButton" TargetType="{x:Type Button}" BasedOn="{StaticResource CommandButton}">
        <Setter Property="ContentTemplate">
        <Setter.Value>
            <DataTemplate>
                <Image>
                    <Image.Source>
                        <DrawingImage>
                            <DrawingImage.Drawing>
                                <DrawingGroup>
                                    <DrawingGroup.Children>
                                        <GeometryDrawing Brush="#00FFFFFF" Geometry="F1M16,16L0,16 0,0 16,0z" />
                                        <GeometryDrawing Brush="#FFF6F6F6" Geometry="F1M0.0081,1.9996L6.0001,10.0446 6.0001,15.9996 10.0001,15.9996 10.0001,10.0446 15.9911,1.9996z" />
                                        <GeometryDrawing Brush="#FF424242" Geometry="F1M14,3L9,9.714 9,15 7,15 7,9.714 2,3z" />
                                    </DrawingGroup.Children>
                                </DrawingGroup>
                            </DrawingImage.Drawing>
                        </DrawingImage>
                    </Image.Source>
                </Image>
            </DataTemplate>
        </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="StartButton" TargetType="{x:Type Button}" BasedOn="{StaticResource CommandButton}">
        <Setter Property="ContentTemplate">
        <Setter.Value>
            <DataTemplate>
                <Image>
                    <Image.Source>
                        <DrawingImage>
                            <DrawingImage.Drawing>
                                <DrawingGroup>
                                    <DrawingGroup>
                                        <DrawingGroup.Children>
                                            <GeometryDrawing Brush="#FFF6F6F6" Geometry="F1M0,8C0,3.582 3.582,0 8,0 12.418,0 16,3.582 16,8 16,12.418 12.418,16 8,16 3.582,16 0,12.418 0,8" />
                                            <GeometryDrawing Brush="#FF329932" Geometry="F1M6,12L6,4 12,8z M8,1C4.135,1 1,4.134 1,8 1,11.865 4.135,15 8,15 11.865,15 15,11.865 15,8 15,4.134 11.865,1 8,1" />
                                            <GeometryDrawing Brush="#FFFFFFFF" Geometry="F1M6,4L12,8 6,12z" />
                                        </DrawingGroup.Children>
                                    </DrawingGroup>
                                </DrawingGroup>
                            </DrawingImage.Drawing>
                        </DrawingImage>
                    </Image.Source>
                </Image>
            </DataTemplate>
        </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="StopButton" TargetType="{x:Type Button}" BasedOn="{StaticResource CommandButton}">
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Image>
                        <Image.Source>
                            <DrawingImage>
                                <DrawingImage.Drawing>
                                    <DrawingGroup>
                                        <DrawingGroup>
                                            <DrawingGroup.Children>
                                                <GeometryDrawing Brush="#00FFFFFF" Geometry="F1M16,16L0,16 0,0 16,0z" />
                                                <GeometryDrawing Brush="#FFF6F6F6" Geometry="F1M0,8C0,3.582 3.582,0 8,0 12.418,0 16,3.582 16,8 16,12.418 12.418,16 8,16 3.582,16 0,12.418 0,8" />
                                                <GeometryDrawing Brush="#FFE41400" Geometry="F1M11,11L5,11 5,5 11,5z M8,1C4.135,1 1,4.134 1,8 1,11.865 4.135,15 8,15 11.865,15 15,11.865 15,8 15,4.134 11.865,1 8,1" />
                                                <GeometryDrawing Brush="#FFFFFFFF" Geometry="F1M11,11L5,11 5,5 11,5z" />
                                            </DrawingGroup.Children>
                                        </DrawingGroup>
                                    </DrawingGroup>
                                </DrawingImage.Drawing>
                            </DrawingImage>
                        </Image.Source>
                    </Image>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="LogButton" TargetType="{x:Type Button}" BasedOn="{StaticResource CommandButton}">
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Image>
                        <Image.Source>
                            <DrawingImage>
                                <DrawingImage.Drawing>
                                    <DrawingGroup>
                                        <DrawingGroup>
                                            <DrawingGroup.Children>
                                                <GeometryDrawing Brush="#00FFFFFF" Geometry="F1M16,16L0,16 0,0 16,0z" />
                                                <GeometryDrawing Brush="#FFF6F6F6" Geometry="F1M1,15L15,15 15,0 1,0z" />
                                                <GeometryDrawing Brush="#FFEFEFF0" Geometry="F1M11,5L11,6 6,6 6,5 6,4 11,4z M4,13L13,13 13,2 4,2z" />
                                                <GeometryDrawing Brush="#FF424242" Geometry="F1M11,4L11,5 11,6 6,6 6,5 6,4z M13,13L4,13 4,2 13,2z M2,1L2,2 3,2 3,3 2,3 2,4 3,4 3,5 2,5 2,6 3,6 3,7 2,7 2,8 3,8 3,9 2,9 2,10 3,10 3,11 2,11 2,12 3,12 3,13 2,13 2,14 14,14 14,1z" />
                                            </DrawingGroup.Children>
                                        </DrawingGroup>
                                    </DrawingGroup>
                                </DrawingImage.Drawing>
                            </DrawingImage>
                        </Image.Source>
                    </Image>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>
