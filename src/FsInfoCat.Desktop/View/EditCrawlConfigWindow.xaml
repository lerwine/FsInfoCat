<Window
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:vm="clr-namespace:FsInfoCat.Desktop.ViewModel"
        xmlns:cvt="clr-namespace:FsInfoCat.Desktop.Converters"
        xmlns:f="clr-namespace:FsInfoCat;assembly=FsInfoCat"
        xmlns:local="clr-namespace:FsInfoCat.Desktop.View"
        xmlns:desktop="clr-namespace:FsInfoCat.Desktop"
      xmlns:res="clr-namespace:FsInfoCat.Properties;assembly=FsInfoCat"
        xmlns:v="clr-namespace:FsInfoCat.Desktop.Validation"
        xmlns:b="http://schemas.microsoft.com/xaml/behaviors" x:Class="FsInfoCat.Desktop.View.EditCrawlConfigWindow"
        mc:Ignorable="d" DataContext="{DynamicResource VM}"
        Title="{Binding WindowTitle, Mode=OneWay}" Height="600" Width="800">
    <Window.Resources>
        <vm:EditCrawlConfigVM x:Key="VM"/>
        <cvt:InverseBooleanConverter x:Key="InverseBoolean"/>
        <cvt:CrawlStatusToStringConverter x:Key="CrawlStatusToDescription" Display="Description" />
        <cvt:DateTimeToStringConverter x:Key="DateTimeToString"/>
        <cvt:DateTimeToStringConverter x:Key="CrawlStartToString" NullSource="(never started)"/>
    </Window.Resources>
    <b:Interaction.Triggers>
        <b:EventTrigger EventName="Closing">
            <b:CallMethodAction TargetObject="{Binding Mode=OneWay}" MethodName="OnWindowClosing"/>
        </b:EventTrigger>
    </b:Interaction.Triggers>
    <Grid>
        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup x:Name="BgOpStatusStateGroup">
                <VisualState x:Name="OpNotActive">
                    <Storyboard>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="outerPopupBorder" Storyboard.TargetProperty="(UIElement.Visibility)">
                            <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="{x:Static Visibility.Collapsed}"/>
                        </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                </VisualState>
                <VisualState x:Name="OpActive">
                    <Storyboard>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="outerPopupBorder" Storyboard.TargetProperty="(UIElement.Visibility)">
                            <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="{x:Static Visibility.Visible}"/>
                        </ObjectAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="popupButton" Storyboard.TargetProperty="(ContentControl.Content)">
                            <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="Cancel"/>
                        </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                </VisualState>
                <VisualState x:Name="OpAborted">
                    <Storyboard>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="outerPopupBorder" Storyboard.TargetProperty="(UIElement.Visibility)">
                            <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="{x:Static Visibility.Visible}"/>
                        </ObjectAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="popupButton" Storyboard.TargetProperty="(ContentControl.Content)">
                            <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="OK"/>
                        </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                </VisualState>
            </VisualStateGroup>
            <VisualStateGroup x:Name="MessageLevelStateGroup">
                <VisualState x:Name="Warning">
                    <Storyboard>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="innerPopupBorder" Storyboard.TargetProperty="(Border.Background)">
                            <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="{StaticResource PopupTitleWarningBackgroundBrush}"/>
                        </ObjectAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="popupMessageTextBlock" Storyboard.TargetProperty="(TextBlock.Foreground)">
                            <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="{StaticResource WarningDarkBrush}"/>
                        </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                </VisualState>
                <VisualState x:Name="Error">
                    <Storyboard>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="innerPopupBorder" Storyboard.TargetProperty="(Border.Background)">
                            <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="{StaticResource PopupTitleErrorgBackgroundBrush}"/>
                        </ObjectAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="popupMessageTextBlock" Storyboard.TargetProperty="(TextBlock.Foreground)">
                            <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="{StaticResource ErrorDarkBrush}"/>
                        </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                </VisualState>
                <VisualState x:Name="Info">
                    <Storyboard>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="innerPopupBorder" Storyboard.TargetProperty="(Border.Background)">
                            <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="{StaticResource PopupTitleInfoBackgroundBrush}"/>
                        </ObjectAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="popupMessageTextBlock" Storyboard.TargetProperty="(TextBlock.Foreground)">
                            <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="{StaticResource InfoDarkBrush}"/>
                        </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>
        <StackPanel>
            <Label Content="Display Name" FontWeight="Bold" Padding="{DynamicResource DefaultSpacingTopLeftRight}"/>
            <TextBox Margin="{DynamicResource DefaultSpacingLeftRight}" MaxLines="1">
                <TextBox.Text>
                    <Binding Path="DisplayName" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged">
                        <Binding.ValidationRules>
                            <v:NormalizedStringValidationRule IsRequired="True" MaxLengthValue="{x:Static f:DbConstants.DbColMaxLen_LongName}" RequiredErrorMessage="{x:Static res:Resources.ErrorMessage_DisplayNameRequired}" MaxLengthErrorMessage="{x:Static res:Resources.ErrorMessage_DisplayNameLength}"/>
                        </Binding.ValidationRules>
                    </Binding>
                </TextBox.Text>
            </TextBox>
            <Label Content="Path" FontWeight="Bold" Padding="{DynamicResource DefaultSpacingTopLeftRight}"/>
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>
                <TextBox Margin="{DynamicResource DefaultSpacingLeft}" IsReadOnly="True" MaxLines="1">
                    <TextBox.Text>
                        <Binding Path="Path" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged">
                            <Binding.ValidationRules>
                                <v:NormalizedStringValidationRule IsRequired="True" MaxLengthValue="0" />
                            </Binding.ValidationRules>
                        </Binding>
                    </TextBox.Text>
                </TextBox>
                <Button Content="..." Grid.Column="1" Margin="{DynamicResource DefaultSpacingRight}" Command="{Binding SelectRootCommand, Mode=OneWay}" Height="{DynamicResource DefaultTextBoxHeight}" Width="{DynamicResource DefaultTextBoxHeight}" Padding="1,-5,1,1"/>
            </Grid>
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition/>
                </Grid.RowDefinitions>
                <Label Content="Max Recursion Depth" FontWeight="Bold" Padding="{DynamicResource DefaultSpacingTopLeftRight}"/>
                <TextBox Margin="{DynamicResource DefaultSpacingLeftRight}" MaxLines="1" Text="{Binding MaxRecursionDepth, Mode=TwoWay}" Grid.Row="1" />
                <CheckBox Grid.Row="2" Content="Max Total Items" HorizontalAlignment="Left" Margin="{DynamicResource DefaultSpacingTopLeftRight}" IsChecked="{Binding LimitTotalItems, Mode=TwoWay}" FontWeight="Bold" />
                <TextBox Margin="{DynamicResource DefaultSpacingLeftRight}" MaxLines="1" Text="{Binding MaxTotalItems, Mode=TwoWay}" IsEnabled="{Binding LimitTotalItems}" Grid.Row="3" VerticalAlignment="Top" />
                <GroupBox Margin="{DynamicResource DefaultSpacingTopLeftRight}" Header="Status" Grid.Column="1" Grid.RowSpan="4" VerticalAlignment="Top">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition/>
                            <ColumnDefinition/>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition/>
                            <RowDefinition/>
                            <RowDefinition/>
                            <RowDefinition/>
                            <RowDefinition/>
                        </Grid.RowDefinitions>
                        <Label Content="Status:" FontWeight="Bold" />
                        <TextBlock Grid.Column="1" Grid.ColumnSpan="2" Text="{Binding StatusValue, Converter={StaticResource CrawlStatusToDescription}, Mode=OneWay}" Padding="{DynamicResource DefaultSpacingTopRight}"/>
                        <CheckBox Content="Enabled" Grid.Column="3" IsChecked="{Binding IsEnabled, Mode=TwoWay}" Margin="{DynamicResource DefaultSpacingTopLeftRight}" />
                        <Label Content="Last Crawl Start" Grid.Row="1" Grid.ColumnSpan="2" FontWeight="Bold" Padding="{DynamicResource DefaultSpacingTopLeftRight}"/>
                        <TextBlock Grid.Row="2" Grid.ColumnSpan="2" Text="{Binding LastCrawlStart, Converter={StaticResource CrawlStartToString}, Mode=OneWay}" Padding="{DynamicResource DefaultSpacingLeftRight}"/>
                        <Label Content="Last Crawl End" Grid.Row="1" Grid.Column="2" Grid.ColumnSpan="2" FontWeight="Bold" Padding="{DynamicResource DefaultSpacingTopLeftRight}"/>
                        <TextBlock Grid.Row="2" Grid.Column="2" Grid.ColumnSpan="2" Text="{Binding LastCrawlEnd, Converter={StaticResource DateTimeToString}, Mode=OneWay}" Padding="{DynamicResource DefaultSpacingLeftRight}"/>
                        <Label Content="Next Scheduled Crawl Start" Grid.Row="3" Grid.ColumnSpan="4" Padding="{DynamicResource DefaultSpacingTopLeftRight}" FontWeight="Bold"/>
                        <TextBlock Grid.Row="4" Grid.ColumnSpan="4" Text="{Binding NextScheduledStart, Converter={StaticResource DateTimeToString}, Mode=OneWay}" Padding="{DynamicResource DefaultSpacingLeftRight}"/>
                    </Grid>
                </GroupBox>
            </Grid>
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <GroupBox Margin="{DynamicResource DefaultSpacingTopLeftRight}" VerticalAlignment="Top">
                    <GroupBox.Header>
                        <CheckBox Content="Maximum Crawl Duration" Margin="{DynamicResource DefaultSpacingLeft}" IsChecked="{Binding LimitTTL, Mode=TwoWay}" FontWeight="Bold"/>
                    </GroupBox.Header>
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <Label Content="Days" Grid.ColumnSpan="2" Padding="{DynamicResource DefaultSpacingLeftRight}" />
                        <TextBox Grid.Row="1" Margin="{DynamicResource DefaultSpacingLeftRight}" MaxLines="1" Text="{Binding TtlDays, Mode=TwoWay}" IsEnabled="{Binding LimitTTL}" />
                        <TextBlock Grid.Row="1" Text=", " Grid.Column="1" VerticalAlignment="Bottom"/>
                        <Label Content="Hours" Grid.Column="2" Grid.ColumnSpan="2" Padding="{DynamicResource DefaultSpacingLeftRight}" />
                        <TextBox Grid.Row="1" Grid.Column="2" Margin="{DynamicResource DefaultSpacingLeftRight}" MaxLines="1" Text="{Binding TtlHours, Mode=TwoWay}" IsEnabled="{Binding LimitTTL}" />
                        <TextBlock Grid.Row="1" Text=":" Grid.Column="3"/>
                        <Label Content="Minutes" Grid.Column="4" Grid.ColumnSpan="2" Padding="{DynamicResource DefaultSpacingLeftRight}" />
                        <TextBox Grid.Row="1" Grid.Column="4" Margin="{DynamicResource DefaultSpacingLeftRight}" MaxLines="1" Text="{Binding TtlMinutes, Mode=TwoWay}" IsEnabled="{Binding LimitTTL}" />
                        <TextBlock Grid.Row="1" Text=":" Grid.Column="5"/>
                        <Label Content="Seconds" Grid.Column="6" Grid.ColumnSpan="2" Padding="{DynamicResource DefaultSpacingLeftRight}" />
                        <TextBox Grid.Row="1" Grid.Column="6" Margin="{DynamicResource DefaultSpacingLeftRight}" MaxLines="1" Text="{Binding TtlSeconds, Mode=TwoWay}" IsEnabled="{Binding LimitTTL}" />
                    </Grid>
                </GroupBox>
                <GroupBox Grid.Column="1" Margin="{DynamicResource DefaultSpacingTopLeftRight}" VerticalAlignment="Top">
                    <GroupBox.Header>
                        <CheckBox Content="Auto Reschedule" Margin="{DynamicResource DefaultSpacingLeft}" IsChecked="{Binding AutoReschedule, Mode=TwoWay}" FontWeight="Bold" />
                    </GroupBox.Header>
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <Label Content="Days" Grid.ColumnSpan="2" Padding="{DynamicResource DefaultSpacingLeftRight}" />
                        <TextBox Grid.Row="1" Margin="{DynamicResource DefaultSpacingLeftRight}" MaxLines="1" Text="{Binding RescheduleDays, Mode=TwoWay}" IsEnabled="{Binding AutoReschedule}" />
                        <TextBlock Grid.Row="1" Text=", " Grid.Column="1" Padding="{DynamicResource DefaultSpacingLeftRight}"/>
                        <Label Content="Hours" Grid.Column="2" Grid.ColumnSpan="2" Padding="{DynamicResource DefaultSpacingLeftRight}" />
                        <TextBox Grid.Row="1" Grid.Column="2" Margin="{DynamicResource DefaultSpacingLeftRight}" MaxLines="1" Text="{Binding RescheduleHours, Mode=TwoWay}" IsEnabled="{Binding AutoReschedule}" />
                        <TextBlock Grid.Row="1" Text=":" Grid.Column="3" Padding="{DynamicResource DefaultSpacingLeftRight}"/>
                        <Label Content="Minutes" Grid.Column="4" Grid.ColumnSpan="2" Padding="{DynamicResource DefaultSpacingLeftRight}" />
                        <TextBox Grid.Row="1" Grid.Column="4" Margin="{DynamicResource DefaultSpacingLeftRight}" MaxLines="1" Text="{Binding RescheduleMinutes, Mode=TwoWay}" IsEnabled="{Binding AutoReschedule}" />
                        <TextBlock Grid.Row="1" Text=":" Grid.Column="5" Padding="{DynamicResource DefaultSpacingLeftRight}"/>
                        <Label Content="Seconds" Grid.Column="6" Grid.ColumnSpan="2" Padding="{DynamicResource DefaultSpacingLeftRight}" />
                        <TextBox Grid.Row="1" Grid.Column="6" Margin="{DynamicResource DefaultSpacingLeftRight}" MaxLines="1" Text="{Binding RescheduleSeconds, Mode=TwoWay}" IsEnabled="{Binding AutoReschedule}" />
                        <RadioButton Grid.Row="2" Grid.ColumnSpan="4" Content="After last scheduled start" Margin="{DynamicResource DefaultSpacingTopLeftRight}" IsChecked="{Binding RescheduleFromJobEnd, Converter={StaticResource InverseBoolean}}" GroupName="RescheduleFromJobEnd" IsEnabled="{Binding AutoReschedule}" />
                        <RadioButton Grid.Row="2" Grid.Column="4" Grid.ColumnSpan="3" Content="After last completion time" Margin="{DynamicResource DefaultSpacingTopLeftRight}" IsChecked="{Binding RescheduleFromJobEnd, Mode=TwoWay}" GroupName="RescheduleFromJobEnd" IsEnabled="{Binding AutoReschedule}" />
                        <CheckBox Grid.Row="3" Grid.ColumnSpan="7" Content="Prevent Reschedule after failure" Margin="{DynamicResource DefaultSpacingTopLeftRight}" IsChecked="{Binding RescheduleAfterFail, Mode=TwoWay}" IsEnabled="{Binding AutoReschedule}" />
                    </Grid>
                </GroupBox>
            </Grid>
            <GroupBox Margin="{DynamicResource DefaultSpacingTopLeftRight}">
                <GroupBox.Header>
                    <Label Content="Notes" FontWeight="Bold"/>
                </GroupBox.Header>
                <TextBox Margin="{DynamicResource DefaultSpacingTopLeftRight}" VerticalScrollBarVisibility="Auto" AcceptsReturn="True" AcceptsTab="True" TextWrapping="Wrap" Height="120" Text="{Binding Notes, Mode=TwoWay}" />
            </GroupBox>
            <WrapPanel FlowDirection="RightToLeft">
                <Button Content="Cancel" Width="{DynamicResource DefaultButtonWidth}" Height="{DynamicResource DefaultButtonHeight}" Margin="{DynamicResource DefaultSpacingTopBottomLeft}" Command="{Binding CancelCommand, Mode=OneWay}" IsCancel="True"/>
                <Button Content="Save" Width="{DynamicResource DefaultButtonWidth}" Height="{DynamicResource DefaultButtonHeight}" Margin="{DynamicResource DefaultSpacing}" Command="{Binding SaveCommand, Mode=OneWay}" IsDefault="True"/>
            </WrapPanel>
        </StackPanel>
        <Border x:Name="outerPopupBorder" Background="{DynamicResource TranslucentBlack50pctBrush}" d:IsHidden="True">
            <b:Interaction.Triggers>
                <b:DataTrigger Binding="{Binding BgOpStatus, Mode=OneWay}">
                    <b:DataTrigger.Value>
                        <desktop:AsyncOpStatusCode>NotStarted</desktop:AsyncOpStatusCode>
                    </b:DataTrigger.Value>
                    <b:GoToStateAction StateName="OpNotActive"/>
                </b:DataTrigger>
                <b:DataTrigger Binding="{Binding BgOpStatus, Mode=OneWay}">
                    <b:DataTrigger.Value>
                        <desktop:AsyncOpStatusCode>RanToCompletion</desktop:AsyncOpStatusCode>
                    </b:DataTrigger.Value>
                    <b:GoToStateAction StateName="OpNotActive"/>
                </b:DataTrigger>
                <b:DataTrigger Binding="{Binding BgOpStatus, Mode=OneWay}">
                    <b:DataTrigger.Value>
                        <desktop:AsyncOpStatusCode>Running</desktop:AsyncOpStatusCode>
                    </b:DataTrigger.Value>
                    <b:GoToStateAction StateName="OpActive"/>
                </b:DataTrigger>
                <b:DataTrigger Binding="{Binding BgOpStatus, Mode=OneWay}">
                    <b:DataTrigger.Value>
                        <desktop:AsyncOpStatusCode>CancellationPending</desktop:AsyncOpStatusCode>
                    </b:DataTrigger.Value>
                    <b:GoToStateAction StateName="OpActive"/>
                </b:DataTrigger>
                <b:DataTrigger Binding="{Binding BgOpStatus, Mode=OneWay}">
                    <b:DataTrigger.Value>
                        <desktop:AsyncOpStatusCode>Faulted</desktop:AsyncOpStatusCode>
                    </b:DataTrigger.Value>
                    <b:GoToStateAction StateName="OpAborted"/>
                </b:DataTrigger>
                <b:DataTrigger Binding="{Binding BgOpStatus, Mode=OneWay}">
                    <b:DataTrigger.Value>
                        <desktop:AsyncOpStatusCode>Canceled</desktop:AsyncOpStatusCode>
                    </b:DataTrigger.Value>
                    <b:GoToStateAction StateName="OpAborted"/>
                </b:DataTrigger>
            </b:Interaction.Triggers>
            <Border Style="{DynamicResource PopupOuterBorder}">
                <b:Interaction.Triggers>
                    <b:DataTrigger Binding="{Binding BgOpMessageLevel, Mode=OneWay}">
                        <b:DataTrigger.Value>
                            <desktop:StatusMessageLevel>Information</desktop:StatusMessageLevel>
                        </b:DataTrigger.Value>
                        <b:GoToStateAction StateName="Info"/>
                    </b:DataTrigger>
                    <b:DataTrigger Binding="{Binding BgOpMessageLevel, Mode=OneWay}">
                        <b:DataTrigger.Value>
                            <desktop:StatusMessageLevel>Warning</desktop:StatusMessageLevel>
                        </b:DataTrigger.Value>
                        <b:GoToStateAction StateName="Warning"/>
                    </b:DataTrigger>
                    <b:DataTrigger Binding="{Binding BgOpMessageLevel, Mode=OneWay}">
                        <b:DataTrigger.Value>
                            <desktop:StatusMessageLevel>Error</desktop:StatusMessageLevel>
                        </b:DataTrigger.Value>
                        <b:GoToStateAction StateName="Error"/>
                    </b:DataTrigger>
                </b:Interaction.Triggers>
                <StackPanel>
                    <Border x:Name="innerPopupBorder" Background="{DynamicResource PopupTitleInfoBackgroundBrush}" Style="{DynamicResource PopupTitleBorder}">
                        <TextBlock Text="Test Title" FontWeight="Bold"/>
                    </Border>
                    <Border Style="{DynamicResource PopupContentBorder}">
                        <StackPanel>
                            <TextBlock x:Name="popupMessageTextBlock" Text="Test Message" Margin="{DynamicResource DefaultSpacing}" Style="{DynamicResource InfoMessageTextBlock}" Foreground="{DynamicResource InfoDarkBrush}" />
                            <Button x:Name="popupButton" Content="Cancel" Margin="{DynamicResource DefaultSpacing}" Style="{DynamicResource DefaultButton}" Command="{Binding PopupButtonClickCommand, Mode=OneWay}"/>
                        </StackPanel>
                    </Border>
                </StackPanel>
            </Border>
        </Border>
    </Grid>
</Window>
