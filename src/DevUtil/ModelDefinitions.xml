<?xml version="1.0" encoding="utf-8"?>
<ModelDefinitions xmlns="http://git.erwinefamily.net/FsInfoCat/V1/ModelDefinitions.xsd">
  <Source Path="Model\CrawlStatus.cs" Id="d8fb3389-a092-4044-9e8d-7baf3b05c337">
    <Using Name="System.ComponentModel.DataAnnotations" />
    <Namespace Name="FsInfoCat.Model">
      <Enum Name="CrawlStatus" BaseType="byte" Access="public">
        <Documentation>
          <summary>
Represents the crawl status of a file.
</summary>
        </Documentation>
        <Field Name="NotRunning" Value="0">
          <Documentation>
            <summary>
File system crawl is not running.
</summary>
          </Documentation>
          <Display Name="DisplayName_CrawlStatus_NotRunning" ShortName="DisplayName_CrawlStatus_NotRunning" Description="Description_CrawlStatus_NotRunning" />
        </Field>
        <Field Name="InProgress" Value="1">
          <Documentation>
            <summary>
File system crawl is in progress.
</summary>
          </Documentation>
          <Display Name="DisplayName_CrawlStatus_InProgress" ShortName="DisplayName_CrawlStatus_InProgress" Description="Description_CrawlStatus_InProgress" />
        </Field>
        <Field Name="Completed" Value="2">
          <Documentation>
            <summary>
File system crawl ran to completion.
</summary>
          </Documentation>
          <Display Name="DisplayName_Completed" ShortName="DisplayName_Completed" Description="Description_CrawlStatus_Completed" />
        </Field>
        <Field Name="AllottedTimeElapsed" Value="3">
          <Documentation>
            <summary>
File system was stopped prior to completion because the alotted execution duration had been reached.
</summary>
          </Documentation>
          <Display Name="DisplayName_CrawlStatus_AllottedTimeElapsed" ShortName="DisplayName_Timeout" Description="Description_CrawlStatus_AllottedTimeElapsed" />
        </Field>
        <Field Name="MaxItemCountReached" Value="4">
          <Documentation>
            <summary>
File system was stopped prior to completion because the maximum number of items had been processed.
</summary>
          </Documentation>
          <Display Name="DisplayName_CrawlStatus_MaxItemCountReached" ShortName="DisplayName_ItemLimit" Description="Description_CrawlStatus_MaxItemCountReached" />
        </Field>
        <Field Name="Canceled" Value="5">
          <Documentation>
            <summary>
File system crawl was manually canceled before completion.
</summary>
          </Documentation>
          <Display Name="DisplayName_CrawlStatus_Canceled" ShortName="DisplayName_CrawlStatus_Canceled" Description="Description_CrawlStatus_Canceled" />
        </Field>
        <Field Name="Failed" Value="6">
          <Documentation>
            <summary>
File system crawl was aborted due to an unrecoverable failure.
</summary>
          </Documentation>
          <Display Name="DisplayName_CrawlStatus_Failed" ShortName="DisplayName_CrawlStatus_Failed" Description="Description_CrawlStatus_Failed" />
        </Field>
        <Field Name="Disabled" Value="7">
          <Documentation>
            <summary>
File system crawl configuration is disabled.
</summary>
          </Documentation>
          <Display Name="DisplayName_CrawlStatus_Disabled" ShortName="DisplayName_CrawlStatus_Disabled" Description="Description_CrawlStatus_Disabled" />
        </Field>
      </Enum>
    </Namespace>
  </Source>
  <Source Path="Model\DirectoryCrawlOptions.cs" Id="9498eb46-f051-4d0e-a12f-14171b44cb8a">
    <Using Name="System" />
    <Using Name="System.ComponentModel.DataAnnotations" />
    <Namespace Name="FsInfoCat.Model">
      <Enum Name="DirectoryCrawlOptions" BaseType="byte" IsFlags="true" Access="public">
        <Documentation>
          <summary>
Directory-specific crawl option flags.
</summary>
        </Documentation>
        <Field Name="None" Value="0">
          <Documentation>
            <summary>
No options selected.
</summary>
          </Documentation>
          <Display Name="DisplayName_NoOptionsSelected" ShortName="DisplayName_None" Description="Description_DirectoryCrawlOptions_None" />
        </Field>
        <Field Name="SkipSubdirectories" Value="1">
          <Documentation>
            <summary>
Do not crawl nested <see cref="ISubdirectory">sub-directories</see>.
</summary>
          </Documentation>
          <Display Name="DisplayName_DirectoryCrawlOptions_SkipSubdirectories" ShortName="DisplayName_DirectoryCrawlOptions_SkipSubdirectories" Description="Description_DirectoryCrawlOptions_SkipSubdirectories" />
        </Field>
        <Field Name="Skip" Value="2">
          <Documentation>
            <summary>
Do not crawl the current <see cref="ISubdirectory" />.
</summary>
          </Documentation>
          <Display Name="DisplayName_DirectoryCrawlOptions_Skip" ShortName="DisplayName_DirectoryCrawlOptions_Skip" Description="Description_DirectoryCrawlOptions_Skip" />
        </Field>
        <Field Name="DoNotCompareFiles" Value="4">
          <Documentation>
            <summary>
Do not compare files for redundancies.
</summary>
          </Documentation>
          <Display Name="DisplayName_DirectoryCrawlOptions_DoNotCompareFiles" ShortName="DisplayName_DirectoryCrawlOptions_DoNotCompareFiles" Description="Description_DirectoryCrawlOptions_DoNotCompareFiles" />
        </Field>
        <Field Name="DoNotShow" Value="8">
          <Documentation>
            <summary>
Do not show contents of <see cref="ISubdirectory" /> in public result displays.
</summary>
          </Documentation>
          <Display Name="DisplayName_DoNotShow" ShortName="DisplayName_Hide" Description="Description_DirectoryCrawlOptions_DoNotShow" />
        </Field>
        <Field Name="FlaggedForDeletion" Value="16">
          <Documentation>
            <summary>
Mark <see cref="ISubdirectory" /> for deletion.
</summary>
          </Documentation>
          <Display Name="DisplayName_FlaggedForDeletion" ShortName="DisplayName_ToDelete" Description="Description_DirectoryCrawlOptions_FlaggedForDeletion" />
        </Field>
        <Field Name="FlaggedForRescan" Value="32">
          <Documentation>
            <summary>
Mark <see cref="ISubdirectory" /> for re-scan.
</summary>
          </Documentation>
          <Display Name="DisplayName_FlaggedForRescan" ShortName="DisplayName_Rescan" Description="Description_DirectoryCrawlOptions_FlaggedForRescan" />
        </Field>
      </Enum>
    </Namespace>
  </Source>
  <Source Path="Model\DirectoryStatus.cs" Id="c5475677-a0a2-44d0-b05a-889efd04c7b5">
    <Using Name="System.ComponentModel.DataAnnotations" />
    <Namespace Name="FsInfoCat.Model">
      <Enum Name="DirectoryStatus" BaseType="byte" Access="public">
        <Documentation>
          <summary>
Indicates crawl status for the a <see cref="ISubdirectory" /></summary>
        </Documentation>
        <Field Name="Incomplete" Value="0">
          <Documentation>
            <summary>
Not all items in the current <see cref="ISubdirectory" /> have been crawled.
</summary>
          </Documentation>
          <Display Name="DisplayName_DirectoryStatus_Incomplete" ShortName="DisplayName_DirectoryStatus_Incomplete" Description="Description_DirectoryStatus_Incomplete" />
        </Field>
        <Field Name="Complete" Value="1">
          <Documentation>
            <summary>
All items in the current <see cref="ISubdirectory" /> have been crawled.
</summary>
          </Documentation>
          <Display Name="DisplayName_DirectoryStatus_Complete" ShortName="DisplayName_DirectoryStatus_Complete" Description="Description_DirectoryStatus_Complete" />
        </Field>
        <Field Name="AccessError" Value="2">
          <Documentation>
            <summary>
An error occurred while trying to enumerate items in the current <see cref="ISubdirectory" />.
</summary>
          </Documentation>
          <Display Name="DisplayName_AccessError" ShortName="DisplayName_Error" Description="Description_DirectoryStatus_AccessError" />
        </Field>
        <Field Name="Deleted" Value="3">
          <Documentation>
            <summary>
The current <see cref="ISubdirectory" /> has been deleted.
</summary>
          </Documentation>
          <Display Name="DisplayName_Deleted" ShortName="DisplayName_Deleted" Description="Description_DirectoryStatus_Deleted" />
        </Field>
      </Enum>
    </Namespace>
  </Source>
  <Source Path="Model\ErrorCode.cs" Id="18474c00-8171-4374-8125-d28c8e90ac58">
    <Using Name="System.ComponentModel.DataAnnotations" />
    <Namespace Name="FsInfoCat.Model">
      <Enum Name="ErrorCode" BaseType="int" Access="public">
        <Documentation>
          <summary>
Values for unique application error codes.
</summary>
          <remarks>The <see cref="MessageCodeAttribute" /> determines the related <see cref="MessageCode" /> for the enumerated member.
Use <see cref="MessageCodeAttribute.TryGetCode{TEnum}(TEnum, out MessageCode)" /> to determine the appropriate value.
</remarks>
        </Documentation>
        <Field Name="Unexpected" Value="0">
          <Documentation>
            <summary>
An unexpected error has occurred.
</summary>
          </Documentation>
          <Display Name="DisplayName_UnexpectedError" ShortName="DisplayName_UnexpectedError" Description="ErrorMessage_UnexpectedError" />
        </Field>
        <Field Name="IOError" Value="1">
          <Documentation>
            <summary>
An <see cref="System.IO.IOException" /> has occurred.
</summary>
          </Documentation>
          <Display Name="DisplayName_IOError" ShortName="DisplayName_IOError" Description="ErrorMessage_IOError" />
        </Field>
        <Field Name="UnauthorizedAccess" Value="2">
          <Documentation>
            <summary>
An <see cref="System.UnauthorizedAccessException" /> has occurred.
</summary>
          </Documentation>
          <Display Name="DisplayName_UnauthorizedAccessError" ShortName="DisplayName_Unauthorized" Description="DisplayName_UnauthorizedAccessError" />
        </Field>
        <Field Name="SecurityException" Value="3">
          <Documentation>
            <summary>
A <see cref="System.Security.SecurityException" /> has occurred.
</summary>
          </Documentation>
          <Display Name="DisplayName_SecurityException" ShortName="DisplayName_AccessDenied" Description="ErrorMessage_SecurityException" />
        </Field>
        <Field Name="InvalidPath" Value="4">
          <Documentation>
            <summary>
The name of one or more files or subdirectories in the path contain a invalid character(s).
</summary>
          </Documentation>
          <Display Name="DisplayName_InvalidPathError" ShortName="DisplayName_InvalidPath" Description="ErrorMessage_InvalidPathError" />
        </Field>
        <Field Name="PathTooLong" Value="5">
          <Documentation>
            <summary>
A <see cref="System.IO.PathTooLongException" /> has occurred, indicating that hhe specified path, file name, or both exceed the system-defined maximum length.
</summary>
          </Documentation>
          <Display Name="DisplayName_PathTooLongError" ShortName="DisplayName_TooLong" Description="ErrorMessage_PathTooLongError" />
        </Field>
        <Field Name="CrawlOperationFailed" Value="6">
          <Documentation>
            <summary>
Crawl operation has failed and terminated before completion.
</summary>
          </Documentation>
          <Display Name="DisplayName_CrawlOperationFailed" ShortName="DisplayName_CrawlFailed" Description="ErrorMessage_CrawlOperationFailed" />
        </Field>
        <Field Name="DirectoryNotFound" Value="7">
          <Documentation>
            <summary>
A <see cref="System.IO.DirectoryNotFoundException" /> has occurred.
</summary>
          </Documentation>
          <Display Name="DisplayName_DirectoryNotFound" ShortName="DisplayName_NotFound" Description="ErrorMessage_DirectoryNotFound" />
        </Field>
        <Field Name="GetLogicalDisksFailure" Value="8">
          <Display Name="DisplayName_GetLogicalDisksFailure" ShortName="DisplayName_GetLogicalDisksFailure" Description="ErrorMessage_GetLogicalDisksFailure" />
        </Field>
        <Field Name="BackgroundJobFaulted" Value="9">
          <Display Name="DisplayName_BackgroundJobFailed" ShortName="DisplayName_Failed" Description="DisplayName_BackgroundJobFailed" />
        </Field>
      </Enum>
    </Namespace>
  </Source>
  <Source Path="Model\FileCorrelationStatus.cs" Id="353f9eeb-079f-4e4a-9eb8-585aae83fa45">
    <Using Name="System.ComponentModel.DataAnnotations" />
    <Namespace Name="FsInfoCat.Model">
      <Enum Name="FileCorrelationStatus" BaseType="byte" Access="public">
        <Documentation>
          <summary>
Represents correlation status of a file.
</summary>
        </Documentation>
        <Field Name="Dissociated" Value="0">
          <Documentation>
            <summary>
File has been added to the database or modified and needs to be analyzed.
</summary>
          </Documentation>
          <Display Name="DisplayName_FileCorrelationStatus_Dissociated" ShortName="DisplayName_FileCorrelationStatus_Dissociated" Description="Description_FileCorrelationStatus_Dissociated" />
        </Field>
        <Field Name="PendingValidation" Value="1">
          <Documentation>
            <summary>
Acknowledged; Validation in progress.
</summary>
          </Documentation>
          <Display Name="DisplayName_FileCorrelationStatus_PendingValidation" ShortName="DisplayName_Pending" Description="Description_FileCorrelationStatus_PendingValidation" />
        </Field>
        <Field Name="Deferred" Value="2">
          <Documentation>
            <summary>
Final determination deferred.
</summary>
          </Documentation>
          <Display Name="DisplayName_FileCorrelationStatus_Deferred" ShortName="DisplayName_Deferred" Description="Description_FileCorrelationStatus_Deferred" />
        </Field>
        <Field Name="Analyzing" Value="3">
          <Documentation>
            <summary>
Correlations to other files are being established.
</summary>
            <remarks>
This status value is only for new files and those which have changed. Results of comparisons will be stored in the <see cref="IComparison" /> table,
where the <see cref="IComparison.Correlative" /> is the new or changed file, and the <see cref="IComparison.Baseline" /> is the file that it is being compared to.
</remarks>
          </Documentation>
          <Display Name="DisplayName_FileCorrelationStatus_Analyzing" ShortName="DisplayName_FileCorrelationStatus_Analyzing" Description="Description_FileCorrelationStatus_Analyzing" />
        </Field>
        <Field Name="Correlated" Value="4">
          <Documentation>
            <summary>
File has been compared with all other files with the same Hash. Final disposition pending.
</summary>
          </Documentation>
          <Display Name="DisplayName_FileCorrelationStatus_Correlated" ShortName="DisplayName_FileCorrelationStatus_Correlated" Description="Description_FileCorrelationStatus_Correlated" />
        </Field>
        <Field Name="Justified" Value="5">
          <Documentation>
            <summary>
File duplicaton is justified.
</summary>
          </Documentation>
          <Display Name="DisplayName_FileCorrelationStatus_Justified" ShortName="DisplayName_Justified" Description="Description_FileCorrelationStatus_Justified" />
        </Field>
        <Field Name="Insupportable" Value="6">
          <Documentation>
            <summary>
Indicates that the files should be deleted.
</summary>
          </Documentation>
          <Display Name="DisplayName_FileCorrelationStatus_Insupportable" ShortName="DisplayName_FileCorrelationStatus_Insupportable" Description="Description_FileCorrelationStatus_Insupportable" />
        </Field>
        <Field Name="Violation" Value="7">
          <Documentation>
            <summary>
Elevated status for unauthorized copies of files that need further attention.
</summary>
          </Documentation>
          <Display Name="DisplayName_FileCorrelationStatus_Violation" ShortName="DisplayName_Violation" Description="Description_FileCorrelationStatus_Violation" />
        </Field>
        <Field Name="Attrition" Value="8">
          <Documentation>
            <summary>
Indicates that the file has been scheduled/tasked to be deleted, but not yet confirmed.
</summary>
          </Documentation>
          <Display Name="DisplayName_FileCorrelationStatus_Attrition" ShortName="DisplayName_ToDelete" Description="Description_FileCorrelationStatus_Attrition" />
        </Field>
        <Field Name="Deleted" Value="9">
          <Documentation>
            <summary>
The file has been deleted.
</summary>
          </Documentation>
          <Display Name="DisplayName_Deleted" ShortName="DisplayName_Deleted" Description="Description_FileCorrelationStatus_FileDeleted" />
        </Field>
        <Field Name="AccessError" Value="10" />
      </Enum>
    </Namespace>
  </Source>
  <Source Path="Model\FileCrawlOptions.cs" Id="403dfaa6-8cc6-4c66-97c6-fed06b7896b5">
    <Using Name="System" />
    <Using Name="System.ComponentModel.DataAnnotations" />
    <Namespace Name="FsInfoCat.Model">
      <Enum Name="FileCrawlOptions" BaseType="byte" IsFlags="true" Access="public">
        <Documentation>
          <summary>
File-specific crawl options.
</summary>
        </Documentation>
        <Field Name="None" Value="0">
          <Documentation>
            <summary>
No options selected.
</summary>
          </Documentation>
          <Display Name="DisplayName_NoOptionsSelected" ShortName="DisplayName_None" Description="Description_FileCrawlOptions_None" />
        </Field>
        <Field Name="DoNotCompare" Value="1">
          <Documentation>
            <summary>
Do not compare the current <see cref="IFile" /> for redundancies.
</summary>
          </Documentation>
          <Display Name="DisplayName_FileCrawlOptions_DoNotCompare" ShortName="DisplayName_DoNotCompare" Description="Description_FileCrawlOptions_DoNotCompare" />
        </Field>
        <Field Name="Ignore" Value="2">
          <Documentation>
            <summary>
Ignore the current <see cref="IFile" />.
</summary>
          </Documentation>
          <Display Name="DisplayName_FileCrawlOptions_Ignore" ShortName="DisplayName_Ignore" Description="Description_FileCrawlOptions_Ignore" />
        </Field>
        <Field Name="FlaggedForDeletion" Value="4">
          <Documentation>
            <summary>
Mark <see cref="IFile" /> for deletion.
</summary>
          </Documentation>
          <Display Name="DisplayName_FlaggedForDeletion" ShortName="DisplayName_ToDelete" Description="Description_FileCrawlOptions_FlaggedForDeletion" />
        </Field>
        <Field Name="FlaggedForRescan" Value="8">
          <Documentation>
            <summary>
Mark <see cref="IFile" /> for re-scan.
</summary>
          </Documentation>
          <Display Name="DisplayName_FlaggedForRescan" ShortName="DisplayName_Rescan" Description="Description_FileCrawlOptions_FlaggedForRescan" />
        </Field>
      </Enum>
    </Namespace>
  </Source>
  <Source Path="Model\IAccessError.cs" Id="3c4b0f6a-3ab2-400d-896a-f6a570f5c9dd">
    <Using Name="System" />
    <Using Name="System.ComponentModel.DataAnnotations" />
    <Namespace Name="FsInfoCat.Model">
      <Interface Name="IAccessError" Access="public">
        <Documentation>
          <summary>
Generic interface for access error entities.
</summary>
          <seealso cref="IDbEntity" />
          <seealso cref="IHasSimpleIdentifier" />
          <seealso cref="IFileAccessError" />
          <seealso cref="ISubdirectoryAccessError" />
          <seealso cref="IVolumeAccessError" />
          <seealso cref="Local.Model.ILocalAccessError" />
          <seealso cref="Upstream.Model.IUpstreamAccessError" />
          <seealso cref="IDbFsItem.AccessErrors" />
        </Documentation>
        <Implements>
          <SimpleBaseType Name="IDbEntity" />
          <SimpleBaseType Name="IHasSimpleIdentifier" />
        </Implements>
        <Property Name="ErrorCode">
          <Documentation>
            <summary>
Gets the error code.
</summary>
            <value>The <see cref="ErrorCode" /> value that represents the numeric error code.</value>
          </Documentation>
          <Display Name="DisplayName_ErrorCode" ShortName="DisplayName_ErrorCode" Description="DisplayName_ErrorCode" />
          <Type>
            <Identifier Name="ErrorCode" />
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="Message">
          <Documentation>
            <summary>
Gets the brief error message.
</summary>
            <value>The brief error message.</value>
          </Documentation>
          <Display Name="DisplayName_Message" ShortName="DisplayName_Message" Description="DisplayName_Message" />
          <Type>
            <PredefinedType Keyword="string" />
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="Details">
          <Documentation>
            <summary>
Gets the error detail text.
</summary>
            <value>The error detail text.</value>
          </Documentation>
          <Display Name="DisplayName_Details" ShortName="DisplayName_Details" Description="DisplayName_Details" />
          <Type>
            <PredefinedType Keyword="string" />
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="Target">
          <Documentation>
            <summary>
Gets the target entity to which the access error applies.
</summary>
            <value>The <see cref="IDbEntity" /> object that this error applies to.</value>
          </Documentation>
          <Display Name="DisplayName_Target" ShortName="DisplayName_Target" Description="DisplayName_Target" />
          <Type>
            <Identifier Name="IDbEntity" />
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Method Name="TryGetTargetId">
          <Documentation>
            <summary>
Gets the unique identifier of the <see cref="Target" /> entity if it has been assigned.
</summary>
            <param name="id">Receives the unique identifier value.</param>
            <returns>
                      <see langword="true" /> if the unique identifier of the <see cref="Target" /> entity has been set; otherwise, <see langword="false" />.</returns>
          </Documentation>
          <Parameters>
            <Parameter Name="id">
              <Type>
                <Identifier Name="Guid" />
              </Type>
              <!--TODO: Need <xsl:template match="Modifiers" mode="Root"></xsl:template>-->
            </Parameter>
          </Parameters>
          <ReturnType>
            <PredefinedType Keyword="bool" />
          </ReturnType>
        </Method>
      </Interface>
    </Namespace>
  </Source>
  <Source Path="Model\IAudioProperties.cs" Id="72d9e38d-4edf-4a5c-b039-0098e87e5e6c">
    <Using Name="System" />
    <Using Name="System.ComponentModel.DataAnnotations" />
    <Namespace Name="FsInfoCat.Model">
      <Interface Name="IAudioProperties" Access="public">
        <Documentation>
          <summary>
Represents extended file properties for audio files.
</summary>
          <seealso cref="IEquatable{IAudioProperties}" />
          <seealso cref="IAudioPropertiesRow" />
        </Documentation>
        <!--TODO: Need <xsl:template match="Attribute[@Name='EntityInterface']" mode="Root" />-->
        <Implements>
          <SimpleBaseType>
            <!--TODO: Need <xsl:template match="GenericName" mode="BaseTypes"></xsl:template>-->
          </SimpleBaseType>
        </Implements>
        <Property Name="Compression">
          <Documentation>
            <summary>
Gets the Compression Method.
</summary>
            <value>Indicates the audio compression used on the audio file.</value>
            <remarks>
This value should be white-space normalized and trimmed, with white-space-only converted to <see langword="null" />.
<!--TODO: Need <xsl:template match="list" mode="Root"></xsl:template>--></remarks>
          </Documentation>
          <Display Name="DisplayName_Compression" ShortName="DisplayName_Compression" Description="DisplayName_Compression" />
          <Type>
            <PredefinedType Keyword="string" />
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="EncodingBitrate">
          <Documentation>
            <summary>
Indicates the average data rate in Hz for the audio file in "bits per second".
</summary>
            <value>Indicates the average data rate in Hertz (Hz) for the audio file in bits per second.</value>
            <remarks>
                      <!--TODO: Need <xsl:template match="list" mode="Root"></xsl:template>-->
                    </remarks>
          </Documentation>
          <Display Name="DisplayName_EncodingBitrate" ShortName="DisplayName_EncodingBitrate" Description="DisplayName_EncodingBitrate" />
          <Type>
            <!--TODO: Need <xsl:template match="NullableType" mode="Types"></xsl:template>-->
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="Format">
          <Documentation>
            <summary>
Indicates the format of the audio file.
</summary>
            <value>Indicates the format of the audio file.</value>
            <remarks>
This value should be white-space normalized and trimmed, with white-space-only converted to <see langword="null" />.
<!--TODO: Need <xsl:template match="list" mode="Root"></xsl:template>--></remarks>
          </Documentation>
          <Display Name="DisplayName_Format" ShortName="DisplayName_Format" Description="DisplayName_Format" />
          <Type>
            <PredefinedType Keyword="string" />
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="IsVariableBitrate">
          <Documentation>
            <summary>
Indicates whether Bit Rate of the audio is variable.
</summary>
            <value>Indicates whether the audio file had a variable or constant bit rate.</value>
            <remarks>
                      <see langword="true" /> if the bit rate of the audio is variable; <see langword="false" /> if the bit rate is constant; otherwise, <see langword="null" />
if this value is not specified.
<!--TODO: Need <xsl:template match="list" mode="Root"></xsl:template>--></remarks>
          </Documentation>
          <Display Name="DisplayName_IsVariableBitrate" ShortName="DisplayName_IsVariableBitrate" Description="DisplayName_IsVariableBitrate" />
          <Type>
            <!--TODO: Need <xsl:template match="NullableType" mode="Types"></xsl:template>-->
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="SampleRate">
          <Documentation>
            <summary>
Indicates the audio sample rate for the audio file in "samples per second".
</summary>
            <value>Indicates the sample rate for the audio file in samples per second.</value>
            <remarks>
                      <!--TODO: Need <xsl:template match="list" mode="Root"></xsl:template>-->
                    </remarks>
          </Documentation>
          <Display Name="DisplayName_SampleRate" ShortName="DisplayName_SampleRate" Description="DisplayName_SampleRate" />
          <Type>
            <!--TODO: Need <xsl:template match="NullableType" mode="Types"></xsl:template>-->
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="SampleSize">
          <Documentation>
            <summary>
Indicates the audio sample size for the audio file in "bits per sample".
</summary>
            <value>Indicates the sample size for the audio file in bits per sample.</value>
            <remarks>
                      <!--TODO: Need <xsl:template match="list" mode="Root"></xsl:template>-->
                    </remarks>
          </Documentation>
          <Display Name="DisplayName_SampleSize" ShortName="DisplayName_SampleSize" Description="DisplayName_SampleSize" />
          <Type>
            <!--TODO: Need <xsl:template match="NullableType" mode="Types"></xsl:template>-->
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="StreamName">
          <Documentation>
            <summary>
Gets the Stream Name.
</summary>
            <value>Identifies the name of the stream for the audio file.</value>
            <remarks>
This value should be white-space normalized and trimmed, with white-space-only converted to <see langword="null" />.
<!--TODO: Need <xsl:template match="list" mode="Root"></xsl:template>--></remarks>
          </Documentation>
          <Display Name="DisplayName_StreamName" ShortName="DisplayName_StreamName" Description="DisplayName_StreamName" />
          <Type>
            <PredefinedType Keyword="string" />
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="StreamNumber">
          <Documentation>
            <summary>
Gets the Stream Number.
</summary>
            <value>Identifies the stream number of the audio file.</value>
            <remarks>
                      <!--TODO: Need <xsl:template match="list" mode="Root"></xsl:template>-->
                    </remarks>
          </Documentation>
          <Display Name="DisplayName_StreamNumber" ShortName="DisplayName_StreamNumber" Description="DisplayName_StreamNumber" />
          <Type>
            <!--TODO: Need <xsl:template match="NullableType" mode="Types"></xsl:template>-->
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
      </Interface>
    </Namespace>
  </Source>
  <Source Path="Model\IAudioPropertiesListItem.cs" Id="adda9d5a-95d9-4b1f-bd24-9bf74b45edc8">
    <Using Name="System" />
    <Namespace Name="FsInfoCat.Model">
      <Interface Name="IAudioPropertiesListItem" Access="public">
        <Documentation>
          <summary>
Generic interface for list item entities containing extended file properties for audio files.
</summary>
          <seealso cref="IPropertiesListItem" />
          <seealso cref="IAudioPropertiesRow" />
          <seealso cref="IEquatable{IAudioPropertiesListItem}" />
          <seealso cref="Upstream.Model.IUpstreamAudioPropertiesListItem" />
          <seealso cref="Local.Model.ILocalAudioPropertiesListItem" />
          <seealso cref="IDbContext.AudioPropertiesListing" />
        </Documentation>
        <Implements>
          <SimpleBaseType Name="IPropertiesListItem" />
          <SimpleBaseType Name="IAudioPropertiesRow" />
          <SimpleBaseType>
            <!--TODO: Need <xsl:template match="GenericName" mode="BaseTypes"></xsl:template>-->
          </SimpleBaseType>
        </Implements>
      </Interface>
    </Namespace>
  </Source>
  <Source Path="Model\IAudioPropertiesRow.cs" Id="091a24cf-ab75-4137-a89b-b232758a0b6f">
    <Using Name="System" />
    <Namespace Name="FsInfoCat.Model">
      <Interface Name="IAudioPropertiesRow" Access="public">
        <Documentation>
          <summary>
Generic interface for entities containing extended file properties for audio files.
</summary>
          <seealso cref="IPropertiesRow" />
          <seealso cref="IAudioProperties" />
          <seealso cref="IEquatable{IAudioPropertiesRow}" />
          <seealso cref="IAudioPropertiesListItem" />
          <seealso cref="IAudioPropertySet" />
          <seealso cref="Upstream.Model.IUpstreamAudioPropertiesRow" />
          <seealso cref="Local.Model.ILocalAudioPropertiesRow" />
        </Documentation>
        <Implements>
          <SimpleBaseType Name="IPropertiesRow" />
          <SimpleBaseType Name="IAudioProperties" />
          <SimpleBaseType>
            <!--TODO: Need <xsl:template match="GenericName" mode="BaseTypes"></xsl:template>-->
          </SimpleBaseType>
        </Implements>
      </Interface>
    </Namespace>
  </Source>
  <Source Path="Model\IAudioPropertySet.cs" Id="414099e3-6699-4a65-ab24-48c428567b7b">
    <Using Name="System" />
    <Namespace Name="FsInfoCat.Model">
      <Interface Name="IAudioPropertySet" Access="public">
        <Documentation>
          <summary>
Interface for database objects that contain extended file property values of audio files.
</summary>
          <seealso cref="IPropertySet" />
          <seealso cref="IAudioPropertiesRow" />
          <seealso cref="IEquatable{IAudioPropertySet}" />
          <seealso cref="Upstream.Model.IUpstreamAudioPropertySet" />
          <seealso cref="Local.Model.ILocalAudioPropertySet" />
          <seealso cref="IDbContext.AudioPropertySets" />
          <seealso cref="IFile.AudioProperties" />
        </Documentation>
        <Implements>
          <SimpleBaseType Name="IPropertySet" />
          <SimpleBaseType Name="IAudioPropertiesRow" />
          <SimpleBaseType>
            <!--TODO: Need <xsl:template match="GenericName" mode="BaseTypes"></xsl:template>-->
          </SimpleBaseType>
        </Implements>
      </Interface>
    </Namespace>
  </Source>
  <Source Path="Model\IBinaryPropertySet.cs" Id="66d9efb4-ce41-451a-9336-9e7ee57fdfef">
    <Using Name="System" />
    <Using Name="System.Collections.Generic" />
    <Using Name="System.ComponentModel.DataAnnotations" />
    <Namespace Name="FsInfoCat.Model">
      <Interface Name="IBinaryPropertySet" Access="public">
        <Documentation>
          <summary>
Represents a set of files that have the same file size and cryptographic hash.
</summary>
          <seealso cref="IDbEntity" />
          <seealso cref="IHasSimpleIdentifier" />
          <seealso cref="IEquatable{IBinaryPropertySet}" />
          <seealso cref="Upstream.Model.IUpstreamBinaryPropertySet" />
          <seealso cref="Local.Model.ILocalBinaryPropertySet" />
          <seealso cref="IDbContext.BinaryPropertySets" />
          <seealso cref="IFile.BinaryProperties" />
          <seealso cref="IRedundantSet.BinaryProperties" />
        </Documentation>
        <Implements>
          <SimpleBaseType Name="IDbEntity" />
          <SimpleBaseType Name="IHasSimpleIdentifier" />
          <SimpleBaseType>
            <!--TODO: Need <xsl:template match="GenericName" mode="BaseTypes"></xsl:template>-->
          </SimpleBaseType>
        </Implements>
        <Property Name="Length">
          <Documentation>
            <summary>
Gets the file length.
</summary>
            <value>The file length in bytes.</value>
          </Documentation>
          <Display Name="DisplayName_Length" ShortName="DisplayName_Length" Description="DisplayName_Length" />
          <Type>
            <PredefinedType Keyword="long" />
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="Hash">
          <Documentation>
            <summary>
Gets the MD5 hash of the file's contents.
</summary>
            <value>The MD5 hash of the file's contents or <see langword="null" /> if the hash has not yet been calculated.</value>
          </Documentation>
          <Display Name="DisplayName_Hash" ShortName="DisplayName_Hash" Description="DisplayName_Hash" />
          <Type>
            <!--TODO: Need <xsl:template match="NullableType" mode="Types"></xsl:template>-->
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="Files">
          <Documentation>
            <summary>
Gets the files which have the same length and cryptographic hash.
</summary>
            <value>The files which have the same length and cryptographic hash..</value>
          </Documentation>
          <Display Name="DisplayName_Files" ShortName="DisplayName_Files" Description="DisplayName_Files" />
          <Type>
            <Generic Name="IEnumerable">
              <Identifier Name="IFile" />
            </Generic>
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="RedundantSets">
          <Documentation>
            <summary>
Gets the sets of files which were determined to be duplicates.
</summary>
            <value>The sets of files which were determined to be duplicates.</value>
          </Documentation>
          <Display Name="DisplayName_RedundantSets" ShortName="ShortName_RedundantSets" Description="DisplayName_RedundantSets" />
          <Type>
            <Generic Name="IEnumerable">
              <Identifier Name="IRedundantSet" />
            </Generic>
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
      </Interface>
    </Namespace>
  </Source>
  <Source Path="Model\IComparison.cs" Id="24848cdf-69e4-4151-8be2-c86ba2aaead2">
    <Using Name="System" />
    <Using Name="System.ComponentModel.DataAnnotations" />
    <Namespace Name="FsInfoCat.Model">
      <Interface Name="IComparison" Access="public">
        <Documentation>
          <summary>
The results of a byte-for-byte comparison of 2 files.
</summary>
          <seealso cref="IDbEntity" />
          <seealso cref="IEquatable{IComparison}" />
          <seealso cref="IHasMembershipKeyReference{IFile, IFile}" />
          <seealso cref="Upstream.Model.IUpstreamComparison" />
          <seealso cref="Local.Model.ILocalComparison" />
          <seealso cref="IDbContext.Comparisons" />
          <seealso cref="IFile.BaselineComparisons" />
          <seealso cref="IFile.CorrelativeComparisons" />
        </Documentation>
        <Implements>
          <SimpleBaseType Name="IDbEntity" />
          <SimpleBaseType>
            <!--TODO: Need <xsl:template match="GenericName" mode="BaseTypes"></xsl:template>-->
          </SimpleBaseType>
          <SimpleBaseType>
            <!--TODO: Need <xsl:template match="GenericName" mode="BaseTypes"></xsl:template>-->
          </SimpleBaseType>
        </Implements>
        <Property Name="AreEqual">
          <Documentation>
            <summary>
Gets a value indicating whether the <see cref="Baseline" /> and <see cref="Correlative" /> are identical byte-for-byte.
</summary>
            <value>
                      <see langword="true" /> if <see cref="Baseline" /> and <see cref="Correlative" /> are identical byte-for-byte; otherwise, <see langword="false" />.</value>
          </Documentation>
          <Display Name="DisplayName_AreEqual" ShortName="DisplayName_AreEqual" Description="DisplayName_AreEqual" />
          <Type>
            <PredefinedType Keyword="bool" />
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="ComparedOn">
          <Documentation>
            <summary>
Gets the date and time when the files were compared.
</summary>
            <value>The date and time when <see cref="Baseline" /> was compared to <see cref="Correlative" />.</value>
          </Documentation>
          <Display Name="DisplayName_ComparedOn" ShortName="DisplayName_ComparedOn" Description="DisplayName_ComparedOn" />
          <Type>
            <Identifier Name="DateTime" />
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="BaselineId">
          <Documentation>
            <summary>
Gets the primary key of the baseline file in the comparison.
</summary>
            <value>The <see cref="Guid">unique identifier</see> used as the foreign key that refers to the <see cref="Baseline" /><see cref="IFile">file entity</see>.</value>
            <remarks>This is also part of this entity's compound primary key.</remarks>
          </Documentation>
          <Display Name="DisplayName_BaselineId" ShortName="DisplayName_BaselineId" Description="DisplayName_BaselineId" />
          <Type>
            <Identifier Name="Guid" />
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="Baseline">
          <Documentation>
            <summary>
Gets the baseline file in the comparison.
</summary>
            <value>The generic <see cref="IFile" /> that represents the baseline file in the comparison.</value>
          </Documentation>
          <Display Name="DisplayName_Baseline" ShortName="DisplayName_Baseline" Description="DisplayName_Baseline" />
          <Type>
            <Identifier Name="IFile" />
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="CorrelativeId">
          <Documentation>
            <summary>
Gets the primary key of the correlative file in the comparison.
</summary>
            <value>The <see cref="Guid">unique identifier</see> used as the foreign key that refers to the <see cref="Correlative" /><see cref="IFile">file entity</see>.</value>
            <remarks>This is also part of this entity's compound primary key.</remarks>
          </Documentation>
          <Display Name="DisplayName_CorrelativeId" ShortName="DisplayName_CorrelativeId" Description="DisplayName_CorrelativeId" />
          <Type>
            <Identifier Name="Guid" />
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="Correlative">
          <Documentation>
            <summary>
Gets the correlative file in the comparison.
</summary>
            <value>The generic <see cref="IFile" /> that represents the correlative file, which is the new or changed file in the comparison.</value>
          </Documentation>
          <Display Name="DisplayName_Correlative" ShortName="DisplayName_Correlative" Description="DisplayName_Correlative" />
          <Type>
            <Identifier Name="IFile" />
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Method Name="TryGetBaselineId">
          <Documentation>
            <summary>
Gets the value of the <see cref="BaselineId" /> property or the unique identifier of the <see cref="Baseline" /> entity if it has been assigned.
</summary>
            <param name="baselineId">Receives the unique identifier value.</param>
            <returns>
                      <see langword="true" /> if the unique identifier for the associated <see cref="IFile" /> baseline entity has been set; otherwise, <see langword="false" />.</returns>
          </Documentation>
          <Parameters>
            <Parameter Name="baselineId">
              <Type>
                <Identifier Name="Guid" />
              </Type>
              <!--TODO: Need <xsl:template match="Modifiers" mode="Root"></xsl:template>-->
            </Parameter>
          </Parameters>
          <ReturnType>
            <PredefinedType Keyword="bool" />
          </ReturnType>
        </Method>
        <Method Name="TryGetCorrelativeId">
          <Documentation>
            <summary>
Gets value of the <see cref="CorrelativeId" /> property or the unique identifier of the <see cref="Correlative" /> entity if it has been assigned.
</summary>
            <param name="correlativeId">Receives the unique identifier value.</param>
            <returns>
                      <see langword="true" /> if the unique identifier for the associated <see cref="IFile" /> correlative entity has been set; otherwise, <see langword="false" />.</returns>
          </Documentation>
          <Parameters>
            <Parameter Name="correlativeId">
              <Type>
                <Identifier Name="Guid" />
              </Type>
              <!--TODO: Need <xsl:template match="Modifiers" mode="Root"></xsl:template>-->
            </Parameter>
          </Parameters>
          <ReturnType>
            <PredefinedType Keyword="bool" />
          </ReturnType>
        </Method>
      </Interface>
    </Namespace>
  </Source>
  <Source Path="Model\ICrawlConfigReportItem.cs" Id="c1040c27-8862-4109-87c3-b1482298d353">
    <Using Name="System" />
    <Namespace Name="FsInfoCat.Model">
      <Interface Name="ICrawlConfigReportItem" Access="public">
        <Documentation>
          <summary>
Reprsents a crawl configuration report row.
</summary>
          <seealso cref="ICrawlConfigurationListItem" />
          <seealso cref="IEquatable{ICrawlConfigReportItem}" />
          <seealso cref="Upstream.Model.IUpstreamCrawlConfigReportItem" />
          <seealso cref="Local.Model.ILocalCrawlConfigReportItem" />
          <seealso cref="IDbContext.CrawlConfigReport" />
        </Documentation>
        <Implements>
          <SimpleBaseType Name="ICrawlConfigurationListItem" />
          <SimpleBaseType>
            <!--TODO: Need <xsl:template match="GenericName" mode="BaseTypes"></xsl:template>-->
          </SimpleBaseType>
        </Implements>
        <Property Name="SucceededCount">
          <Documentation>
            <summary>
Gets the number of successful crawls.
</summary>
            <value>The number of successful crawls that used this crawl configuration.</value>
          </Documentation>
          <Type>
            <PredefinedType Keyword="long" />
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="TimedOutCount">
          <Documentation>
            <summary>
Gets the number of crawls that were stopped when the time limit was reached.
</summary>
            <value>The number of crawls that used this crawl configuration and were stopped when the time limit was reached.</value>
          </Documentation>
          <Type>
            <PredefinedType Keyword="long" />
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="ItemLimitReachedCount">
          <Documentation>
            <summary>
Gets the number of crawls that were stopped when item limit was reached.
</summary>
            <value>The number of crawls that used this crawl configuration and were stopped when the item limit was reached.</value>
          </Documentation>
          <Type>
            <PredefinedType Keyword="long" />
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="CanceledCount">
          <Documentation>
            <summary>
Gets the number of crawls that were canceled before completion.
</summary>
            <value>The number of crawls that used this crawl configuration and canceled before completion.</value>
          </Documentation>
          <Type>
            <PredefinedType Keyword="long" />
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="FailedCount">
          <Documentation>
            <summary>
Gets the number of crawls that did not complete due to a failure.
</summary>
            <value>The number of crawls that used this crawl configuration and did not complete due to an unrecoverable failure.</value>
          </Documentation>
          <Type>
            <PredefinedType Keyword="long" />
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="AverageDuration">
          <Documentation>
            <summary>
Gets the average duration of all crawls.
</summary>
            <value>The average duration of all crawls or <see langword="null" /> if no crawls had been started.</value>
          </Documentation>
          <Type>
            <!--TODO: Need <xsl:template match="NullableType" mode="Types"></xsl:template>-->
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="MaxDuration">
          <Documentation>
            <summary>
Gets the maximum duration of all the crawls.
</summary>
            <value>The maximum duration out of all the crawls or <see langword="null" /> if no crawls had been started.</value>
          </Documentation>
          <Type>
            <!--TODO: Need <xsl:template match="NullableType" mode="Types"></xsl:template>-->
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
      </Interface>
    </Namespace>
  </Source>
  <Source Path="Model\ICrawlConfiguration.cs" Id="bb8eab93-ad1c-4fe9-a83b-1851ffb726e0">
    <Using Name="System" />
    <Using Name="System.Collections.Generic" />
    <Using Name="System.ComponentModel.DataAnnotations" />
    <Namespace Name="FsInfoCat.Model">
      <Interface Name="ICrawlConfiguration" Access="public">
        <Documentation>
          <summary>
Specifies the configuration of a file system crawl.
</summary>
          <seealso cref="ICrawlConfigurationRow" />
          <seealso cref="IEquatable{ICrawlConfiguration}" />
          <seealso cref="Upstream.Model.IUpstreamCrawlConfiguration" />
          <seealso cref="Local.Model.ILocalCrawlConfiguration" />
          <seealso cref="ICrawlJobLog.Configuration" />
          <seealso cref="IDbContext.CrawlConfigurations" />
          <seealso cref="ISubdirectory.CrawlConfiguration" />
        </Documentation>
        <Implements>
          <SimpleBaseType Name="ICrawlConfigurationRow" />
          <SimpleBaseType>
            <!--TODO: Need <xsl:template match="GenericName" mode="BaseTypes"></xsl:template>-->
          </SimpleBaseType>
        </Implements>
        <Property Name="Root">
          <Documentation>
            <summary>
Gets the starting subdirectory for the configured subdirectory crawl.
</summary>
            <value>The root subdirectory of the configured subdirectory crawl.</value>
          </Documentation>
          <Display Name="DisplayName_Root" ShortName="DisplayName_Root" Description="DisplayName_Root" />
          <Type>
            <Identifier Name="ISubdirectory" />
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="Logs">
          <Documentation>
            <summary>
Gets the crawl log entries.
</summary>
            <value>The crawl log entries.</value>
          </Documentation>
          <Display Name="DisplayName_Logs" ShortName="DisplayName_Logs" Description="DisplayName_Logs" />
          <Type>
            <Generic Name="IEnumerable">
              <Identifier Name="ICrawlJobLog" />
            </Generic>
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Method Name="TryGetRootId">
          <Documentation>
            <summary>
Gets the unique identifier of the <see cref="Root" /> entity if it has been assigned.
</summary>
            <param name="rootId">Receives the unique identifier value.</param>
            <returns>
                      <see langword="true" /> if the unique identifier of the <see cref="Root" /> entity has been set; otherwise, <see langword="false" />.</returns>
          </Documentation>
          <Parameters>
            <Parameter Name="rootId">
              <Type>
                <Identifier Name="Guid" />
              </Type>
              <!--TODO: Need <xsl:template match="Modifiers" mode="Root"></xsl:template>-->
            </Parameter>
          </Parameters>
          <ReturnType>
            <PredefinedType Keyword="bool" />
          </ReturnType>
        </Method>
      </Interface>
    </Namespace>
  </Source>
  <Source Path="Model\ICrawlConfigurationListItem.cs" Id="9ac4ce89-a393-4ba8-83a9-6367c8fd4c13">
    <Using Name="System" />
    <Namespace Name="FsInfoCat.Model">
      <Interface Name="ICrawlConfigurationListItem" Access="public">
        <Documentation>
          <summary>
Represents a crawl configuration list item entity.
</summary>
          <seealso cref="ICrawlConfigurationRow" />
          <seealso cref="IEquatable{ICrawlConfigurationListItem}" />
          <seealso cref="ICrawlConfigReportItem" />
          <seealso cref="Upstream.Model.IUpstreamCrawlConfigurationListItem" />
          <seealso cref="Local.Model.ILocalCrawlConfigurationListItem" />
          <seealso cref="IDbContext.CrawlConfigListing" />
        </Documentation>
        <Implements>
          <SimpleBaseType Name="ICrawlConfigurationRow" />
          <SimpleBaseType>
            <!--TODO: Need <xsl:template match="GenericName" mode="BaseTypes"></xsl:template>-->
          </SimpleBaseType>
        </Implements>
        <Property Name="AncestorNames">
          <Documentation>
            <summary>
Gets the root subdirectory ancestor path element names.
</summary>
            <value>The result of a calculated column that contains the names of the root <see cref="ISubdirectory" /> path elements, separated by slash (<!--TODO: Need <xsl:template match="c" mode="Root"></xsl:template>-->) characters,
and in reverse order from typical file system path segments.</value>
          </Documentation>
          <Type>
            <PredefinedType Keyword="string" />
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="VolumeId">
          <Documentation>
            <summary>
Gets the primary key of the volume containing the root subdirectory for the current crawl configuration.
</summary>
            <value>The <see cref="IHasSimpleIdentifier.Id" /> of the <see cref="IVolumeRow" /> containing the
root <see cref="ISubdirectory" /> for the current crawl configuration.</value>
          </Documentation>
          <Type>
            <Identifier Name="Guid" />
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="VolumeDisplayName">
          <Documentation>
            <summary>
Gets the display name of the volume containing the root subdirectory for the current crawl configuration.
</summary>
            <value>The <see cref="IVolumeRow.DisplayName" /> of the <see cref="IVolumeRow" /> containing the
root <see cref="ISubdirectory" /> for the current crawl configuration.</value>
          </Documentation>
          <Type>
            <PredefinedType Keyword="string" />
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="VolumeName">
          <Documentation>
            <summary>
Gets the name of the volume containing the root subdirectory for the current crawl configuration.
</summary>
            <value>The <see cref="IVolumeRow.VolumeName" /> of the <see cref="IVolume" /> containing the root <see cref="ISubdirectory" /> for the current crawl configuration.</value>
          </Documentation>
          <Type>
            <PredefinedType Keyword="string" />
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="VolumeIdentifier">
          <Documentation>
            <summary>
Gets the identifier of the volume containing the root subdirectory for the current crawl configuration.
</summary>
            <value>The <see cref="IVolumeRow.Identifier" /> of the <see cref="IVolume" /> containing the root <see cref="ISubdirectory" /> for the current crawl configuration.</value>
          </Documentation>
          <Type>
            <Identifier Name="VolumeIdentifier" />
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="FileSystemDisplayName">
          <Documentation>
            <summary>
Gets the display name of the file system for the volume containing the root subdirectory for the current crawl configuration.
</summary>
            <value>The <see cref="IFileSystemProperties.DisplayName" /> of the <see cref="IFileSystemProperties">Filesystem</see> for the <see cref="IVolume" /> containing the
root <see cref="ISubdirectory" /> for the current crawl configuration.</value>
          </Documentation>
          <Type>
            <PredefinedType Keyword="string" />
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="FileSystemSymbolicName">
          <Documentation>
            <summary>
Gets the symbolic name of the file system for the volume containing the root subdirectory for the current crawl configuration.
</summary>
            <value>The <see cref="ISymbolicNameRow.Name">symbolic name</see> of the <see cref="IFileSystemProperties">Filesystem</see> for the <see cref="IVolume" /> containing the
root <see cref="ISubdirectory" /> for the current crawl configuration.</value>
          </Documentation>
          <Type>
            <PredefinedType Keyword="string" />
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
      </Interface>
    </Namespace>
  </Source>
  <Source Path="Model\ICrawlConfigurationRow.cs" Id="54ad783c-8ecc-4591-9222-ad32d53949b1">
    <Using Name="System" />
    <Using Name="System.ComponentModel.DataAnnotations" />
    <Namespace Name="FsInfoCat.Model">
      <Interface Name="ICrawlConfigurationRow" Access="public">
        <Documentation>
          <summary>
Represents a crawl configuration entity.
</summary>
          <seealso cref="IDbEntity" />
          <seealso cref="ICrawlSettings" />
          <seealso cref="IHasSimpleIdentifier" />
          <seealso cref="Local.Model.ILocalCrawlConfigurationRow" />
          <seealso cref="Upstream.Model.IUpstreamCrawlConfigurationRow" />
        </Documentation>
        <Implements>
          <SimpleBaseType Name="IDbEntity" />
          <SimpleBaseType Name="ICrawlSettings" />
          <SimpleBaseType Name="IHasSimpleIdentifier" />
        </Implements>
        <Property Name="DisplayName">
          <Documentation>
            <summary>
Gets the display name.
</summary>
            <value>The display name for the current crawl configuration.</value>
          </Documentation>
          <Display Name="DisplayName_DisplayName" ShortName="DisplayName_DisplayName" Description="DisplayName_DisplayName" />
          <Type>
            <PredefinedType Keyword="string" />
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="Notes">
          <Documentation>
            <summary>
Gets the custom notes.
</summary>
            <value>The custom notes to associate with the current crawl configuration.</value>
          </Documentation>
          <Display Name="DisplayName_Notes" ShortName="DisplayName_Notes" Description="DisplayName_Notes" />
          <Type>
            <PredefinedType Keyword="string" />
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="StatusValue">
          <Documentation>
            <summary>
Gets a value indicating current crawl configuration status.
</summary>
            <value>
The <see cref="CrawlStatus" /> value that indicates the current status.
</value>
          </Documentation>
          <Display Name="DisplayName_Status" ShortName="DisplayName_Status" Description="DisplayName_Status" />
          <Type>
            <Identifier Name="CrawlStatus" />
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="LastCrawlStart">
          <Documentation>
            <summary>
Gets the date and time when the last crawl was started.
</summary>
            <value>The date and time when the last crawl was started or <see langword="null" /> if no crawl hhas ever been started for this configuration.</value>
          </Documentation>
          <Display Name="DisplayName_LastCrawlStart" ShortName="DisplayName_LastCrawlStart" Description="DisplayName_LastCrawlStart" />
          <Type>
            <!--TODO: Need <xsl:template match="NullableType" mode="Types"></xsl:template>-->
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="LastCrawlEnd">
          <Documentation>
            <summary>
Gets the date and time when the last crawl was finshed.
</summary>
            <value>
The date and time when the last crawl was finshed; otherwise, <see langword="null" /> if the current crawl is still active or if
no crawl has ever been started for this configuration.
</value>
          </Documentation>
          <Display Name="DisplayName_LastCrawlEnd" ShortName="DisplayName_LastCrawlEnd" Description="DisplayName_LastCrawlEnd" />
          <Type>
            <!--TODO: Need <xsl:template match="NullableType" mode="Types"></xsl:template>-->
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="NextScheduledStart">
          <Documentation>
            <summary>
Gets the date and time when the next true is to begin.
</summary>
            <value>The date and time when the next crawl is to begin or <see langword="null" /> if there is no scheduled crawl.</value>
          </Documentation>
          <Display Name="DisplayName_NextScheduledStart" ShortName="DisplayName_NextScheduledStart" Description="DisplayName_NextScheduledStart" />
          <Type>
            <!--TODO: Need <xsl:template match="NullableType" mode="Types"></xsl:template>-->
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="RescheduleInterval">
          <Documentation>
            <summary>
Gets the length of time between automatic crawl re-scheduling.
</summary>
            <value>The length of time between automatic crawl re-scheduling, in seconds or <!--TODO: Need <xsl:template match="cref" mode="Root"></xsl:template>--> to disable automatic re-scheduling.</value>
          </Documentation>
          <Display Name="DisplayName_RescheduleInterval" ShortName="DisplayName_RescheduleInterval" Description="DisplayName_RescheduleInterval" />
          <Type>
            <!--TODO: Need <xsl:template match="NullableType" mode="Types"></xsl:template>-->
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="RescheduleFromJobEnd">
          <Documentation>
            <summary>
Gets a value indicating whether automatic rescheduling is calculated from the completion time of the previous job, versus the start time.
</summary>
            <value>
                      <see langword="true" /> if crawl jobs are automatically scheduled <see cref="RescheduleInterval" /> seconds from the completion of the previous job;
otherwise, <see langword="false" /> if crawl jobs are automatically scheduled <see cref="RescheduleInterval" /> seconds from the value
of <see cref="NextScheduledStart" /> at the time the job is started.
</value>
          </Documentation>
          <Display Name="DisplayName_RescheduleFromJobEnd" ShortName="DisplayName_RescheduleFromJobEnd" Description="DisplayName_RescheduleFromJobEnd" />
          <Type>
            <PredefinedType Keyword="bool" />
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="RescheduleAfterFail">
          <Documentation>
            <summary>
Gets a value indicating whether crawl jobs are automatically rescheduled even if the previous job failed.
</summary>
            <value>
                      <see langword="true" /> if crawl jobs are always automatically re-scheduled; otherwise, <see langword="false" /> if crawl jobs are automatically
re-scheduled only if the preceding job did not fail.
</value>
          </Documentation>
          <Display Name="DisplayName_RescheduleAfterFail" ShortName="DisplayName_RescheduleAfterFail" Description="DisplayName_RescheduleAfterFail" />
          <Type>
            <PredefinedType Keyword="bool" />
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="RootId">
          <Documentation>
            <summary>
Gets the primary key of the root directory entity.
</summary>
            <value>The primary key value of the root <see cref="ISubdirectory" /> entity.</value>
          </Documentation>
          <Type>
            <Identifier Name="Guid" />
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
      </Interface>
    </Namespace>
  </Source>
  <Source Path="Model\ICrawlJobListItem.cs" Id="9ba4b5d2-4627-4de6-b1ac-fbd78b901082">
    <Using Name="System" />
    <Namespace Name="FsInfoCat.Model">
      <Interface Name="ICrawlJobListItem" Access="public">
        <Documentation>
          <summary>
Represents a file system crawl job log list item entity.
</summary>
          <seealso cref="ICrawlJobLogRow" />
          <seealso cref="IEquatable{ICrawlJobListItem}" />
          <seealso cref="Local.Model.ILocalCrawlJobListItem" />
          <seealso cref="Upstream.Model.IUpstreamCrawlJobListItem" />
          <seealso cref="IDbContext.CrawlJobListing" />
        </Documentation>
        <Implements>
          <SimpleBaseType Name="ICrawlJobLogRow" />
          <SimpleBaseType>
            <!--TODO: Need <xsl:template match="GenericName" mode="BaseTypes"></xsl:template>-->
          </SimpleBaseType>
        </Implements>
        <Property Name="ConfigurationId">
          <Documentation>
            <summary>
Gets the primary key of the crawl configuration settings entity.
</summary>
            <value>The <see cref="IHasSimpleIdentifier.Id" /> of the <see cref="ICrawlConfigurationRow">crawl configuration</see> used for the crawl job.</value>
          </Documentation>
          <Type>
            <Identifier Name="Guid" />
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="ConfigurationDisplayName">
          <Documentation>
            <summary>
Gets the primary key of the crawl configuration settings entity.
</summary>
            <value>The <see cref="ICrawlConfigurationRow.DisplayName" /> of the <see cref="ICrawlConfigurationRow">crawl configuration</see> used for the crawl job.</value>
          </Documentation>
          <Type>
            <PredefinedType Keyword="string" />
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
      </Interface>
    </Namespace>
  </Source>
  <Source Path="Model\ICrawlJobLog.cs" Id="45f9ce4b-d35b-4bd5-86e5-63f240795591">
    <Using Name="System" />
    <Using Name="System.ComponentModel.DataAnnotations" />
    <Namespace Name="FsInfoCat.Model">
      <Interface Name="ICrawlJobLog" Access="public">
        <Documentation>
          <summary>
Log of crawl job results.
</summary>
          <seealso cref="IDbEntity" />
          <seealso cref="ICrawlSettings" />
          <seealso cref="Local.Model.ILocalCrawlJobLog" />
          <seealso cref="Upstream.Model.IUpstreamCrawlJobLog" />
          <seealso cref="ICrawlConfiguration.Logs" />
          <seealso cref="IDbContext.CrawlJobLogs" />
        </Documentation>
        <Implements>
          <SimpleBaseType Name="ICrawlJobLogRow" />
          <SimpleBaseType>
            <!--TODO: Need <xsl:template match="GenericName" mode="BaseTypes"></xsl:template>-->
          </SimpleBaseType>
        </Implements>
        <Property Name="Configuration">
          <Documentation>
            <summary>
Gets the configuration source for the file system crawl.
</summary>
            <value>The configuration for the file system crawl.</value>
          </Documentation>
          <Display Name="DisplayName_Configuration" ShortName="DisplayName_Configuration" Description="DisplayName_Configuration" />
          <Type>
            <Identifier Name="ICrawlConfiguration" />
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
      </Interface>
    </Namespace>
  </Source>
  <Source Path="Model\ICrawlJobLogRow.cs" Id="430dcae8-6d6f-4619-8d28-e4abea1d5bd8">
    <Using Name="System" />
    <Using Name="System.ComponentModel.DataAnnotations" />
    <Namespace Name="FsInfoCat.Model">
      <Interface Name="ICrawlJobLogRow" Access="public">
        <Documentation>
          <summary>
Represents a file system crawl job log entity.
</summary>
          <seealso cref="IDbEntity" />
          <seealso cref="ICrawlJob" />
          <seealso cref="IHasSimpleIdentifier" />
          <seealso cref="Local.Model.ILocalCrawlJobLogRow" />
          <seealso cref="Upstream.Model.IUpstreamCrawlJobLogRow" />
        </Documentation>
        <Implements>
          <SimpleBaseType Name="IDbEntity" />
          <SimpleBaseType Name="ICrawlJob" />
          <SimpleBaseType Name="IHasSimpleIdentifier" />
        </Implements>
        <Property Name="RootPath">
          <Documentation>
            <summary>
Gets root path of the crawl.
</summary>
            <value>The root path of the crawl.</value>
          </Documentation>
          <Display Name="DisplayName_RootPath" ShortName="DisplayName_RootPath" Description="DisplayName_RootPath" />
          <Type>
            <PredefinedType Keyword="string" />
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="StatusCode">
          <Documentation>
            <summary>
Gets a value indicating whether the current crawl configuration has been deactivated.
</summary>
            <value>
                      <see langword="true" /> if the current crawl configuration has been deactivated; otherwise, <see langword="false" /> to indicate that is
available for use.
</value>
          </Documentation>
          <Display Name="DisplayName_StatusCode" ShortName="DisplayName_StatusCode" Description="DisplayName_StatusCode" />
          <Type>
            <Identifier Name="CrawlStatus" />
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="CrawlEnd">
          <Documentation>
            <summary>
Gets the date and time when the crawl was finshed.
</summary>
            <value>The date and time when the crawl was finshed or <see langword="null" /> if the current crawl is still active.</value>
          </Documentation>
          <Display Name="DisplayName_CrawlEnd" ShortName="DisplayName_CrawlEnd" Description="DisplayName_CrawlEnd" />
          <Type>
            <!--TODO: Need <xsl:template match="NullableType" mode="Types"></xsl:template>-->
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
      </Interface>
    </Namespace>
  </Source>
  <Source Path="Model\ICrawlSettings.cs" Id="e57eb611-e676-4001-8079-48fb444b430a">
    <Using Name="System.ComponentModel.DataAnnotations" />
    <Namespace Name="FsInfoCat.Model">
      <Interface Name="ICrawlSettings" Access="public">
        <Documentation>
          <summary>
Specifies the settings for a file system crawl.
</summary>
        </Documentation>
        <Property Name="MaxRecursionDepth">
          <Documentation>
            <summary>
Gets the maximum recursion depth.
</summary>
            <value>
The maximum sub-folder recursion depth, where a value less than <!--TODO: Need <xsl:template match="c" mode="Root"></xsl:template>--> only crawls the root <see cref="Model.ISubdirectory" />,
a value will crawl 1 sub-folder deep, and so on.
</value>
          </Documentation>
          <Display Name="DisplayName_MaxRecursionDepth" ShortName="DisplayName_MaxRecursionDepth" Description="DisplayName_MaxRecursionDepth" />
          <Type>
            <PredefinedType Keyword="ushort" />
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="MaxTotalItems">
          <Documentation>
            <summary>
Gets the maximum total items to crawl.
</summary>
            <value>The maximum total items to crawl, including both files and subdirectories.</value>
          </Documentation>
          <Display Name="DisplayName_MaxTotalItems" ShortName="DisplayName_MaxTotalItems" Description="DisplayName_MaxTotalItems" />
          <Type>
            <!--TODO: Need <xsl:template match="NullableType" mode="Types"></xsl:template>-->
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="TTL">
          <Documentation>
            <summary>
Gets the maximum duration of the crawl.
</summary>
            <value>The maximum duration of the crawl, in seconds. This value should never be less than <!--TODO: Need <xsl:template match="c" mode="Root"></xsl:template>-->.</value>
          </Documentation>
          <Display Name="DisplayName_TTL" ShortName="DisplayName_TTL" Description="DisplayName_TTL" />
          <Type>
            <!--TODO: Need <xsl:template match="NullableType" mode="Types"></xsl:template>-->
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
      </Interface>
    </Namespace>
  </Source>
  <Source Path="Model\IDbContext.cs" Id="a2a71106-e8a8-4985-bf01-306f6a63d5a4">
    <Using Name="Microsoft.EntityFrameworkCore.ChangeTracking" />
    <Using Name="System" />
    <Using Name="System.Collections.Generic" />
    <Using Name="System.Diagnostics.CodeAnalysis" />
    <Using Name="System.Threading" />
    <Using Name="System.Threading.Tasks" />
    <Namespace Name="FsInfoCat.Model">
      <Interface Name="IDbContext" Access="public">
        <Documentation>
          <summary>
Generic interface for FS InfoCat database context.
</summary>
          <seealso cref="Local.Model.ILocalDbContext" />
          <seealso cref="Upstream.Model.IUpstreamDbContext" />
          <seealso cref="BaseDbContext" />
          <seealso cref="IAudioPropertiesListItem" />
          <seealso cref="IAudioPropertySet" />
          <seealso cref="IBinaryPropertySet" />
          <seealso cref="IComparison" />
          <seealso cref="ICrawlConfigReportItem" />
          <seealso cref="ICrawlConfiguration" />
          <seealso cref="ICrawlConfigurationListItem" />
          <seealso cref="ICrawlJobListItem" />
          <seealso cref="ICrawlJobLog" />
          <seealso cref="IDocumentPropertiesListItem" />
          <seealso cref="IDocumentPropertySet" />
          <seealso cref="IDRMPropertiesListItem" />
          <seealso cref="IDRMPropertySet" />
          <seealso cref="IFile" />
          <seealso cref="IFileAccessError" />
          <seealso cref="IFileListItemWithAncestorNames" />
          <seealso cref="IFileListItemWithBinaryProperties" />
          <seealso cref="IFileListItemWithBinaryPropertiesAndAncestorNames" />
          <seealso cref="IFileSystem" />
          <seealso cref="IFileSystemListItem" />
          <seealso cref="IGPSPropertiesListItem" />
          <seealso cref="IGPSPropertySet" />
          <seealso cref="IImagePropertiesListItem" />
          <seealso cref="IImagePropertySet" />
          <seealso cref="IMediaPropertiesListItem" />
          <seealso cref="IMediaPropertySet" />
          <seealso cref="IMusicPropertiesListItem" />
          <seealso cref="IMusicPropertySet" />
          <seealso cref="IPersonalFileTag" />
          <seealso cref="IPersonalSubdirectoryTag" />
          <seealso cref="IPersonalTagDefinition" />
          <seealso cref="IPersonalVolumeTag" />
          <seealso cref="IPhotoPropertiesListItem" />
          <seealso cref="IPhotoPropertySet" />
          <seealso cref="IRecordedTVPropertiesListItem" />
          <seealso cref="IRecordedTVPropertySet" />
          <seealso cref="IRedundancy" />
          <seealso cref="IRedundantSet" />
          <seealso cref="IRedundantSetListItem" />
          <seealso cref="ISharedFileTag" />
          <seealso cref="ISharedSubdirectoryTag" />
          <seealso cref="ISharedTagDefinition" />
          <seealso cref="ISharedVolumeTag" />
          <seealso cref="ISubdirectory" />
          <seealso cref="ISubdirectoryAccessError" />
          <seealso cref="ISubdirectoryAncestorName" />
          <seealso cref="ISubdirectoryListItem" />
          <seealso cref="ISubdirectoryListItemWithAncestorNames" />
          <seealso cref="ISummaryPropertiesListItem" />
          <seealso cref="ISummaryPropertySet" />
          <seealso cref="ISymbolicName" />
          <seealso cref="ISymbolicNameListItem" />
          <seealso cref="IVideoPropertiesListItem" />
          <seealso cref="IVideoPropertySet" />
          <seealso cref="IVolume" />
          <seealso cref="IVolumeAccessError" />
          <seealso cref="IVolumeListItem" />
          <seealso cref="IVolumeListItemWithFileSystem" />
        </Documentation>
        <Implements>
          <SimpleBaseType Name="IDisposable" />
        </Implements>
        <Property Name="Comparisons">
          <Documentation>
            <summary>
Enumerates generic file comparison entities.
</summary>
            <value>A <see cref="IEnumerable{T}" /> that enumerates <see cref="IComparison" /> entities.</value>
          </Documentation>
          <Type>
            <Generic Name="IEnumerable">
              <Identifier Name="IComparison" />
            </Generic>
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="BinaryPropertySets">
          <Documentation>
            <summary>
Enumerates generic binary property set entities.
</summary>
            <value>A <see cref="IEnumerable{T}" /> that enumerates <see cref="IBinaryPropertySet" /> entities.</value>
          </Documentation>
          <Type>
            <Generic Name="IEnumerable">
              <Identifier Name="IBinaryPropertySet" />
            </Generic>
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="SummaryPropertySets">
          <Documentation>
            <summary>
Enumerates generic summary property set entities.
</summary>
            <value>A <see cref="IEnumerable{T}" /> that enumerates <see cref="ISummaryPropertySet" /> entities.</value>
          </Documentation>
          <Type>
            <Generic Name="IEnumerable">
              <Identifier Name="ISummaryPropertySet" />
            </Generic>
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="DocumentPropertySets">
          <Documentation>
            <summary>
Enumerates generic document property set entities.
</summary>
            <value>A <see cref="IEnumerable{T}" /> that enumerates <see cref="IDocumentPropertySet" /> entities.</value>
          </Documentation>
          <Type>
            <Generic Name="IEnumerable">
              <Identifier Name="IDocumentPropertySet" />
            </Generic>
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="AudioPropertySets">
          <Documentation>
            <summary>
Enumerates generic audio property set entities.
</summary>
            <value>A <see cref="IEnumerable{T}" /> that enumerates <see cref="IAudioPropertySet" /> entities.</value>
          </Documentation>
          <Type>
            <Generic Name="IEnumerable">
              <Identifier Name="IAudioPropertySet" />
            </Generic>
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="DRMPropertySets">
          <Documentation>
            <summary>
Enumerates generic DRM property set entities.
</summary>
            <value>A <see cref="IEnumerable{T}" /> that enumerates <see cref="IDRMPropertySet" /> entities.</value>
          </Documentation>
          <Type>
            <Generic Name="IEnumerable">
              <Identifier Name="IDRMPropertySet" />
            </Generic>
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="GPSPropertySets">
          <Documentation>
            <summary>
Enumerates generic GPS property set entities.
</summary>
            <value>A <see cref="IEnumerable{T}" /> that enumerates <see cref="IGPSPropertySet" /> entities.</value>
          </Documentation>
          <Type>
            <Generic Name="IEnumerable">
              <Identifier Name="IGPSPropertySet" />
            </Generic>
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="ImagePropertySets">
          <Documentation>
            <summary>
Enumerates generic image property set entities.
</summary>
            <value>A <see cref="IEnumerable{T}" /> that enumerates <see cref="IImagePropertySet" /> entities.</value>
          </Documentation>
          <Type>
            <Generic Name="IEnumerable">
              <Identifier Name="IImagePropertySet" />
            </Generic>
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="MediaPropertySets">
          <Documentation>
            <summary>
Enumerates generic media property set entities.
</summary>
            <value>A <see cref="IEnumerable{T}" /> that enumerates <see cref="IMediaPropertySet" /> entities.</value>
          </Documentation>
          <Type>
            <Generic Name="IEnumerable">
              <Identifier Name="IMediaPropertySet" />
            </Generic>
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="MusicPropertySets">
          <Documentation>
            <summary>
Enumerates generic music property set entities.
</summary>
            <value>A <see cref="IEnumerable{T}" /> that enumerates <see cref="IMusicPropertySet" /> entities.</value>
          </Documentation>
          <Type>
            <Generic Name="IEnumerable">
              <Identifier Name="IMusicPropertySet" />
            </Generic>
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="PhotoPropertySets">
          <Documentation>
            <summary>
Enumerates generic photo property set entities.
</summary>
            <value>A <see cref="IEnumerable{T}" /> that enumerates <see cref="IPhotoPropertySet" /> entities.</value>
          </Documentation>
          <Type>
            <Generic Name="IEnumerable">
              <Identifier Name="IPhotoPropertySet" />
            </Generic>
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="RecordedTVPropertySets">
          <Documentation>
            <summary>
Enumerates generic recorded TV property set entities.
</summary>
            <value>A <see cref="IEnumerable{T}" /> that enumerates <see cref="IRecordedTVPropertySet" /> entities.</value>
          </Documentation>
          <Type>
            <Generic Name="IEnumerable">
              <Identifier Name="IRecordedTVPropertySet" />
            </Generic>
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="VideoPropertySets">
          <Documentation>
            <summary>
Enumerates generic video property set entities.
</summary>
            <value>A <see cref="IEnumerable{T}" /> that enumerates <see cref="IVideoPropertySet" /> entities.</value>
          </Documentation>
          <Type>
            <Generic Name="IEnumerable">
              <Identifier Name="IVideoPropertySet" />
            </Generic>
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="FileAccessErrors">
          <Documentation>
            <summary>
Enumerates generic file access error entities.
</summary>
            <value>A <see cref="IEnumerable{T}" /> that enumerates <see cref="IFileAccessError" /> entities.</value>
          </Documentation>
          <Type>
            <Generic Name="IEnumerable">
              <Identifier Name="IFileAccessError" />
            </Generic>
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="Files">
          <Documentation>
            <summary>
Enumerates generic file entities.
</summary>
            <value>A <see cref="IEnumerable{T}" /> that enumerates <see cref="IFile" /> entities.</value>
          </Documentation>
          <Type>
            <Generic Name="IEnumerable">
              <Identifier Name="IFile" />
            </Generic>
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="FileSystems">
          <Documentation>
            <summary>
Enumerates generic file system entities.
</summary>
            <value>A <see cref="IEnumerable{T}" /> that enumerates <see cref="IFileSystem" /> entities.</value>
          </Documentation>
          <Type>
            <Generic Name="IEnumerable">
              <Identifier Name="IFileSystem" />
            </Generic>
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="Redundancies">
          <Documentation>
            <summary>
Enumerates generic redundancy entities.
</summary>
            <value>A <see cref="IEnumerable{T}" /> that enumerates <see cref="IRedundancy" /> entities.</value>
          </Documentation>
          <Type>
            <Generic Name="IEnumerable">
              <Identifier Name="IRedundancy" />
            </Generic>
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="RedundantSets">
          <Documentation>
            <summary>
Enumerates generic redundant set entities.
</summary>
            <value>A <see cref="IEnumerable{T}" /> that enumerates <see cref="IRedundantSet" /> entities.</value>
          </Documentation>
          <Type>
            <Generic Name="IEnumerable">
              <Identifier Name="IRedundantSet" />
            </Generic>
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="Subdirectories">
          <Documentation>
            <summary>
Enumerates generic sub-directory entities.
</summary>
            <value>A <see cref="IEnumerable{T}" /> that enumerates <see cref="ISubdirectory" /> entities.</value>
          </Documentation>
          <Type>
            <Generic Name="IEnumerable">
              <Identifier Name="ISubdirectory" />
            </Generic>
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="SubdirectoryAccessErrors">
          <Documentation>
            <summary>
Enumerates generic sub-directory access error entities.
</summary>
            <value>A <see cref="IEnumerable{T}" /> that enumerates <see cref="ISubdirectoryAccessError" /> entities.</value>
          </Documentation>
          <Type>
            <Generic Name="IEnumerable">
              <Identifier Name="ISubdirectoryAccessError" />
            </Generic>
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="SymbolicNames">
          <Documentation>
            <summary>
Enumerates generic symbolic name entities.
</summary>
            <value>A <see cref="IEnumerable{T}" /> that enumerates <see cref="ISymbolicName" /> entities.</value>
          </Documentation>
          <Type>
            <Generic Name="IEnumerable">
              <Identifier Name="ISymbolicName" />
            </Generic>
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="VolumeAccessErrors">
          <Documentation>
            <summary>
Enumerates generic volume access error entities.
</summary>
            <value>A <see cref="IEnumerable{T}" /> that enumerates <see cref="IVolumeAccessError" /> entities.</value>
          </Documentation>
          <Type>
            <Generic Name="IEnumerable">
              <Identifier Name="IVolumeAccessError" />
            </Generic>
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="Volumes">
          <Documentation>
            <summary>
Enumerates generic volume entities.
</summary>
            <value>A <see cref="IEnumerable{T}" /> that enumerates <see cref="IVolume" /> entities.</value>
          </Documentation>
          <Type>
            <Generic Name="IEnumerable">
              <Identifier Name="IVolume" />
            </Generic>
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="PersonalTagDefinitions">
          <Documentation>
            <summary>
Enumerates generic personal tag definition entities.
</summary>
            <value>A <see cref="IEnumerable{T}" /> that enumerates <see cref="IPersonalTagDefinition" /> entities.</value>
          </Documentation>
          <Type>
            <Generic Name="IEnumerable">
              <Identifier Name="IPersonalTagDefinition" />
            </Generic>
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="PersonalFileTags">
          <Documentation>
            <summary>
Enumerates generic personal file tag entities.
</summary>
            <value>A <see cref="IEnumerable{T}" /> that enumerates <see cref="IPersonalFileTag" /> entities.</value>
          </Documentation>
          <Type>
            <Generic Name="IEnumerable">
              <Identifier Name="IPersonalFileTag" />
            </Generic>
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="PersonalSubdirectoryTags">
          <Documentation>
            <summary>
Enumerates generic personal subdirectory tag entities.
</summary>
            <value>A <see cref="IEnumerable{T}" /> that enumerates <see cref="IPersonalSubdirectoryTag" /> entities.</value>
          </Documentation>
          <Type>
            <Generic Name="IEnumerable">
              <Identifier Name="IPersonalSubdirectoryTag" />
            </Generic>
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="PersonalVolumeTags">
          <Documentation>
            <summary>
Enumerates generic personal volume tag entities.
</summary>
            <value>A <see cref="IEnumerable{T}" /> that enumerates <see cref="IPersonalVolumeTag" /> entities.</value>
          </Documentation>
          <Type>
            <Generic Name="IEnumerable">
              <Identifier Name="IPersonalVolumeTag" />
            </Generic>
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="SharedTagDefinitions">
          <Documentation>
            <summary>
Enumerates generic shared tag definition entities.
</summary>
            <value>A <see cref="IEnumerable{T}" /> that enumerates <see cref="ISharedTagDefinition" /> entities.</value>
          </Documentation>
          <Type>
            <Generic Name="IEnumerable">
              <Identifier Name="ISharedTagDefinition" />
            </Generic>
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="SharedFileTags">
          <Documentation>
            <summary>
Enumerates generic shared file tag entities.
</summary>
            <value>A <see cref="IEnumerable{T}" /> that enumerates <see cref="ISharedFileTag" /> entities.</value>
          </Documentation>
          <Type>
            <Generic Name="IEnumerable">
              <Identifier Name="ISharedFileTag" />
            </Generic>
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="SharedSubdirectoryTags">
          <Documentation>
            <summary>
Enumerates generic shared subdirectory tag entities.
</summary>
            <value>A <see cref="IEnumerable{T}" /> that enumerates <see cref="ISharedSubdirectoryTag" /> entities.</value>
          </Documentation>
          <Type>
            <Generic Name="IEnumerable">
              <Identifier Name="ISharedSubdirectoryTag" />
            </Generic>
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="SharedVolumeTags">
          <Documentation>
            <summary>
Enumerates generic shared volume tag entities.
</summary>
            <value>A <see cref="IEnumerable{T}" /> that enumerates <see cref="ISharedVolumeTag" /> entities.</value>
          </Documentation>
          <Type>
            <Generic Name="IEnumerable">
              <Identifier Name="ISharedVolumeTag" />
            </Generic>
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="CrawlConfigurations">
          <Documentation>
            <summary>
Enumerates generic crawl configuration entities.
</summary>
          </Documentation>
          <Type>
            <Generic Name="IEnumerable">
              <Identifier Name="ICrawlConfiguration" />
            </Generic>
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="CrawlJobLogs">
          <Documentation>
            <summary>
Enumerates generic crawl log entities from the upstream (remote) database.
</summary>
          </Documentation>
          <Type>
            <Generic Name="IEnumerable">
              <Identifier Name="ICrawlJobLog" />
            </Generic>
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="SymbolicNameListing">
          <Documentation>
            <summary>
Enumerates entites from the symblic name listing view.
</summary>
            <value>Result entities from a view of <see cref="SymbolicNames" /> joined with <see cref="FileSystems" />.</value>
          </Documentation>
          <Type>
            <Generic Name="IEnumerable">
              <Identifier Name="ISymbolicNameListItem" />
            </Generic>
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="FileSystemListing">
          <Documentation>
            <summary>
Enumerates entites from the file system listing view.
</summary>
            <value>Result entities from a view of <see cref="FileSystems" /> joined with <see cref="SymbolicNames" /> and <see cref="Volumes" />.</value>
          </Documentation>
          <Type>
            <Generic Name="IEnumerable">
              <Identifier Name="IFileSystemListItem" />
            </Generic>
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="PersonalTagDefinitionListing">
          <Documentation>
            <summary>
Enumerates entites from the personal tag definition listing view.
</summary>
            <value>Result entities from a view of <see cref="PersonalTagDefinitions" /> joined with <see cref="Files" />, <see cref="Subdirectories" /> and <see cref="Volumes" />.</value>
          </Documentation>
          <Type>
            <Generic Name="IEnumerable">
              <Identifier Name="ITagDefinitionListItem" />
            </Generic>
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="SharedTagDefinitionListing">
          <Documentation>
            <summary>
Enumerates entites from the shared tag definition listing view.
</summary>
            <value>Result entities from a view of <see cref="SharedTagDefinitions" /> joined with <see cref="Files" />, <see cref="Subdirectories" /> and <see cref="Volumes" />.</value>
          </Documentation>
          <Type>
            <Generic Name="IEnumerable">
              <Identifier Name="ITagDefinitionListItem" />
            </Generic>
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="RedundantSetListing">
          <Documentation>
            <summary>
Enumerates entites from the redundant set listing view.
</summary>
            <value>Result entities from a view of <see cref="RedundantSets" /> joined with <see cref="BinaryPropertySets" /> and <see cref="Redundancies" />.</value>
          </Documentation>
          <Type>
            <Generic Name="IEnumerable">
              <Identifier Name="IRedundantSetListItem" />
            </Generic>
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="VolumeListing">
          <Documentation>
            <summary>
Enumerates entites from the volume listing view intended for display listings of a specific file system.
</summary>
            <value>
Result entities from a view of <see cref="Volumes" /> joined with <see cref="Subdirectories" />, <see cref="VolumeAccessErrors" />, <see cref="SharedVolumeTags" />
and <see cref="PersonalVolumeTags" />.
</value>
          </Documentation>
          <Type>
            <Generic Name="IEnumerable">
              <Identifier Name="IVolumeListItem" />
            </Generic>
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="VolumeListingWithFileSystem">
          <Documentation>
            <summary>
Enumerates entites from the volume listing view.
</summary>
            <value>
Result entities from a view of <see cref="Volumes" /> joined with <see cref="FileSystems" />, <see cref="Subdirectories" />, <see cref="VolumeAccessErrors" />,
<see cref="SharedVolumeTags" /> and <see cref="PersonalVolumeTags" />.
</value>
          </Documentation>
          <Type>
            <Generic Name="IEnumerable">
              <Identifier Name="IVolumeListItemWithFileSystem" />
            </Generic>
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="SubdirectoryListing">
          <Documentation>
            <summary>
Enumerates entites from the subdirectory listing view.
</summary>
            <value>Result entities from a view of <see cref="Subdirectories" /> joined with <see cref="Files" />, <see cref="Subdirectories" /> and <see cref="CrawlConfigurations" />.</value>
          </Documentation>
          <Type>
            <Generic Name="IEnumerable">
              <Identifier Name="ISubdirectoryListItem" />
            </Generic>
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="SubdirectoryListingWithAncestorNames">
          <Documentation>
            <summary>
Enumerates entites from the subdirectory listing view that includes ancestor path element names.
</summary>
            <value>Result entities from a view of <see cref="Subdirectories" /> joined with <see cref="Files" />, <see cref="Subdirectories" /> and <see cref="CrawlConfigurations" />.</value>
          </Documentation>
          <Type>
            <Generic Name="IEnumerable">
              <Identifier Name="ISubdirectoryListItemWithAncestorNames" />
            </Generic>
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="SubdirectoryAncestorNames">
          <Documentation>
            <summary>
Enumerates entites from a simplified subdirectory listing view that includes ancestor path element names.
</summary>
            <value>Result entities from a view of <see cref="Subdirectories" /> joined with <see cref="Subdirectories" /> and <see cref="CrawlConfigurations" />.</value>
          </Documentation>
          <Type>
            <Generic Name="IEnumerable">
              <Identifier Name="ISubdirectoryAncestorName" />
            </Generic>
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="FileListingWithAncestorNames">
          <Documentation>
            <summary>
Enumerates entites from the file listing view that includes ancestor path element names.
</summary>
            <value>Result entities from a view of <see cref="Files" /> joined with <see cref="Subdirectories" />.</value>
          </Documentation>
          <Type>
            <Generic Name="IEnumerable">
              <Identifier Name="IFileListItemWithAncestorNames" />
            </Generic>
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="FileListingWithBinaryProperties">
          <Documentation>
            <summary>
Enumerates entites from the file listing view that includes size and hash.
</summary>
            <value>Result entities from a view of <see cref="Files" /> joined with <see cref="BinaryPropertySets" />.</value>
          </Documentation>
          <Type>
            <Generic Name="IEnumerable">
              <Identifier Name="IFileListItemWithBinaryProperties" />
            </Generic>
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="FileListingWithBinaryPropertiesAndAncestorNames">
          <Documentation>
            <summary>
Enumerates entites from the file listing view that includes size, hash and ancestor path element names.
</summary>
            <value>Result entities from a view of <see cref="Files" /> joined with <see cref="Subdirectories" /> and <see cref="BinaryPropertySets" />.</value>
          </Documentation>
          <Type>
            <Generic Name="IEnumerable">
              <Identifier Name="IFileListItemWithBinaryPropertiesAndAncestorNames" />
            </Generic>
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="CrawlConfigListing">
          <Documentation>
            <summary>
Enumerates entites from the file listing view that includes size and hash.
</summary>
            <value>Result entities from a view of <see cref="CrawlConfigurations" /> joined with <see cref="Subdirectories" />, <see cref="Volumes" />,  and <see cref="FileSystems" />.</value>
          </Documentation>
          <Type>
            <Generic Name="IEnumerable">
              <Identifier Name="ICrawlConfigurationListItem" />
            </Generic>
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="CrawlConfigReport">
          <Documentation>
            <summary>
Enumerates entities representing crawl configuration result report rows.
</summary>
            <value>Result entities from a view of <see cref="CrawlConfigurations" /> joined with <see cref="Subdirectories" />, <see cref="Volumes" />,  and <see cref="FileSystems" />.</value>
          </Documentation>
          <Type>
            <Generic Name="IEnumerable">
              <Identifier Name="ICrawlConfigReportItem" />
            </Generic>
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="CrawlJobListing">
          <Documentation>
            <summary>
Enumerates entites from the crawl job logs view that includes configuration information.
</summary>
            <value>Result entities from a view of <see cref="CrawlJobLogs" /> joined with <see cref="CrawlConfigurations" />.</value>
          </Documentation>
          <Type>
            <Generic Name="IEnumerable">
              <Identifier Name="ICrawlJobListItem" />
            </Generic>
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="SummaryPropertiesListing">
          <Documentation>
            <summary>
Enumerates entites from the summary properties listing view that includes file counts.
</summary>
            <value>Result entities from a view of <see cref="SummaryPropertySets" /> joined with <see cref="Files" />.</value>
          </Documentation>
          <Type>
            <Generic Name="IEnumerable">
              <Identifier Name="ISummaryPropertiesListItem" />
            </Generic>
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="DocumentPropertiesListing">
          <Documentation>
            <summary>
Enumerates entites from the document properties listing view that includes file counts.
</summary>
            <value>Result entities from a view of <see cref="DocumentPropertySets" /> joined with <see cref="Files" />.</value>
          </Documentation>
          <Type>
            <Generic Name="IEnumerable">
              <Identifier Name="IDocumentPropertiesListItem" />
            </Generic>
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="AudioPropertiesListing">
          <Documentation>
            <summary>
Enumerates entites from the audio properties listing view that includes file counts.
</summary>
            <value>Result entities from a view of <see cref="AudioPropertySets" /> joined with <see cref="Files" />.</value>
          </Documentation>
          <Type>
            <Generic Name="IEnumerable">
              <Identifier Name="IAudioPropertiesListItem" />
            </Generic>
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="DRMPropertiesListing">
          <Documentation>
            <summary>
Enumerates entites from the DRM properties listing view that includes file counts.
</summary>
            <value>Result entities from a view of <see cref="DRMPropertySets" /> joined with <see cref="Files" />.</value>
          </Documentation>
          <Type>
            <Generic Name="IEnumerable">
              <Identifier Name="IDRMPropertiesListItem" />
            </Generic>
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="GPSPropertiesListing">
          <Documentation>
            <summary>
Enumerates entites from the GPS properties listing view that includes file counts.
</summary>
            <value>Result entities from a view of <see cref="GPSPropertySets" /> joined with <see cref="Files" />.</value>
          </Documentation>
          <Type>
            <Generic Name="IEnumerable">
              <Identifier Name="IGPSPropertiesListItem" />
            </Generic>
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="ImagePropertiesListing">
          <Documentation>
            <summary>
Enumerates entites from the image properties listing view that includes file counts.
</summary>
            <value>Result entities from a view of <see cref="ImagePropertySets" /> joined with <see cref="Files" />.</value>
          </Documentation>
          <Type>
            <Generic Name="IEnumerable">
              <Identifier Name="IImagePropertiesListItem" />
            </Generic>
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="MediaPropertiesListing">
          <Documentation>
            <summary>
Enumerates entites from the media properties listing view that includes file counts.
</summary>
            <value>Result entities from a view of <see cref="MediaPropertySets" /> joined with <see cref="Files" />.</value>
          </Documentation>
          <Type>
            <Generic Name="IEnumerable">
              <Identifier Name="IMediaPropertiesListItem" />
            </Generic>
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="MusicPropertiesListing">
          <Documentation>
            <summary>
Enumerates entites from the music properties listing view that includes file counts.
</summary>
            <value>Result entities from a view of <see cref="MusicPropertySets" /> joined with <see cref="Files" />.</value>
          </Documentation>
          <Type>
            <Generic Name="IEnumerable">
              <Identifier Name="IMusicPropertiesListItem" />
            </Generic>
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="PhotoPropertiesListing">
          <Documentation>
            <summary>
Enumerates entites from the photo properties listing view that includes file counts.
</summary>
            <value>Result entities from a view of <see cref="PhotoPropertySets" /> joined with <see cref="Files" />.</value>
          </Documentation>
          <Type>
            <Generic Name="IEnumerable">
              <Identifier Name="IPhotoPropertiesListItem" />
            </Generic>
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="RecordedTVPropertiesListing">
          <Documentation>
            <summary>
Enumerates entites from the recorded TV properties listing view that includes file counts.
</summary>
            <value>Result entities from a view of <see cref="RecordedTVPropertySets" /> joined with <see cref="Files" />.</value>
          </Documentation>
          <Type>
            <Generic Name="IEnumerable">
              <Identifier Name="IRecordedTVPropertiesListItem" />
            </Generic>
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="VideoPropertiesListing">
          <Documentation>
            <summary>
Enumerates entites from the video properties listing view that includes file counts.
</summary>
            <value>Result entities from a view of <see cref="VideoPropertySets" /> joined with <see cref="Files" />.</value>
          </Documentation>
          <Type>
            <Generic Name="IEnumerable">
              <Identifier Name="IVideoPropertiesListItem" />
            </Generic>
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="PersonalVolumeTagListing">
          <Documentation>
            <summary>
Enumerates entites from the personal volume tags listing view that includes volume and tag properties.
</summary>
            <value>Result entities from a view of <see cref="PersonalVolumeTags" /> joined with <see cref="Volumes" /> and <see cref="PersonalTagDefinitions" />.</value>
          </Documentation>
          <Type>
            <Generic Name="IEnumerable">
              <Identifier Name="IItemTagListItem" />
            </Generic>
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="SharedVolumeTagListing">
          <Documentation>
            <summary>
Enumerates entites from the shared volume tags listing view that includes volume and tag properties.
</summary>
            <value>Result entities from a view of <see cref="SharedVolumeTags" /> joined with <see cref="Volumes" /> and <see cref="SharedTagDefinitions" />.</value>
          </Documentation>
          <Type>
            <Generic Name="IEnumerable">
              <Identifier Name="IItemTagListItem" />
            </Generic>
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="PersonalSubdirectoryTagListing">
          <Documentation>
            <summary>
Enumerates entites from the personal subdirectory tags listing view that includes subdirectory and tag properties.
</summary>
            <value>Result entities from a view of <see cref="PersonalSubdirectoryTags" /> joined with <see cref="Subdirectories" /> and <see cref="PersonalTagDefinitions" />.</value>
          </Documentation>
          <Type>
            <Generic Name="IEnumerable">
              <Identifier Name="IItemTagListItem" />
            </Generic>
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="SharedSubdirectoryTagListing">
          <Documentation>
            <summary>
Enumerates entites from the shared subdirectory tags listing view that includes file and tag properties.
</summary>
            <value>Result entities from a view of <see cref="SharedSubdirectoryTags" /> joined with <see cref="Subdirectories" /> and <see cref="SharedTagDefinitions" />.</value>
          </Documentation>
          <Type>
            <Generic Name="IEnumerable">
              <Identifier Name="IItemTagListItem" />
            </Generic>
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="PersonalFileTagListing">
          <Documentation>
            <summary>
Enumerates entites from the personal file tags listing view that includes file and tag properties.
</summary>
            <value>Result entities from a view of <see cref="PersonalFileTags" /> joined with <see cref="Files" /> and <see cref="PersonalTagDefinitions" />.</value>
          </Documentation>
          <Type>
            <Generic Name="IEnumerable">
              <Identifier Name="IItemTagListItem" />
            </Generic>
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="SharedFileTagListing">
          <Documentation>
            <summary>
Enumerates entites from the shared file tag listing view that includes file and tag properties.
</summary>
            <value>Result entities from a view of <see cref="SharedFileTags" /> joined with <see cref="Files" /> and <see cref="SharedTagDefinitions" />.</value>
          </Documentation>
          <Type>
            <Generic Name="IEnumerable">
              <Identifier Name="IItemTagListItem" />
            </Generic>
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Method Name="FindMatchingAsync">
          <Documentation>
            <summary>
Finds the generic <see cref="ISummaryPropertySet" /> that matches the specified summary properties.
</summary>
            <param name="properties">The <see cref="ISummaryProperties" /> object containing the property values to match.</param>
            <param name="cancellationToken">The cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
            <returns>The generic <see cref="ISummaryPropertySet" /> for the matching entity or <see langword="null" /> if no match was found.</returns>
          </Documentation>
          <Parameters>
            <Parameter Name="properties">
              <Type>
                <Identifier Name="ISummaryProperties" />
              </Type>
            </Parameter>
            <Parameter Name="cancellationToken">
              <Type>
                <Identifier Name="CancellationToken" />
              </Type>
            </Parameter>
          </Parameters>
          <ReturnType>
            <Generic Name="Task">
              <Identifier Name="ISummaryPropertySet" />
            </Generic>
          </ReturnType>
        </Method>
        <Method Name="FindMatchingAsync">
          <Documentation>
            <summary>
Finds the generic <see cref="IDocumentPropertySet" /> that matches the specified summary properties.
</summary>
            <param name="properties">The <see cref="IDocumentProperties" /> object containing the property values to match.</param>
            <param name="cancellationToken">The cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
            <returns>The generic <see cref="IDocumentPropertySet" /> for the matching entity or <see langword="null" /> if no match was found.</returns>
          </Documentation>
          <Parameters>
            <Parameter Name="properties">
              <Type>
                <Identifier Name="IDocumentProperties" />
              </Type>
            </Parameter>
            <Parameter Name="cancellationToken">
              <Type>
                <Identifier Name="CancellationToken" />
              </Type>
            </Parameter>
          </Parameters>
          <ReturnType>
            <Generic Name="Task">
              <Identifier Name="IDocumentPropertySet" />
            </Generic>
          </ReturnType>
        </Method>
        <Method Name="FindMatchingAsync">
          <Documentation>
            <summary>
Finds the generic <see cref="IAudioPropertySet" /> that matches the specified summary properties.
</summary>
            <param name="properties">The <see cref="IAudioProperties" /> object containing the property values to match.</param>
            <param name="cancellationToken">The cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
            <returns>The generic <see cref="IAudioPropertySet" /> for the matching entity or <see langword="null" /> if no match was found.</returns>
          </Documentation>
          <Parameters>
            <Parameter Name="properties">
              <Type>
                <Identifier Name="IAudioProperties" />
              </Type>
            </Parameter>
            <Parameter Name="cancellationToken">
              <Type>
                <Identifier Name="CancellationToken" />
              </Type>
            </Parameter>
          </Parameters>
          <ReturnType>
            <Generic Name="Task">
              <Identifier Name="IAudioPropertySet" />
            </Generic>
          </ReturnType>
        </Method>
        <Method Name="FindMatchingAsync">
          <Documentation>
            <summary>
Finds the generic <see cref="IDRMPropertySet" /> that matches the specified summary properties.
</summary>
            <param name="properties">The <see cref="IDRMProperties" /> object containing the property values to match.</param>
            <param name="cancellationToken">The cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
            <returns>The generic <see cref="IDRMPropertySet" /> for the matching entity or <see langword="null" /> if no match was found.</returns>
          </Documentation>
          <Parameters>
            <Parameter Name="properties">
              <Type>
                <Identifier Name="IDRMProperties" />
              </Type>
            </Parameter>
            <Parameter Name="cancellationToken">
              <Type>
                <Identifier Name="CancellationToken" />
              </Type>
            </Parameter>
          </Parameters>
          <ReturnType>
            <Generic Name="Task">
              <Identifier Name="IDRMPropertySet" />
            </Generic>
          </ReturnType>
        </Method>
        <Method Name="FindMatchingAsync">
          <Documentation>
            <summary>
Finds the generic <see cref="IGPSPropertySet" /> that matches the specified summary properties.
</summary>
            <param name="properties">The <see cref="IGPSProperties" /> object containing the property values to match.</param>
            <param name="cancellationToken">The cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
            <returns>The generic <see cref="IGPSPropertySet" /> for the matching entity or <see langword="null" /> if no match was found.</returns>
          </Documentation>
          <Parameters>
            <Parameter Name="properties">
              <Type>
                <Identifier Name="IGPSProperties" />
              </Type>
            </Parameter>
            <Parameter Name="cancellationToken">
              <Type>
                <Identifier Name="CancellationToken" />
              </Type>
            </Parameter>
          </Parameters>
          <ReturnType>
            <Generic Name="Task">
              <Identifier Name="IGPSPropertySet" />
            </Generic>
          </ReturnType>
        </Method>
        <Method Name="FindMatchingAsync">
          <Documentation>
            <summary>
Finds the generic <see cref="IImagePropertySet" /> that matches the specified summary properties.
</summary>
            <param name="properties">The <see cref="IImageProperties" /> object containing the property values to match.</param>
            <param name="cancellationToken">The cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
            <returns>The generic <see cref="IImagePropertySet" /> for the matching entity or <see langword="null" /> if no match was found.</returns>
          </Documentation>
          <Parameters>
            <Parameter Name="properties">
              <Type>
                <Identifier Name="IImageProperties" />
              </Type>
            </Parameter>
            <Parameter Name="cancellationToken">
              <Type>
                <Identifier Name="CancellationToken" />
              </Type>
            </Parameter>
          </Parameters>
          <ReturnType>
            <Generic Name="Task">
              <Identifier Name="IImagePropertySet" />
            </Generic>
          </ReturnType>
        </Method>
        <Method Name="FindMatchingAsync">
          <Documentation>
            <summary>
Finds the generic <see cref="IMediaPropertySet" /> that matches the specified summary properties.
</summary>
            <param name="properties">The <see cref="IMediaProperties" /> object containing the property values to match.</param>
            <param name="cancellationToken">The cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
            <returns>The generic <see cref="IMediaPropertySet" /> for the matching entity or <see langword="null" /> if no match was found.</returns>
          </Documentation>
          <Parameters>
            <Parameter Name="properties">
              <Type>
                <Identifier Name="IMediaProperties" />
              </Type>
            </Parameter>
            <Parameter Name="cancellationToken">
              <Type>
                <Identifier Name="CancellationToken" />
              </Type>
            </Parameter>
          </Parameters>
          <ReturnType>
            <Generic Name="Task">
              <Identifier Name="IMediaPropertySet" />
            </Generic>
          </ReturnType>
        </Method>
        <Method Name="FindMatchingAsync">
          <Documentation>
            <summary>
Finds the generic <see cref="IMusicPropertySet" /> that matches the specified summary properties.
</summary>
            <param name="properties">The <see cref="IMusicProperties" /> object containing the property values to match.</param>
            <param name="cancellationToken">The cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
            <returns>The generic <see cref="IMusicPropertySet" /> for the matching entity or <see langword="null" /> if no match was found.</returns>
          </Documentation>
          <Parameters>
            <Parameter Name="properties">
              <Type>
                <Identifier Name="IMusicProperties" />
              </Type>
            </Parameter>
            <Parameter Name="cancellationToken">
              <Type>
                <Identifier Name="CancellationToken" />
              </Type>
            </Parameter>
          </Parameters>
          <ReturnType>
            <Generic Name="Task">
              <Identifier Name="IMusicPropertySet" />
            </Generic>
          </ReturnType>
        </Method>
        <Method Name="FindMatchingAsync">
          <Documentation>
            <summary>
Finds the generic <see cref="IPhotoPropertySet" /> that matches the specified summary properties.
</summary>
            <param name="properties">The <see cref="IPhotoProperties" /> object containing the property values to match.</param>
            <param name="cancellationToken">The cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
            <returns>The generic <see cref="IPhotoPropertySet" /> for the matching entity or <see langword="null" /> if no match was found.</returns>
          </Documentation>
          <Parameters>
            <Parameter Name="properties">
              <Type>
                <Identifier Name="IPhotoProperties" />
              </Type>
            </Parameter>
            <Parameter Name="cancellationToken">
              <Type>
                <Identifier Name="CancellationToken" />
              </Type>
            </Parameter>
          </Parameters>
          <ReturnType>
            <Generic Name="Task">
              <Identifier Name="IPhotoPropertySet" />
            </Generic>
          </ReturnType>
        </Method>
        <Method Name="FindMatchingAsync">
          <Documentation>
            <summary>
Finds the generic <see cref="IRecordedTVPropertySet" /> that matches the specified summary properties.
</summary>
            <param name="properties">The <see cref="IRecordedTVProperties" /> object containing the property values to match.</param>
            <param name="cancellationToken">The cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
            <returns>The generic <see cref="IRecordedTVPropertySet" /> for the matching entity or <see langword="null" /> if no match was found.</returns>
          </Documentation>
          <Parameters>
            <Parameter Name="properties">
              <Type>
                <Identifier Name="IRecordedTVProperties" />
              </Type>
            </Parameter>
            <Parameter Name="cancellationToken">
              <Type>
                <Identifier Name="CancellationToken" />
              </Type>
            </Parameter>
          </Parameters>
          <ReturnType>
            <Generic Name="Task">
              <Identifier Name="IRecordedTVPropertySet" />
            </Generic>
          </ReturnType>
        </Method>
        <Method Name="FindMatchingAsync">
          <Documentation>
            <summary>
Finds the generic <see cref="IVideoPropertySet" /> that matches the specified summary properties.
</summary>
            <param name="properties">The <see cref="IVideoProperties" /> object containing the property values to match.</param>
            <param name="cancellationToken">The cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
            <returns>The generic <see cref="IVideoPropertySet" /> for the matching entity or <see langword="null" /> if no match was found.</returns>
          </Documentation>
          <Parameters>
            <Parameter Name="properties">
              <Type>
                <Identifier Name="IVideoProperties" />
              </Type>
            </Parameter>
            <Parameter Name="cancellationToken">
              <Type>
                <Identifier Name="CancellationToken" />
              </Type>
            </Parameter>
          </Parameters>
          <ReturnType>
            <Generic Name="Task">
              <Identifier Name="IVideoPropertySet" />
            </Generic>
          </ReturnType>
        </Method>
        <Method Name="SaveChanges">
          <Documentation>
            <summary>
Saves the changes.
</summary>
            <returns>System.Int32.</returns>
          </Documentation>
          <ReturnType>
            <PredefinedType Keyword="int" />
          </ReturnType>
        </Method>
        <Method Name="SaveChanges">
          <Documentation>
            <summary>
Saves the changes.
</summary>
            <param name="acceptAllChangesOnSuccess">if set to <!--TODO: Need <xsl:template match="c" mode="Root"></xsl:template>--> [accept all changes on success].</param>
            <returns>System.Int32.</returns>
          </Documentation>
          <Parameters>
            <Parameter Name="acceptAllChangesOnSuccess">
              <Type>
                <PredefinedType Keyword="bool" />
              </Type>
            </Parameter>
          </Parameters>
          <ReturnType>
            <PredefinedType Keyword="int" />
          </ReturnType>
        </Method>
        <Method Name="SaveChangesAsync">
          <Documentation>
            <summary>
Saves the changes asynchronous.
</summary>
            <param name="acceptAllChangesOnSuccess">if set to <!--TODO: Need <xsl:template match="c" mode="Root"></xsl:template>--> [accept all changes on success].</param>
            <param name="cancellationToken">The cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
            <returns>Task&lt;System.Int32&gt;.</returns>
          </Documentation>
          <Parameters>
            <Parameter Name="acceptAllChangesOnSuccess">
              <Type>
                <PredefinedType Keyword="bool" />
              </Type>
            </Parameter>
            <Parameter Name="cancellationToken">
              <Type>
                <Identifier Name="CancellationToken" />
              </Type>
              <!--TODO: Need <xsl:template match="Default" mode="Root"></xsl:template>-->
            </Parameter>
          </Parameters>
          <ReturnType>
            <Generic Name="Task">
              <PredefinedType Keyword="int" />
            </Generic>
          </ReturnType>
        </Method>
        <Method Name="SaveChangesAsync">
          <Documentation>
            <summary>
Saves the changes asynchronous.
</summary>
            <param name="cancellationToken">The cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
            <returns>Task&lt;System.Int32&gt;.</returns>
          </Documentation>
          <Parameters>
            <Parameter Name="cancellationToken">
              <Type>
                <Identifier Name="CancellationToken" />
              </Type>
              <!--TODO: Need <xsl:template match="Default" mode="Root"></xsl:template>-->
            </Parameter>
          </Parameters>
          <ReturnType>
            <Generic Name="Task">
              <PredefinedType Keyword="int" />
            </Generic>
          </ReturnType>
        </Method>
        <Method Name="Entry">
          <Documentation>
            <summary>
Entries the specified entity.
</summary>
            <param name="entity">The entity.</param>
            <returns>EntityEntry&lt;TEntity&gt;.</returns>
            <!--TODO: Need <xsl:template match="typeparam" mode="DocumentationRoot"></xsl:template>-->
          </Documentation>
          <Parameters>
            <Parameter Name="entity" NotNull="true">
              <Type>
                <Identifier Name="TEntity" />
              </Type>
            </Parameter>
          </Parameters>
          <ReturnType>
            <Generic Name="EntityEntry">
              <Identifier Name="TEntity" />
            </Generic>
          </ReturnType>
          <!--TODO: Need <xsl:template match="TypeParameterList" mode="Root"></xsl:template>-->
          <!--TODO: Need <xsl:template match="Constraints" mode="Root"></xsl:template>-->
        </Method>
      </Interface>
    </Namespace>
  </Source>
  <Source Path="Model\IDbEntity.cs" Id="0a2a3ae0-9889-4e9d-a5ac-22709485b703">
    <Using Name="System" />
    <Using Name="System.ComponentModel.DataAnnotations" />
    <Namespace Name="FsInfoCat.Model">
      <Interface Name="IDbEntity" Access="public">
        <Documentation>
          <summary>
Base interface for all database entity objects which track the creation and modification dates as well as implementing the
<see cref="IValidatableObject" /> interface.
</summary>
          <seealso cref="IValidatableObject" />
          <seealso cref="DbEntity" />
          <seealso cref="IAccessError" />
          <seealso cref="IBinaryPropertySet" />
          <seealso cref="IComparison" />
          <seealso cref="ICrawlConfigurationRow" />
          <seealso cref="ICrawlJobLogRow" />
          <seealso cref="IDbFsItemRow" />
          <seealso cref="IFileSystemRow" />
          <seealso cref="IItemTagRow" />
          <seealso cref="IPropertiesRow" />
          <seealso cref="IRedundancy" />
          <seealso cref="IRedundantSetRow" />
          <seealso cref="ISymbolicNameRow" />
          <seealso cref="ITagDefinitionRow" />
          <seealso cref="IVolumeRow" />
          <seealso cref="Upstream.Model.IUpstreamDbEntity" />
          <seealso cref="Local.Model.ILocalDbEntity" />
          <seealso cref="IAccessError.Target" />
          <seealso cref="IItemTag.Tagged" />
          <seealso cref="IDbContext" />
        </Documentation>
        <!--TODO: Need <xsl:template match="Attribute[@Name='EntityInterface']" mode="Root" />-->
        <Implements>
          <SimpleBaseType Name="IValidatableObject" />
        </Implements>
        <Property Name="CreatedOn">
          <Documentation>
            <summary>
Gets or sets the database entity creation date/time.
</summary>
            <value>The date and time when the database entity was created.</value>
            <remarks>
For local databases, this value is the system-<see cref="DateTimeKind.Local" /> date and time. For upstream (remote) databases, this is the
<see cref="DateTimeKind.Utc">UTC</see> date and time.
</remarks>
          </Documentation>
          <Display Name="DisplayName_CreatedOn" ShortName="DisplayName_CreatedOn" Description="DisplayName_CreatedOn" />
          <Type>
            <Identifier Name="DateTime" />
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="ModifiedOn">
          <Documentation>
            <summary>
Gets or sets the database entity modification date/time.
</summary>
            <value>The date and time when the database entity was last modified.</value>
            <remarks>
For local databases, this value is the system-<see cref="DateTimeKind.Local" /> date and time. For upstream (remote) databases, this is the
<see cref="DateTimeKind.Utc">UTC</see> date and time.
</remarks>
          </Documentation>
          <Display Name="DisplayName_ModifiedOn" ShortName="DisplayName_ModifiedOn" Description="DisplayName_ModifiedOn" />
          <Type>
            <Identifier Name="DateTime" />
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
      </Interface>
    </Namespace>
  </Source>
  <Source Path="Model\IDbEntityHandlesAfterDelete.cs" Id="ee73f46a-7ec1-48ce-addd-622e8dc76e43">
    <Using Name="System.Threading" />
    <Using Name="System.Threading.Tasks" />
    <Namespace Name="FsInfoCat.Model">
      <Interface Name="IDbEntityHandlesAfterDelete" Access="public">
        <Documentation>
          <summary>
Interface for database entity objects that get notified by <see cref="BaseDbContext" /> when
its <see cref="Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry.State" /> is <see cref="Microsoft.EntityFrameworkCore.EntityState.Deleted" />
and it has been deleted from the database.
</summary>
        </Documentation>
        <Method Name="AfterDeleteAsync">
          <Documentation>
            <summary>
Asynchronous callback method that gets invoked after the current entity has been deleted from the database.
</summary>
            <param name="cancellationToken">The cancellation token that can be used to receive notice of cancellation.</param>
            <returns>The <see cref="Task" /> for the asynchronous post-delete activity implemented by the this callback method.</returns>
          </Documentation>
          <Parameters>
            <Parameter Name="cancellationToken">
              <Type>
                <Identifier Name="CancellationToken" />
              </Type>
            </Parameter>
          </Parameters>
          <ReturnType>
            <Identifier Name="Task" />
          </ReturnType>
        </Method>
      </Interface>
    </Namespace>
  </Source>
  <Source Path="Model\IDbEntityHandlesAfterInsert.cs" Id="5346539b-15a5-4e53-856e-c4a0367582c1">
    <Using Name="System.Threading" />
    <Using Name="System.Threading.Tasks" />
    <Namespace Name="FsInfoCat.Model">
      <Interface Name="IDbEntityHandlesAfterInsert" Access="public">
        <Documentation>
          <summary>
Interface for database entity objects that get notified by <see cref="BaseDbContext" /> when
its <see cref="Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry.State" /> was <see cref="Microsoft.EntityFrameworkCore.EntityState.Added" />
and it has been inserted or updated into the database.
</summary>
        </Documentation>
        <Method Name="AfterInsertAsync">
          <Documentation>
            <summary>
Asynchronous callback method that gets invoked after the current entity has been inserted into the database.
</summary>
            <param name="cancellationToken">The cancellation token that can be used to receive notice of cancellation.</param>
            <returns>The <see cref="Task" /> for the asynchronous post-insert activity implemented by the this callback method.</returns>
          </Documentation>
          <Parameters>
            <Parameter Name="cancellationToken">
              <Type>
                <Identifier Name="CancellationToken" />
              </Type>
            </Parameter>
          </Parameters>
          <ReturnType>
            <Identifier Name="Task" />
          </ReturnType>
        </Method>
      </Interface>
    </Namespace>
  </Source>
  <Source Path="Model\IDbEntityHandlesAfterSave.cs" Id="d3babd04-8358-4ff4-b7aa-306fb5b2be98">
    <Using Name="System.Threading" />
    <Using Name="System.Threading.Tasks" />
    <Namespace Name="FsInfoCat.Model">
      <Interface Name="IDbEntityHandlesAfterSave" Access="public">
        <Documentation>
          <summary>
Interface for database entity objects that get notified by <see cref="BaseDbContext" /> when
its <see cref="Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry.State" /> was <see cref="Microsoft.EntityFrameworkCore.EntityState.Added" />
or <see cref="Microsoft.EntityFrameworkCore.EntityState.Modified" /> and it has been inserted or updated into the database.
</summary>
        </Documentation>
        <Method Name="AfterSaveAsync">
          <Documentation>
            <summary>
Asynchronous callback method that gets invoked after the current entity has been inserted or updated into the database.
</summary>
            <param name="cancellationToken">The cancellation token that can be used to receive notice of cancellation.</param>
            <returns>The <see cref="Task" /> for the asynchronous post-save actity implemented by the this callback method.</returns>
          </Documentation>
          <Parameters>
            <Parameter Name="cancellationToken">
              <Type>
                <Identifier Name="CancellationToken" />
              </Type>
            </Parameter>
          </Parameters>
          <ReturnType>
            <Identifier Name="Task" />
          </ReturnType>
        </Method>
      </Interface>
    </Namespace>
  </Source>
  <Source Path="Model\IDbEntityHandlesAfterSaveChanges.cs" Id="42cd0943-b255-47f4-a6eb-0898e3b6c37a">
    <Using Name="System.Threading" />
    <Using Name="System.Threading.Tasks" />
    <Namespace Name="FsInfoCat.Model">
      <Interface Name="IDbEntityHandlesAfterSaveChanges" Access="public">
        <Documentation>
          <summary>
Interface for database entity objects that get notified by <see cref="BaseDbContext" /> when
its <see cref="Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry.State" /> was <see cref="Microsoft.EntityFrameworkCore.EntityState.Modified" />
and it has been inserted or updated into the database.
</summary>
        </Documentation>
        <Method Name="AfterSaveChangesAsync">
          <Documentation>
            <summary>
Asynchronous callback method that gets invoked after changes to the current entity have been updated in the database.
</summary>
            <param name="cancellationToken">The cancellation token that can be used to receive notice of cancellation.</param>
            <returns>The <see cref="Task" /> for the asynchronous post-update activity implemented by the this callback method.</returns>
          </Documentation>
          <Parameters>
            <Parameter Name="cancellationToken">
              <Type>
                <Identifier Name="CancellationToken" />
              </Type>
            </Parameter>
          </Parameters>
          <ReturnType>
            <Identifier Name="Task" />
          </ReturnType>
        </Method>
      </Interface>
    </Namespace>
  </Source>
  <Source Path="Model\IDbEntityHandlesBeforeDelete.cs" Id="187cbb76-c54e-49d4-a231-3461355949bb">
    <Using Name="System.Threading" />
    <Using Name="System.Threading.Tasks" />
    <Namespace Name="FsInfoCat.Model">
      <Interface Name="IDbEntityHandlesBeforeDelete" Access="public">
        <Documentation>
          <summary>
Interface for database entity objects that get notified by <see cref="BaseDbContext" /> when
its <see cref="Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry.State" /> is <see cref="Microsoft.EntityFrameworkCore.EntityState.Deleted" />
and it is about to be deleted from database.
</summary>
        </Documentation>
        <Method Name="BeforeDeleteAsync">
          <Documentation>
            <summary>
Asynchronous callback method that gets invoked before the current entity is deleted from the database.
</summary>
            <param name="cancellationToken">The cancellation token that can be used to receive notice of cancellation.</param>
            <returns>The <see cref="Task" /> for the asynchronous pre-delete activity implemented by the this callback method.</returns>
          </Documentation>
          <Parameters>
            <Parameter Name="cancellationToken">
              <Type>
                <Identifier Name="CancellationToken" />
              </Type>
            </Parameter>
          </Parameters>
          <ReturnType>
            <Identifier Name="Task" />
          </ReturnType>
        </Method>
      </Interface>
    </Namespace>
  </Source>
  <Source Path="Model\IDbEntityHandlesBeforeInsert.cs" Id="c767da62-0100-4840-af53-beb6dbff6766">
    <Using Name="System.Threading" />
    <Using Name="System.Threading.Tasks" />
    <Namespace Name="FsInfoCat.Model">
      <Interface Name="IDbEntityHandlesBeforeInsert" Access="public">
        <Documentation>
          <summary>
Interface for database entity objects that get notified by <see cref="BaseDbContext" /> when
its <see cref="Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry.State" /> is <see cref="Microsoft.EntityFrameworkCore.EntityState.Added" />
and the changes are about to be saved to the database.
</summary>
        </Documentation>
        <Method Name="BeforeInsertAsync">
          <Documentation>
            <summary>
Asynchronous callback method that gets invoked when the <see cref="Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry.State" /> value
is <see cref="Microsoft.EntityFrameworkCore.EntityState.Added" /> and the changes are about to be saved to the database.
</summary>
            <param name="cancellationToken">The cancellation token that can be used to receive notice of cancellation.</param>
            <returns>The <see cref="Task" /> for the asynchronous pre-insert activity implemented by the this callback method.</returns>
          </Documentation>
          <Parameters>
            <Parameter Name="cancellationToken">
              <Type>
                <Identifier Name="CancellationToken" />
              </Type>
            </Parameter>
          </Parameters>
          <ReturnType>
            <Identifier Name="Task" />
          </ReturnType>
        </Method>
      </Interface>
    </Namespace>
  </Source>
  <Source Path="Model\IDbEntityHandlesBeforeSave.cs" Id="e446438d-5832-4270-a95e-6cfd5720c1a2">
    <Using Name="System.Threading" />
    <Using Name="System.Threading.Tasks" />
    <Namespace Name="FsInfoCat.Model">
      <Interface Name="IDbEntityHandlesBeforeSave" Access="public">
        <Documentation>
          <summary>
Interface for database entity objects that get notified by <see cref="BaseDbContext" /> when
its <see cref="Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry.State" /> is <see cref="Microsoft.EntityFrameworkCore.EntityState.Added" />
or <see cref="Microsoft.EntityFrameworkCore.EntityState.Modified" /> and the changes are about to be updated or inserted to the database.
</summary>
        </Documentation>
        <Method Name="BeforeSaveAsync">
          <Documentation>
            <summary>
Asynchronous callback method that gets invoked before the current entity is about to be updated or inserted into the database.
</summary>
            <param name="cancellationToken">The cancellation token that can be used to receive notice of cancellation.</param>
            <returns>The <see cref="Task" /> for the asynchronous before-save activity implemented by the this callback method.</returns>
          </Documentation>
          <Parameters>
            <Parameter Name="cancellationToken">
              <Type>
                <Identifier Name="CancellationToken" />
              </Type>
            </Parameter>
          </Parameters>
          <ReturnType>
            <Identifier Name="Task" />
          </ReturnType>
        </Method>
      </Interface>
    </Namespace>
  </Source>
  <Source Path="Model\IDbEntityHandlesBeforeSaveChanges.cs" Id="4ec22241-3225-4fde-80c4-97c59b0ca0de">
    <Using Name="System.Threading" />
    <Using Name="System.Threading.Tasks" />
    <Namespace Name="FsInfoCat.Model">
      <Interface Name="IDbEntityHandlesBeforeSaveChanges" Access="public">
        <Documentation>
          <summary>
Interface for database entity objects that get notified by <see cref="BaseDbContext" /> when
its <see cref="Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry.State" /> is <see cref="Microsoft.EntityFrameworkCore.EntityState.Modified" />
and the changes are about to be saved to the database.
</summary>
        </Documentation>
        <Method Name="BeforeSaveChangesAsync">
          <Documentation>
            <summary>
Asynchronous callback method that gets invoked when the <see cref="Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry.State" /> value
is <see cref="Microsoft.EntityFrameworkCore.EntityState.Modified" /> and the changes are about to be saved to the database.
</summary>
            <param name="cancellationToken">The cancellation token that can be used to receive notice of cancellation.</param>
            <returns>The <see cref="Task" /> for the asynchronous pre-update activity implemented by the this callback method.</returns>
          </Documentation>
          <Parameters>
            <Parameter Name="cancellationToken">
              <Type>
                <Identifier Name="CancellationToken" />
              </Type>
            </Parameter>
          </Parameters>
          <ReturnType>
            <Identifier Name="Task" />
          </ReturnType>
        </Method>
      </Interface>
    </Namespace>
  </Source>
  <Source Path="Model\IDbFsItem.cs" Id="a5afc7bc-00ac-45ca-84fe-39c6950a79f8">
    <Using Name="System" />
    <Using Name="System.Collections.Generic" />
    <Using Name="System.ComponentModel.DataAnnotations" />
    <Namespace Name="FsInfoCat.Model">
      <Interface Name="IDbFsItem" Access="public">
        <Documentation>
          <summary>
Base interface for a database entity that represents a file system node.
</summary>
          <seealso cref="IDbEntity" />
          <seealso cref="IFile" />
          <seealso cref="ISubdirectory" />
          <seealso cref="Local.Model.ILocalDbFsItem" />
          <seealso cref="Upstream.Model.IUpstreamDbFsItem" />
        </Documentation>
        <Implements>
          <SimpleBaseType Name="IDbFsItemRow" />
        </Implements>
        <Property Name="Parent">
          <Documentation>
            <summary>
Gets the parent subdirectory of the current file system item.
</summary>
            <value>The parent <see cref="ISubdirectory" /> of the current file system item or <see langword="null" /> if this is the root subdirectory.</value>
          </Documentation>
          <Display Name="DisplayName_Parent" ShortName="DisplayName_Parent" Description="DisplayName_Parent" />
          <Type>
            <Identifier Name="ISubdirectory" />
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="AccessErrors">
          <Documentation>
            <summary>
Gets the access errors for the current file system item.
</summary>
            <value>The <see cref="IAccessError">access errors</see> for the current file system item.</value>
          </Documentation>
          <Display Name="DisplayName_AccessErrors" ShortName="DisplayName_AccessErrors" Description="DisplayName_AccessErrors" />
          <Type>
            <Generic Name="IEnumerable">
              <Identifier Name="IAccessError" />
            </Generic>
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="PersonalTags">
          <Documentation>
            <summary>
Gets the personal tags associated with the current file system item.
</summary>
            <value>The <see cref="IPersonalTag" /> entities that associate <see cref="IPersonalTagDefinition" /> entities with the current file system item.</value>
          </Documentation>
          <Display Name="DisplayName_PersonalTags" ShortName="DisplayName_PersonalTags" Description="DisplayName_PersonalTags" />
          <Type>
            <Generic Name="IEnumerable">
              <Identifier Name="IPersonalTag" />
            </Generic>
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="SharedTags">
          <Documentation>
            <summary>
Gets the shared tags associated with the current file system item.
</summary>
            <value>The <see cref="ISharedTag" /> entities that associate <see cref="ISharedTagDefinition" /> entities with the current file system item.</value>
          </Documentation>
          <Display Name="DisplayName_PersonalTags" ShortName="DisplayName_PersonalTags" Description="DisplayName_PersonalTags" />
          <Type>
            <Generic Name="IEnumerable">
              <Identifier Name="ISharedTag" />
            </Generic>
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Method Name="TryGetParentId">
          <Documentation>
            <summary>
Attempts to get the primary key of the parent subdirectory.
</summary>
            <param name="subdirectoryId">The <see cref="IHasSimpleIdentifier.Id" /> value of the parent <see cref="ISubdirectoryRow" />.</param>
            <returns>
                      <see langword="true" /> if the current file system item has a parent <see cref="ISubdirectoryRow" />; otherwise, <see langword="false" />.</returns>
          </Documentation>
          <Parameters>
            <Parameter Name="subdirectoryId">
              <Type>
                <Identifier Name="Guid" />
              </Type>
              <!--TODO: Need <xsl:template match="Modifiers" mode="Root"></xsl:template>-->
            </Parameter>
          </Parameters>
          <ReturnType>
            <PredefinedType Keyword="bool" />
          </ReturnType>
        </Method>
      </Interface>
    </Namespace>
  </Source>
  <Source Path="Model\IDbFsItemAncestorName.cs" Id="c1262168-0d86-44cf-bc2b-d94a349e32cc">
    <Namespace Name="FsInfoCat.Model">
      <Interface Name="IDbFsItemAncestorName" Access="public">
        <Documentation>
          <summary>
Generic interface for entities that contain the name of a file system node and a delimited list of parent subdirectory names.
</summary>
          <seealso cref="IHasSimpleIdentifier" />
        </Documentation>
        <Implements>
          <SimpleBaseType Name="IHasSimpleIdentifier" />
        </Implements>
        <Property Name="Name">
          <Documentation>
            <summary>
Gets the name of teh current file system node.
</summary>
            <value>The name current file system node (file or directory).</value>
          </Documentation>
          <Type>
            <PredefinedType Keyword="string" />
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="AncestorNames">
          <Documentation>
            <summary>
Gets the ancestor subdirectory names.
</summary>
            <value>The result of a calculated column that contains the names of the parent subdirectories, separated by slash (<!--TODO: Need <xsl:template match="c" mode="Root"></xsl:template>-->) characters, and in reverse order from
typical file system path segments.</value>
          </Documentation>
          <Type>
            <PredefinedType Keyword="string" />
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
      </Interface>
    </Namespace>
  </Source>
  <Source Path="Model\IDbFsItemListItem.cs" Id="a7f61c26-10f0-460b-80f7-b30d5bdb2b04">
    <Namespace Name="FsInfoCat.Model">
      <Interface Name="IDbFsItemListItem" Access="public">
        <Documentation>
          <summary>
Generic interface for database view entities derived from the <see cref="IDbContext.Files" /> or <see cref="IDbContext.Subdirectories" /> table.
</summary>
          <seealso cref="IDbFsItemRow" />
          <seealso cref="Local.Model.ILocalDbFsItemListItem" />
          <seealso cref="Upstream.Model.IUpstreamDbFsItemListItem" />
        </Documentation>
        <Implements>
          <SimpleBaseType Name="IDbFsItemRow" />
        </Implements>
        <Property Name="AccessErrorCount">
          <Documentation>
            <summary>
Gets the access error count.
</summary>
            <value>Gets the number of access errors that occurred while attempting to access the current filesystem node.</value>
          </Documentation>
          <Type>
            <PredefinedType Keyword="long" />
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="PersonalTagCount">
          <Documentation>
            <summary>
Gets the personal tag count.
</summary>
            <value>The number personal personal tags associated with the current filesystem node.</value>
          </Documentation>
          <Type>
            <PredefinedType Keyword="long" />
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="SharedTagCount">
          <Documentation>
            <summary>
Gets the shared tag count.
</summary>
            <value>The number shared tags associated with the current filesystem node.</value>
          </Documentation>
          <Type>
            <PredefinedType Keyword="long" />
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
      </Interface>
    </Namespace>
  </Source>
  <Source Path="Model\IDbFsItemListItemWithAncestorNames.cs" Id="dce5272a-2718-4977-941e-6b4f6f71b05d">
    <Using Name="System" />
    <Namespace Name="FsInfoCat.Model">
      <Interface Name="IDbFsItemListItemWithAncestorNames" Access="public">
        <Documentation>
          <summary>
Generic interface for database view entities derived from the <see cref="IDbContext.Files" /> or <see cref="IDbContext.Subdirectories" /> table
and also contains path names as well as columns from the volume and file system entities.
</summary>
          <seealso cref="IDbFsItemListItem" />
          <seealso cref="IDbFsItemAncestorName" />
          <seealso cref="Local.Model.ILocalDbFsItemListItemWithAncestorNames" />
          <seealso cref="Upstream.Model.IUpstreamDbFsItemListItemWithAncestorNames" />
        </Documentation>
        <Implements>
          <SimpleBaseType Name="IDbFsItemListItem" />
          <SimpleBaseType Name="IDbFsItemAncestorName" />
        </Implements>
        <Property Name="EffectiveVolumeId">
          <Documentation>
            <summary>
Gets the primary key of the parent volume.
</summary>
            <value>The <see cref="IHasSimpleIdentifier.Id" /> of the parent <see cref="IVolumeRow" />.</value>
          </Documentation>
          <Type>
            <Identifier Name="Guid" />
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="VolumeDisplayName">
          <Documentation>
            <summary>
Gets the display name of the parent volume.
</summary>
            <value>The <see cref="IVolumeRow.DisplayName" /> of the parent <see cref="IVolumeRow" />.</value>
          </Documentation>
          <Type>
            <PredefinedType Keyword="string" />
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="VolumeName">
          <Documentation>
            <summary>
Gets the name of the parent volume.
</summary>
            <value>The <see cref="IVolumeRow.VolumeName" /> of the parent <see cref="IVolumeRow" />.</value>
          </Documentation>
          <Type>
            <PredefinedType Keyword="string" />
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="VolumeIdentifier">
          <Documentation>
            <summary>
Gets the parent volume identifier.
</summary>
            <value>The <see cref="IVolumeRow.Identifier" /> of the parent <see cref="IVolumeRow" />.</value>
          </Documentation>
          <Type>
            <Identifier Name="VolumeIdentifier" />
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="FileSystemDisplayName">
          <Documentation>
            <summary>
Gets the display name of the file system for the parent volume.
</summary>
            <value>The <see cref="IFileSystemProperties.DisplayName" /> of the <see cref="IFileSystemProperties">Filesystem</see> for the parent <see cref="IVolume" />.</value>
          </Documentation>
          <Type>
            <PredefinedType Keyword="string" />
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="FileSystemSymbolicName">
          <Documentation>
            <summary>
Gets the symbolic name of the file system for the parent volume.
</summary>
            <value>The <see cref="ISymbolicNameRow.Name">symbolic name</see> of the <see cref="IFileSystemProperties">Filesystem</see> for the parent <see cref="IVolume" />.</value>
          </Documentation>
          <Type>
            <PredefinedType Keyword="string" />
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
      </Interface>
    </Namespace>
  </Source>
  <Source Path="Model\IDbFsItemRow.cs" Id="c195d675-e5c2-43ac-b022-7b8f9bf0063a">
    <Using Name="System" />
    <Using Name="System.ComponentModel.DataAnnotations" />
    <Namespace Name="FsInfoCat.Model">
      <Interface Name="IDbFsItemRow" Access="public">
        <Documentation>
          <summary>
Generic interface for a database entity that represents a file system node.
</summary>
          <seealso cref="IDbEntity" />
          <seealso cref="Local.Model.ILocalDbFsItemRow" />
          <seealso cref="Upstream.Model.IUpstreamDbFsItemRow" />
        </Documentation>
        <Implements>
          <SimpleBaseType Name="IDbEntity" />
          <SimpleBaseType Name="IHasSimpleIdentifier" />
        </Implements>
        <Property Name="Name">
          <Documentation>
            <summary>
Gets the name of the current file system item.
</summary>
            <value>The name of the current file system item.</value>
          </Documentation>
          <Display Name="DisplayName_Name" ShortName="DisplayName_Name" Description="DisplayName_Name" />
          <Type>
            <PredefinedType Keyword="string" />
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="LastAccessed">
          <Documentation>
            <summary>
Gets the date and time last accessed.
</summary>
            <value>The last accessed for the purposes of this application.</value>
          </Documentation>
          <Display Name="DisplayName_LastAccessed" ShortName="DisplayName_LastAccessed" Description="DisplayName_LastAccessed" />
          <Type>
            <Identifier Name="DateTime" />
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="Notes">
          <Documentation>
            <summary>
Gets custom notes to be associated with the current file system item.
</summary>
            <value>The custom notes to associate with the current file system item.</value>
          </Documentation>
          <Display Name="DisplayName_Notes" ShortName="DisplayName_Notes" Description="DisplayName_Notes" />
          <Type>
            <PredefinedType Keyword="string" />
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="CreationTime">
          <Documentation>
            <summary>
Gets the file's creation time.
</summary>
            <value>The creation time as reported by the host file system.</value>
          </Documentation>
          <Display Name="DisplayName_CreationTime" ShortName="DisplayName_CreationTime" Description="DisplayName_CreationTime" />
          <Type>
            <Identifier Name="DateTime" />
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="LastWriteTime">
          <Documentation>
            <summary>
Gets the date and time the file system item was last written nto.
</summary>
            <value>The last write time as reported by the host file system.</value>
          </Documentation>
          <Display Name="DisplayName_LastWriteTime" ShortName="DisplayName_LastWriteTime" Description="DisplayName_LastWriteTime" />
          <Type>
            <Identifier Name="DateTime" />
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
      </Interface>
    </Namespace>
  </Source>
  <Source Path="Model\IDocumentProperties.cs" Id="ffed4831-f7f4-4499-aa4d-5371cb0a801c">
    <Using Name="FsInfoCat.Collections" />
    <Using Name="System" />
    <Using Name="System.ComponentModel.DataAnnotations" />
    <Namespace Name="FsInfoCat.Model">
      <Interface Name="IDocumentProperties" Access="public">
        <Documentation>
          <summary>
Represents extended file properties for document files.
</summary>
        </Documentation>
        <!--TODO: Need <xsl:template match="Attribute[@Name='EntityInterface']" mode="Root" />-->
        <Implements>
          <SimpleBaseType>
            <!--TODO: Need <xsl:template match="GenericName" mode="BaseTypes"></xsl:template>-->
          </SimpleBaseType>
        </Implements>
        <Property Name="ClientID">
          <Documentation>
            <summary>
Gets the Client ID.
</summary>
            <value>The Client ID.</value>
            <remarks>
This value should be white-space normalized and trimmed, with white-space-only converted to <see langword="null" />.
<!--TODO: Need <xsl:template match="list" mode="Root"></xsl:template>--></remarks>
          </Documentation>
          <Display Name="DisplayName_ClientID" ShortName="DisplayName_ClientID" Description="DisplayName_ClientID" />
          <Type>
            <PredefinedType Keyword="string" />
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="Contributor">
          <Documentation>
            <summary>
Gets the Contributor.
</summary>
            <value>The document contributor.</value>
            <remarks>
                      <!--TODO: Need <xsl:template match="list" mode="Root"></xsl:template>-->
                    </remarks>
          </Documentation>
          <Display Name="DisplayName_Contributor" ShortName="DisplayName_Contributor" Description="DisplayName_Contributor" />
          <Type>
            <Identifier Name="MultiStringValue" />
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="DateCreated">
          <Documentation>
            <summary>
Gets the Date Created.
</summary>
            <value>The date and time that a document was created.</value>
            <remarks>
This property is stored in the document, not obtained from the file system.
<!--TODO: Need <xsl:template match="list" mode="Root"></xsl:template>--></remarks>
          </Documentation>
          <Display Name="DisplayName_DateCreated" ShortName="DisplayName_DateCreated" Description="DisplayName_DateCreated" />
          <Type>
            <!--TODO: Need <xsl:template match="NullableType" mode="Types"></xsl:template>-->
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="LastAuthor">
          <Documentation>
            <summary>
Gets the Last Author.
</summary>
            <value>The last person to save the document, as stored in the document.</value>
            <remarks>
This value should be white-space normalized and trimmed, with white-space-only converted to <see langword="null" />.
<!--TODO: Need <xsl:template match="list" mode="Root"></xsl:template>--></remarks>
          </Documentation>
          <Display Name="DisplayName_LastAuthor" ShortName="DisplayName_LastAuthor" Description="DisplayName_LastAuthor" />
          <Type>
            <PredefinedType Keyword="string" />
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="RevisionNumber">
          <Documentation>
            <summary>
Gets the Revision Number.
</summary>
            <value>The revision number.</value>
            <remarks>
This value should be white-space normalized and trimmed, with white-space-only converted to <see langword="null" />.
<!--TODO: Need <xsl:template match="list" mode="Root"></xsl:template>--></remarks>
          </Documentation>
          <Display Name="DisplayName_RevisionNumber" ShortName="DisplayName_RevisionNumber" Description="DisplayName_RevisionNumber" />
          <Type>
            <PredefinedType Keyword="string" />
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="Security">
          <Documentation>
            <summary>
Access control information, from SummaryInfo propset.
</summary>
            <value>Access control information, from SummaryInfo propset.</value>
            <remarks>
                      <!--TODO: Need <xsl:template match="list" mode="Root"></xsl:template>-->
                    </remarks>
          </Documentation>
          <Display Name="DisplayName_Security" ShortName="DisplayName_Security" Description="DisplayName_Security" />
          <Type>
            <!--TODO: Need <xsl:template match="NullableType" mode="Types"></xsl:template>-->
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="Division">
          <Documentation>
            <summary>
Gets the Division.
</summary>
            <value>The Division</value>
            <remarks>
This value should be trimmed, with white-space-only converted to <see langword="null" />.
<!--TODO: Need <xsl:template match="list" mode="Root"></xsl:template>--></remarks>
          </Documentation>
          <Display Name="DisplayName_Division" ShortName="DisplayName_Division" Description="DisplayName_Division" />
          <Type>
            <PredefinedType Keyword="string" />
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="DocumentID">
          <Documentation>
            <summary>
Gets the Document ID.
</summary>
            <value>The Document ID</value>
            <remarks>
This value should be white-space normalized and trimmed, with white-space-only converted to <see langword="null" />.
<!--TODO: Need <xsl:template match="list" mode="Root"></xsl:template>--></remarks>
          </Documentation>
          <Display Name="DisplayName_DocumentID" ShortName="DisplayName_DocumentID" Description="DisplayName_DocumentID" />
          <Type>
            <PredefinedType Keyword="string" />
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="Manager">
          <Documentation>
            <summary>
Gets the Manager.
</summary>
            <value>The Manager</value>
            <remarks>
This value should be white-space normalized and trimmed, with white-space-only converted to <see langword="null" />.
<!--TODO: Need <xsl:template match="list" mode="Root"></xsl:template>--></remarks>
          </Documentation>
          <Display Name="DisplayName_Manager" ShortName="DisplayName_Manager" Description="DisplayName_Manager" />
          <Type>
            <PredefinedType Keyword="string" />
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="PresentationFormat">
          <Documentation>
            <summary>
Gets the Presentation Format.
</summary>
            <value>The Presentation Format</value>
            <remarks>
This value should be white-space normalized and trimmed, with white-space-only converted to <see langword="null" />.
<!--TODO: Need <xsl:template match="list" mode="Root"></xsl:template>--></remarks>
          </Documentation>
          <Display Name="DisplayName_PresentationFormat" ShortName="DisplayName_PresentationFormat" Description="DisplayName_PresentationFormat" />
          <Type>
            <PredefinedType Keyword="string" />
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="Version">
          <Documentation>
            <summary>
Gets the Version.
</summary>
            <value>The Version</value>
            <remarks>
This value should be white-space normalized and trimmed, with white-space-only converted to <see langword="null" />.
<!--TODO: Need <xsl:template match="list" mode="Root"></xsl:template>--></remarks>
          </Documentation>
          <Display Name="DisplayName_Version" ShortName="DisplayName_Version" Description="DisplayName_Version" />
          <Type>
            <PredefinedType Keyword="string" />
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
      </Interface>
    </Namespace>
  </Source>
  <Source Path="Model\IDocumentPropertiesListItem.cs" Id="5f3d4458-0fec-4aba-a40e-51e8817e92c6">
    <Using Name="System" />
    <Namespace Name="FsInfoCat.Model">
      <Interface Name="IDocumentPropertiesListItem" Access="public">
        <Documentation>
          <summary>
Generic interface for list item entities containing extended file properties for document files.
</summary>
          <seealso cref="IPropertiesListItem" />
          <seealso cref="IDocumentPropertiesRow" />
          <seealso cref="IDocumentPropertySet" />
          <seealso cref="IEquatable{IDocumentPropertiesListItem}" />
          <seealso cref="Local.Model.ILocalDocumentPropertiesListItem" />
          <seealso cref="Upstream.Model.IUpstreamDocumentPropertiesListItem" />
          <seealso cref="IDbContext.DocumentPropertiesListing" />
        </Documentation>
        <Implements>
          <SimpleBaseType Name="IPropertiesListItem" />
          <SimpleBaseType Name="IDocumentPropertiesRow" />
          <SimpleBaseType>
            <!--TODO: Need <xsl:template match="GenericName" mode="BaseTypes"></xsl:template>-->
          </SimpleBaseType>
        </Implements>
      </Interface>
    </Namespace>
  </Source>
  <Source Path="Model\IDocumentPropertiesRow.cs" Id="6649bcec-2a10-4aaf-a391-6996a223191e">
    <Using Name="System" />
    <Namespace Name="FsInfoCat.Model">
      <Interface Name="IDocumentPropertiesRow" Access="public">
        <Documentation>
          <summary>
Generic interface for entities containing extended file properties for document files.
</summary>
          <seealso cref="IPropertiesRow" />
          <seealso cref="IDocumentProperties" />
          <seealso cref="IEquatable{IDocumentPropertiesRow}" />
          <seealso cref="Local.Model.ILocalDocumentPropertiesRow" />
          <seealso cref="Upstream.Model.IUpstreamDocumentPropertiesRow" />
        </Documentation>
        <Implements>
          <SimpleBaseType Name="IPropertiesRow" />
          <SimpleBaseType Name="IDocumentProperties" />
          <SimpleBaseType>
            <!--TODO: Need <xsl:template match="GenericName" mode="BaseTypes"></xsl:template>-->
          </SimpleBaseType>
        </Implements>
      </Interface>
    </Namespace>
  </Source>
  <Source Path="Model\IDocumentPropertySet.cs" Id="dea0ffb4-2a6b-4e96-8d3d-d411dcac366a">
    <Using Name="System" />
    <Namespace Name="FsInfoCat.Model">
      <Interface Name="IDocumentPropertySet" Access="public">
        <Documentation>
          <summary>
Interface for database objects that contain extended file property values of document files.
</summary>
          <seealso cref="IPropertySet" />
          <seealso cref="IDocumentProperties" />
          <seealso cref="Local.Model.ILocalDocumentPropertySet" />
          <seealso cref="Upstream.Model.IUpstreamDocumentPropertySet" />
          <seealso cref="IFile.DocumentProperties" />
          <seealso cref="IDbContext.DocumentPropertySets" />
        </Documentation>
        <Implements>
          <SimpleBaseType Name="IPropertySet" />
          <SimpleBaseType Name="IDocumentPropertiesRow" />
          <SimpleBaseType>
            <!--TODO: Need <xsl:template match="GenericName" mode="BaseTypes"></xsl:template>-->
          </SimpleBaseType>
        </Implements>
      </Interface>
    </Namespace>
  </Source>
  <Source Path="Model\IDRMProperties.cs" Id="628792c9-d1c1-49b1-80ff-6616894a4800">
    <Using Name="System" />
    <Using Name="System.ComponentModel.DataAnnotations" />
    <Namespace Name="FsInfoCat.Model">
      <Interface Name="IDRMProperties" Access="public">
        <Documentation>
          <summary>
Represents extended file properties for DRM information.
</summary>
        </Documentation>
        <!--TODO: Need <xsl:template match="Attribute[@Name='EntityInterface']" mode="Root" />-->
        <Implements>
          <SimpleBaseType>
            <!--TODO: Need <xsl:template match="GenericName" mode="BaseTypes"></xsl:template>-->
          </SimpleBaseType>
        </Implements>
        <Property Name="DatePlayExpires">
          <Documentation>
            <summary>
Indicates when play expires for digital rights management.
</summary>
            <value>Indicates when play rights expire.</value>
            <remarks>
                      <!--TODO: Need <xsl:template match="list" mode="Root"></xsl:template>-->
                    </remarks>
          </Documentation>
          <Display Name="DisplayName_DatePlayExpires" ShortName="DisplayName_DatePlayExpires" Description="DisplayName_DatePlayExpires" />
          <Type>
            <!--TODO: Need <xsl:template match="NullableType" mode="Types"></xsl:template>-->
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="DatePlayStarts">
          <Documentation>
            <summary>
Indicates when play starts for digital rights management.
</summary>
            <value>Indicates when play rights begin.</value>
            <remarks>
                      <!--TODO: Need <xsl:template match="list" mode="Root"></xsl:template>-->
                    </remarks>
          </Documentation>
          <Display Name="DisplayName_DatePlayStarts" ShortName="DisplayName_DatePlayStarts" Description="DisplayName_DatePlayStarts" />
          <Type>
            <!--TODO: Need <xsl:template match="NullableType" mode="Types"></xsl:template>-->
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="Description">
          <Documentation>
            <summary>
Displays the description for digital rights management.
</summary>
            <value>Displays the description for Digital Rights Management (DRM).</value>
            <remarks>
This value should be trimmed, with white-space-only converted to <see langword="null" />.
<!--TODO: Need <xsl:template match="list" mode="Root"></xsl:template>--></remarks>
          </Documentation>
          <Display Name="DisplayName_Description" ShortName="DisplayName_Description" Description="DisplayName_Description" />
          <Type>
            <PredefinedType Keyword="string" />
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="IsProtected">
          <Documentation>
            <summary>
Indicates whether the content is protected.
</summary>
            <value>
                      <see langword="true" /> if the content of the file is protected; <see langword="false" /> if the file content is unprotected;
otherwise, <see langword="null" /> if this value is not specified.</value>
            <remarks>
Indicates whether the file is protected under Digital Rights Management (DRM).
<!--TODO: Need <xsl:template match="list" mode="Root"></xsl:template>--></remarks>
          </Documentation>
          <Display Name="DisplayName_IsProtected" ShortName="DisplayName_IsProtected" Description="DisplayName_IsProtected" />
          <Type>
            <!--TODO: Need <xsl:template match="NullableType" mode="Types"></xsl:template>-->
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="PlayCount">
          <Documentation>
            <summary>
Indicates the play count for digital rights management.
</summary>
            <value>Indicates the number of times the file has been played.</value>
            <remarks>
                      <!--TODO: Need <xsl:template match="list" mode="Root"></xsl:template>-->
                    </remarks>
          </Documentation>
          <Display Name="DisplayName_PlayCount" ShortName="DisplayName_PlayCount" Description="DisplayName_PlayCount" />
          <Type>
            <!--TODO: Need <xsl:template match="NullableType" mode="Types"></xsl:template>-->
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
      </Interface>
    </Namespace>
  </Source>
  <Source Path="Model\IDRMPropertiesListItem.cs" Id="e2a2cdf8-1dbd-41ac-8b15-f9cf37ea371c">
    <Using Name="System" />
    <Namespace Name="FsInfoCat.Model">
      <Interface Name="IDRMPropertiesListItem" Access="public">
        <Documentation>
          <summary>
Generic interface for list item entities containing extended file DRM information properties.
</summary>
          <seealso cref="IPropertiesListItem" />
          <seealso cref="IDRMPropertiesRow" />
          <seealso cref="IDRMPropertySet" />
          <seealso cref="IEquatable{IDRMPropertiesListItem}" />
          <seealso cref="Local.Model.ILocalDRMPropertiesListItem" />
          <seealso cref="Upstream.Model.IUpstreamDRMPropertiesListItem" />
          <seealso cref="IDbContext.DRMPropertiesListing" />
        </Documentation>
        <Implements>
          <SimpleBaseType Name="IPropertiesListItem" />
          <SimpleBaseType Name="IDRMPropertiesRow" />
          <SimpleBaseType>
            <!--TODO: Need <xsl:template match="GenericName" mode="BaseTypes"></xsl:template>-->
          </SimpleBaseType>
        </Implements>
      </Interface>
    </Namespace>
  </Source>
  <Source Path="Model\IDRMPropertiesRow.cs" Id="e9aeacac-57ef-4166-bd80-ff84c3bd94e3">
    <Using Name="System" />
    <Namespace Name="FsInfoCat.Model">
      <Interface Name="IDRMPropertiesRow" Access="public">
        <Documentation>
          <summary>
Generic interface for entities containing extended file DRM information properties.
</summary>
          <seealso cref="IPropertiesRow" />
          <seealso cref="IDRMProperties" />
          <seealso cref="IEquatable{IDRMPropertiesRow}" />
          <seealso cref="Local.Model.ILocalDRMPropertiesRow" />
          <seealso cref="Upstream.Model.IUpstreamDRMPropertiesRow" />
        </Documentation>
        <Implements>
          <SimpleBaseType Name="IPropertiesRow" />
          <SimpleBaseType Name="IDRMProperties" />
          <SimpleBaseType>
            <!--TODO: Need <xsl:template match="GenericName" mode="BaseTypes"></xsl:template>-->
          </SimpleBaseType>
        </Implements>
      </Interface>
    </Namespace>
  </Source>
  <Source Path="Model\IDRMPropertySet.cs" Id="ff61d402-07fc-4a2e-9468-6a392501aaae">
    <Using Name="System" />
    <Namespace Name="FsInfoCat.Model">
      <Interface Name="IDRMPropertySet" Access="public">
        <Documentation>
          <summary>
Interface for database objects that contain extended file DRM property values.
</summary>
          <seealso cref="IPropertySet" />
          <seealso cref="IDRMProperties" />
          <seealso cref="Local.Model.ILocalDRMPropertySet" />
          <seealso cref="Upstream.Model.IUpstreamDRMPropertySet" />
          <seealso cref="IFile.DRMProperties" />
          <seealso cref="IDbContext.DRMPropertySets" />
        </Documentation>
        <Implements>
          <SimpleBaseType Name="IPropertySet" />
          <SimpleBaseType Name="IDRMPropertiesRow" />
          <SimpleBaseType>
            <!--TODO: Need <xsl:template match="GenericName" mode="BaseTypes"></xsl:template>-->
          </SimpleBaseType>
        </Implements>
      </Interface>
    </Namespace>
  </Source>
  <Source Path="Model\IFile.cs" Id="36b5c4f3-f919-4544-bfc0-34fd956d399f">
    <Using Name="System" />
    <Using Name="System.Collections.Generic" />
    <Using Name="System.ComponentModel.DataAnnotations" />
    <Namespace Name="FsInfoCat.Model">
      <Interface Name="IFile" Access="public">
        <Documentation>
          <summary>
Represents a structural instance of file.
</summary>
          <seealso cref="IDbFsItem" />
          <seealso cref="Local.Model.ILocalFile" />
          <seealso cref="Upstream.Model.IUpstreamFile" />
          <seealso cref="IBinaryPropertySet.Files" />
          <seealso cref="IPropertySet.Files" />
          <seealso cref="IRedundancy.File" />
          <seealso cref="IFileAccessError.Target" />
          <seealso cref="IFileTag.Tagged" />
          <seealso cref="IComparison.Baseline" />
          <seealso cref="IComparison.Correlative" />
          <seealso cref="IDbContext.Files" />
        </Documentation>
        <Implements>
          <SimpleBaseType Name="IDbFsItem" />
          <SimpleBaseType Name="IFileRow" />
          <SimpleBaseType>
            <!--TODO: Need <xsl:template match="GenericName" mode="BaseTypes"></xsl:template>-->
          </SimpleBaseType>
        </Implements>
        <Property Name="BinaryProperties">
          <Documentation>
            <summary>
Gets the binary properties for the current file.
</summary>
            <value>The generic <see cref="IBinaryPropertySet" /> that contains the file size and optionally, the <see cref="MD5Hash">MD5 hash</see> value of its binary
contents.</value>
          </Documentation>
          <Display Name="DisplayName_BinaryProperties" ShortName="DisplayName_BinaryProperties" Description="DisplayName_BinaryProperties" />
          <Type>
            <Identifier Name="IBinaryPropertySet" />
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="SummaryProperties">
          <Documentation>
            <summary>
Gets the summary properties for the current file.
</summary>
            <value>The generic <see cref="IBinaryPropertySet" /> that contains the summary properties for the current file or <see langword="null" /> if no summary properties
are defined on the current file.</value>
          </Documentation>
          <Display Name="DisplayName_SummaryProperties" ShortName="DisplayName_SummaryProperties" Description="DisplayName_SummaryProperties" />
          <Type>
            <Identifier Name="ISummaryPropertySet" />
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="DocumentProperties">
          <Documentation>
            <summary>
Gets the document properties for the current file.
</summary>
            <value>The generic <see cref="IDocumentPropertySet" /> that contains the document properties for the current file or <see langword="null" /> if no document properties
are defined on the current file.</value>
          </Documentation>
          <Display Name="DisplayName_DocumentProperties" ShortName="DisplayName_DocumentProperties" Description="DisplayName_DocumentProperties" />
          <Type>
            <Identifier Name="IDocumentPropertySet" />
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="AudioProperties">
          <Documentation>
            <summary>
Gets the audio properties for the current file.
</summary>
            <value>The generic <see cref="IAudioPropertySet" /> that contains the audio properties for the current file or <see langword="null" /> if no audio properties are
defined on the current file.</value>
          </Documentation>
          <Display Name="DisplayName_AudioProperties" ShortName="DisplayName_AudioProperties" Description="DisplayName_AudioProperties" />
          <Type>
            <Identifier Name="IAudioPropertySet" />
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="DRMProperties">
          <Documentation>
            <summary>
Gets the DRM properties for the current file.
</summary>
            <value>The generic <see cref="IDRMPropertySet" /> that contains the DRM properties for the current file or <see langword="null" /> if no DRM properties are defined
on the current file.</value>
          </Documentation>
          <Display Name="DisplayName_DRMProperties" ShortName="DisplayName_DRMProperties" Description="DisplayName_DRMProperties" />
          <Type>
            <Identifier Name="IDRMPropertySet" />
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="GPSProperties">
          <Documentation>
            <summary>
Gets the GPS properties for the current file.
</summary>
            <value>The generic <see cref="IGPSPropertySet" /> that contains the GPS properties for the current file or <see langword="null" /> if no GPS properties are defined
on the current file.</value>
          </Documentation>
          <Display Name="DisplayName_GPSProperties" ShortName="DisplayName_GPSProperties" Description="DisplayName_GPSProperties" />
          <Type>
            <Identifier Name="IGPSPropertySet" />
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="ImageProperties">
          <Documentation>
            <summary>
Gets the image properties for the current file.
</summary>
            <value>The generic <see cref="IImagePropertySet" /> that contains the image properties for the current file or <see langword="null" /> if no image properties are
defined on the current file.</value>
          </Documentation>
          <Display Name="DisplayName_ImageProperties" ShortName="DisplayName_ImageProperties" Description="DisplayName_ImageProperties" />
          <Type>
            <Identifier Name="IImagePropertySet" />
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="MediaProperties">
          <Documentation>
            <summary>
Gets the media properties for the current file.
</summary>
            <value>The generic <see cref="IMediaPropertySet" /> that contains the media properties for the current file or <see langword="null" /> if no media properties are
defined on the current file.</value>
          </Documentation>
          <Display Name="DisplayName_MediaProperties" ShortName="DisplayName_MediaProperties" Description="DisplayName_MediaProperties" />
          <Type>
            <Identifier Name="IMediaPropertySet" />
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="MusicProperties">
          <Documentation>
            <summary>
Gets the music properties for the current file.
</summary>
            <value>The generic <see cref="IMusicPropertySet" /> that contains the music properties for the current file or <see langword="null" /> if no music properties are
defined on the current file.</value>
          </Documentation>
          <Display Name="DisplayName_MusicProperties" ShortName="DisplayName_MusicProperties" Description="DisplayName_MusicProperties" />
          <Type>
            <Identifier Name="IMusicPropertySet" />
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="PhotoProperties">
          <Documentation>
            <summary>
Gets the photo properties for the current file.
</summary>
            <value>The generic <see cref="IPhotoPropertySet" /> that contains the photo properties for the current file or <see langword="null" /> if no photo properties are
defined on the current file.</value>
          </Documentation>
          <Display Name="DisplayName_PhotoProperties" ShortName="DisplayName_PhotoProperties" Description="DisplayName_PhotoProperties" />
          <Type>
            <Identifier Name="IPhotoPropertySet" />
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="RecordedTVProperties">
          <Documentation>
            <summary>
Gets the recorded tv properties for the current file.
</summary>
            <value>The generic <see cref="IRecordedTVPropertySet" /> that contains the recorded TV properties for the current file or <see langword="null" /> if no recorded TV
properties are defined on the current file.</value>
          </Documentation>
          <Display Name="DisplayName_RecordedTVProperties" ShortName="DisplayName_RecordedTVProperties" Description="DisplayName_RecordedTVProperties" />
          <Type>
            <Identifier Name="IRecordedTVPropertySet" />
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="VideoProperties">
          <Documentation>
            <summary>
Gets the video properties for the current file.
</summary>
            <value>The generic <see cref="IVideoPropertySet" /> that contains the video properties for the current file or <see langword="null" /> if no video properties are
defined on the current file.</value>
          </Documentation>
          <Display Name="DisplayName_VideoProperties" ShortName="DisplayName_VideoProperties" Description="DisplayName_VideoProperties" />
          <Type>
            <Identifier Name="IVideoPropertySet" />
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="Redundancy">
          <Documentation>
            <summary>
Gets the redundancy item that indicates the membership of a collection of redundant files.
</summary>
            <value>
An <see cref="IRedundancy" /> object that indicates the current file is an exact copy of other files that belong to the same <see cref="IRedundancy.RedundantSet" />
or <see langword="null" /> if this file has not been identified as being redundant with any other.
</value>
          </Documentation>
          <Display Name="DisplayName_Redundancy" ShortName="DisplayName_Redundancy" Description="DisplayName_Redundancy" />
          <Type>
            <Identifier Name="IRedundancy" />
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="BaselineComparisons">
          <Documentation>
            <summary>
Gets the comparisons where the current file was the <see cref="IComparison.Baseline" />.
</summary>
            <value>The <see cref="IComparison" /> entities where the current file is the <see cref="IComparison.Baseline" />.</value>
          </Documentation>
          <Display Name="DisplayName_BaselineComparisons" ShortName="DisplayName_BaselineComparisons" Description="DisplayName_BaselineComparisons" />
          <Type>
            <Generic Name="IEnumerable">
              <Identifier Name="IComparison" />
            </Generic>
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="CorrelativeComparisons">
          <Documentation>
            <summary>
Gets the comparisons where the current file was the <see cref="IComparison.Correlative" /> being compared to a separate <see cref="IComparison.Baseline" /> file.
</summary>
            <value>The <see cref="IComparison" /> entities where the current file is the <see cref="IComparison.Correlative" />.</value>
          </Documentation>
          <Display Name="DisplayName_CorrelativeComparisons" ShortName="DisplayName_CorrelativeComparisons" Description="DisplayName_CorrelativeComparisons" />
          <Type>
            <Generic Name="IEnumerable">
              <Identifier Name="IComparison" />
            </Generic>
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="AccessErrors">
          <Documentation>
            <summary>
Gets the access errors for the current file system item.
</summary>
            <value>The access errors for the current file system item.</value>
          </Documentation>
          <Display Name="DisplayName_AccessErrors" ShortName="DisplayName_AccessErrors" Description="DisplayName_AccessErrors" />
          <Type>
            <Generic Name="IEnumerable">
              <Identifier Name="IFileAccessError" />
            </Generic>
          </Type>
          <!--TODO: Need <xsl:template match="Modifiers" mode="Root"></xsl:template>-->
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="PersonalTags">
          <Documentation>
            <summary>
Gets the personal tags associated with the current file.
</summary>
            <value>The <see cref="ISharedFileTag" /> entities that associate <see cref="IPersonalTagDefinition" /> entities with the current file.</value>
          </Documentation>
          <Display Name="DisplayName_PersonalTags" ShortName="DisplayName_PersonalTags" Description="DisplayName_PersonalTags" />
          <Type>
            <Generic Name="IEnumerable">
              <Identifier Name="IPersonalFileTag" />
            </Generic>
          </Type>
          <!--TODO: Need <xsl:template match="Modifiers" mode="Root"></xsl:template>-->
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="SharedTags">
          <Documentation>
            <summary>
Gets the shared tags associated with the current file.
</summary>
            <value>The <see cref="ISharedFileTag" /> entities that associate <see cref="ISharedTagDefinition" /> entities with the current file.</value>
          </Documentation>
          <Display Name="DisplayName_SharedTags" ShortName="DisplayName_SharedTags" Description="DisplayName_SharedTags" />
          <Type>
            <Generic Name="IEnumerable">
              <Identifier Name="ISharedFileTag" />
            </Generic>
          </Type>
          <!--TODO: Need <xsl:template match="Modifiers" mode="Root"></xsl:template>-->
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Method Name="TryGetBinaryPropertySetId">
          <Documentation>
            <summary>
Attempts to get the primary key of the binary properties entity.
</summary>
            <param name="binaryPropertySetId">The <see cref="IHasSimpleIdentifier.Id" /> value of the associated <see cref="IBinaryPropertySet" />r.</param>
            <returns>
                      <see langword="true" /> if <see cref="IFileRow.BinaryPropertySetId" /> has a foreign key value assigned; otherwise, <see langword="false" />.</returns>
          </Documentation>
          <Parameters>
            <Parameter Name="binaryPropertySetId">
              <Type>
                <Identifier Name="Guid" />
              </Type>
              <!--TODO: Need <xsl:template match="Modifiers" mode="Root"></xsl:template>-->
            </Parameter>
          </Parameters>
          <ReturnType>
            <PredefinedType Keyword="bool" />
          </ReturnType>
        </Method>
      </Interface>
    </Namespace>
  </Source>
  <Source Path="Model\IFileAccessError.cs" Id="99a95b96-d288-4f8d-9ce3-48b6f2be246f">
    <Using Name="System" />
    <Using Name="System.ComponentModel.DataAnnotations" />
    <Namespace Name="FsInfoCat.Model">
      <Interface Name="IFileAccessError" Access="public">
        <Documentation>
          <summary>
Generic interface for file access error entities.
</summary>
          <seealso cref="IAccessError" />
          <seealso cref="IEquatable{IFileAccessError}" />
          <seealso cref="Local.Model.ILocalFileAccessError" />
          <seealso cref="Upstream.Model.IUpstreamFileAccessError" />
          <seealso cref="IDbContext.FileAccessErrors" />
          <seealso cref="IFile.AccessErrors" />
        </Documentation>
        <Implements>
          <SimpleBaseType Name="IAccessError" />
          <SimpleBaseType>
            <!--TODO: Need <xsl:template match="GenericName" mode="BaseTypes"></xsl:template>-->
          </SimpleBaseType>
        </Implements>
        <Property Name="Target">
          <Documentation>
            <summary>
Gets the target file to which the access error applies.
</summary>
            <value>The <see cref="IFile" /> entity that this error applies to.</value>
          </Documentation>
          <Display Name="DisplayName_Target" ShortName="DisplayName_Target" Description="DisplayName_Target" />
          <Type>
            <Identifier Name="IFile" />
          </Type>
          <!--TODO: Need <xsl:template match="Modifiers" mode="Root"></xsl:template>-->
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
      </Interface>
    </Namespace>
  </Source>
  <Source Path="Model\IFileAncestorName.cs" Id="340cbf50-286e-4fb8-8821-9aa3a764d582">
    <Using Name="System" />
    <Namespace Name="FsInfoCat.Model">
      <Interface Name="IFileAncestorName" Access="public">
        <Documentation>
          <summary>
Generic interface for file entities that contain the name of a file system node and a delimited list of parent subdirectory names.
</summary>
          <seealso cref="IDbFsItemAncestorName" />
        </Documentation>
        <Implements>
          <SimpleBaseType Name="IDbFsItemAncestorName" />
        </Implements>
        <Property Name="ParentId">
          <Documentation>
            <summary>
Gets the primary key of the parent subdirectory.
</summary>
            <value>The <see cref="IHasSimpleIdentifier.Id" /> value of the parent <see cref="ISubdirectoryRow" />.</value>
          </Documentation>
          <Type>
            <Identifier Name="Guid" />
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
      </Interface>
    </Namespace>
  </Source>
  <Source Path="Model\IFileListItemWithAncestorNames.cs" Id="20fa9cbe-c4df-4ff1-8399-41523f284503">
    <Using Name="System" />
    <Namespace Name="FsInfoCat.Model">
      <Interface Name="IFileListItemWithAncestorNames" Access="public">
        <Documentation>
          <summary>
Generic interface for file list item entities which also includes the ancestor subdirectory names.
</summary>
          <seealso cref="IDbFsItemListItemWithAncestorNames" />
          <seealso cref="IFileRow" />
          <seealso cref="IFileAncestorName" />
          <seealso cref="IEquatable{IFileListItemWithAncestorNames}" />
          <seealso cref="Local.Model.ILocalFileListItemWithAncestorNames" />
          <seealso cref="Upstream.Model.IUpstreamFileListItemWithAncestorNames" />
          <seealso cref="IDbContext.FileListingWithAncestorNames" />
        </Documentation>
        <Implements>
          <SimpleBaseType Name="IDbFsItemListItemWithAncestorNames" />
          <SimpleBaseType Name="IFileRow" />
          <SimpleBaseType Name="IFileAncestorName" />
          <SimpleBaseType>
            <!--TODO: Need <xsl:template match="GenericName" mode="BaseTypes"></xsl:template>-->
          </SimpleBaseType>
        </Implements>
      </Interface>
    </Namespace>
  </Source>
  <Source Path="Model\IFileListItemWithBinaryProperties.cs" Id="041bfa89-4e49-4b6f-adba-923fb8f09058">
    <Using Name="System" />
    <Namespace Name="FsInfoCat.Model">
      <Interface Name="IFileListItemWithBinaryProperties" Access="public">
        <Documentation>
          <summary>
Generic interface for file list item entities which also includes length and hash information.
</summary>
          <seealso cref="IDbFsItemListItem" />
          <seealso cref="IFileRow" />
          <seealso cref="IEquatable{IFileListItemWithBinaryProperties}" />
          <seealso cref="Local.Model.ILocalFileListItemWithBinaryProperties" />
          <seealso cref="Upstream.Model.IUpstreamFileListItemWithBinaryProperties" />
          <seealso cref="IDbContext.FileListingWithBinaryProperties" />
        </Documentation>
        <Implements>
          <SimpleBaseType Name="IDbFsItemListItem" />
          <SimpleBaseType Name="IFileRow" />
          <SimpleBaseType>
            <!--TODO: Need <xsl:template match="GenericName" mode="BaseTypes"></xsl:template>-->
          </SimpleBaseType>
        </Implements>
        <Property Name="Length">
          <Documentation>
            <summary>
Gets the length of the file.
</summary>
            <value>The length of the file, in bytes.</value>
          </Documentation>
          <Type>
            <PredefinedType Keyword="long" />
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="Hash">
          <Documentation>
            <summary>
Gets the MD5 checksum hash.
</summary>
            <value>The MD5 checksum hash value or <see langword="null" /> if no hash value has been calculated.</value>
          </Documentation>
          <Type>
            <!--TODO: Need <xsl:template match="NullableType" mode="Types"></xsl:template>-->
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="RedundancyCount">
          <Documentation>
            <summary>
Gets the redundancy count.
</summary>
            <value>The number of files that are considered redundant to this file.</value>
          </Documentation>
          <Type>
            <PredefinedType Keyword="long" />
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="ComparisonCount">
          <Documentation>
            <summary>
Gets the comparison count.
</summary>
            <value>The number of files that have been compared to this file.</value>
          </Documentation>
          <Type>
            <PredefinedType Keyword="long" />
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
      </Interface>
    </Namespace>
  </Source>
  <Source Path="Model\IFileListItemWithBinaryPropertiesAndAncestorNames.cs" Id="19e2334a-133c-492e-9644-9b9c9208ec45">
    <Using Name="System" />
    <Namespace Name="FsInfoCat.Model">
      <Interface Name="IFileListItemWithBinaryPropertiesAndAncestorNames" Access="public">
        <Documentation>
          <summary>
Generic interface for file list item entities which also includes length and hash information as well as a delimited listing of parent subdirectory names.
</summary>
          <seealso cref="IFileListItemWithAncestorNames" />
          <seealso cref="IEquatable{IFileListItemWithBinaryPropertiesAndAncestorNames}" />
          <seealso cref="Local.Model.ILocalFileListItemWithBinaryPropertiesAndAncestorNames" />
          <seealso cref="Upstream.Model.IUpstreamFileListItemWithBinaryPropertiesAndAncestorNames" />
          <seealso cref="IDbContext.FileListingWithBinaryPropertiesAndAncestorNames" />
        </Documentation>
        <Implements>
          <SimpleBaseType Name="IFileListItemWithAncestorNames" />
          <SimpleBaseType>
            <!--TODO: Need <xsl:template match="GenericName" mode="BaseTypes"></xsl:template>-->
          </SimpleBaseType>
        </Implements>
        <Property Name="Length">
          <Documentation>
            <summary>
Gets the length of the file.
</summary>
            <value>The length of the file, in bytes.</value>
          </Documentation>
          <Type>
            <PredefinedType Keyword="long" />
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="Hash">
          <Documentation>
            <summary>
Gets the MD5 checksum hash.
</summary>
            <value>The MD5 checksum hash value or <see langword="null" /> if no hash value has been calculated.</value>
          </Documentation>
          <Type>
            <!--TODO: Need <xsl:template match="NullableType" mode="Types"></xsl:template>-->
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
      </Interface>
    </Namespace>
  </Source>
  <Source Path="Model\IFileRow.cs" Id="cbd1429a-7d78-454a-92b5-e923a892e1cd">
    <Using Name="System" />
    <Using Name="System.ComponentModel.DataAnnotations" />
    <Namespace Name="FsInfoCat.Model">
      <Interface Name="IFileRow" Access="public">
        <Documentation>
          <summary>
Represents a structural instance of file.
</summary>
          <seealso cref="IDbFsItem" />
          <seealso cref="Local.Model.ILocalFileRow" />
          <seealso cref="Upstream.Model.IUpstreamFileRow" />
        </Documentation>
        <Implements>
          <SimpleBaseType Name="IDbFsItemRow" />
        </Implements>
        <Property Name="Options">
          <Documentation>
            <summary>
Gets the visibility and crawl options for the current file.
</summary>
            <value>A <see cref="FileCrawlOptions" /> value that contains the crawl options for the current file.</value>
          </Documentation>
          <Display Name="DisplayName_Options" ShortName="DisplayName_Options" Description="DisplayName_Options" />
          <Type>
            <Identifier Name="FileCrawlOptions" />
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="Status">
          <Documentation>
            <summary>
Gets the correlative status of the current file.
</summary>
            <value>A <see cref="FileCorrelationStatus" /> value that indicates the file's correlation status.</value>
          </Documentation>
          <Display Name="DisplayName_Status" ShortName="DisplayName_Status" Description="DisplayName_Status" />
          <Type>
            <Identifier Name="FileCorrelationStatus" />
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="LastHashCalculation">
          <Documentation>
            <summary>
Gets the date and time that the <see cref="MD5Hash">MD5 hash</see> was calculated for the current file.
</summary>
            <value>The date and time that the <see cref="MD5Hash">MD5 hash</see> was calculated for the current file or <see langword="null" />
if no <see cref="MD5Hash">MD5 hash</see> has been calculated, yet.</value>
          </Documentation>
          <Display Name="DisplayName_LastHashCalculation" ShortName="DisplayName_LastHashCalculation" Description="DisplayName_LastHashCalculation" />
          <Type>
            <!--TODO: Need <xsl:template match="NullableType" mode="Types"></xsl:template>-->
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="ParentId">
          <Documentation>
            <summary>
Gets the unique identifier of the parent subdirectory.
</summary>
            <value>The <see cref="IHasSimpleIdentifier.Id" /> of the parent <see cref="ISubdirectory" /> entity.</value>
          </Documentation>
          <Type>
            <Identifier Name="Guid" />
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="BinaryPropertySetId">
          <Documentation>
            <summary>
Gets unique identifier of the associated binary properties entity.
</summary>
            <value>The <see cref="IHasSimpleIdentifier.Id" /> of the <see cref="IBinaryPropertySet" /> that has the length and MD5 hash that matches the current file.</value>
          </Documentation>
          <Type>
            <Identifier Name="Guid" />
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="SummaryPropertySetId">
          <Documentation>
            <summary>
Gets unique identifier of the associated summary properties entity.
</summary>
            <value>The <see cref="IHasSimpleIdentifier.Id" /> of the <see cref="ISummaryPropertySet" /> for the current file or <see langword="null" /> if
the current file has no summary properties.</value>
          </Documentation>
          <Type>
            <!--TODO: Need <xsl:template match="NullableType" mode="Types"></xsl:template>-->
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="DocumentPropertySetId">
          <Documentation>
            <summary>
Gets unique identifier of the associated document properties entity.
</summary>
            <value>The <see cref="IHasSimpleIdentifier.Id" /> of the <see cref="IDocumentPropertySet" /> for the current file or <see langword="null" /> if
the current file has no document properties.</value>
          </Documentation>
          <Type>
            <!--TODO: Need <xsl:template match="NullableType" mode="Types"></xsl:template>-->
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="AudioPropertySetId">
          <Documentation>
            <summary>
Gets unique identifier of the associated audio properties entity.
</summary>
            <value>The <see cref="IHasSimpleIdentifier.Id" /> of the <see cref="IAudioPropertySet" /> for the current file or <see langword="null" /> if
the current file has no audio properties.</value>
          </Documentation>
          <Type>
            <!--TODO: Need <xsl:template match="NullableType" mode="Types"></xsl:template>-->
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="DRMPropertySetId">
          <Documentation>
            <summary>
Gets unique identifier of the associated DRM properties entity.
</summary>
            <value>The <see cref="IHasSimpleIdentifier.Id" /> of the <see cref="IDRMPropertySet" /> for the current file or <see langword="null" /> if
the current file has no DRM properties.</value>
          </Documentation>
          <Type>
            <!--TODO: Need <xsl:template match="NullableType" mode="Types"></xsl:template>-->
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="GPSPropertySetId">
          <Documentation>
            <summary>
Gets unique identifier of the associated GPS properties entity.
</summary>
            <value>The <see cref="IHasSimpleIdentifier.Id" /> of the <see cref="IGPSPropertySet" /> for the current file or <see langword="null" /> if
the current file has no GPS properties.</value>
          </Documentation>
          <Type>
            <!--TODO: Need <xsl:template match="NullableType" mode="Types"></xsl:template>-->
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="ImagePropertySetId">
          <Documentation>
            <summary>
Gets unique identifier of the associated image properties entity.
</summary>
            <value>The <see cref="IHasSimpleIdentifier.Id" /> of the <see cref="IImagePropertySet" /> for the current file or <see langword="null" /> if
the current file has no image properties.</value>
          </Documentation>
          <Type>
            <!--TODO: Need <xsl:template match="NullableType" mode="Types"></xsl:template>-->
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="MediaPropertySetId">
          <Documentation>
            <summary>
Gets unique identifier of the associated media properties entity.
</summary>
            <value>The <see cref="IHasSimpleIdentifier.Id" /> of the <see cref="IMediaPropertySet" /> for the current file or <see langword="null" /> if
the current file has no media properties.</value>
          </Documentation>
          <Type>
            <!--TODO: Need <xsl:template match="NullableType" mode="Types"></xsl:template>-->
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="MusicPropertySetId">
          <Documentation>
            <summary>
Gets unique identifier of the associated music properties entity.
</summary>
            <value>The <see cref="IHasSimpleIdentifier.Id" /> of the <see cref="IMusicPropertySet" /> for the current file or <see langword="null" /> if
the current file has no music properties.</value>
          </Documentation>
          <Type>
            <!--TODO: Need <xsl:template match="NullableType" mode="Types"></xsl:template>-->
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="PhotoPropertySetId">
          <Documentation>
            <summary>
Gets unique identifier of the associated photo properties entity.
</summary>
            <value>The <see cref="IHasSimpleIdentifier.Id" /> of the <see cref="IPhotoPropertySet" /> for the current file or <see langword="null" /> if
the current file has no photo properties.</value>
          </Documentation>
          <Type>
            <!--TODO: Need <xsl:template match="NullableType" mode="Types"></xsl:template>-->
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="RecordedTVPropertySetId">
          <Documentation>
            <summary>
Gets unique identifier of the associated recorded TV properties entity.
</summary>
            <value>The <see cref="IHasSimpleIdentifier.Id" /> of the <see cref="IRecordedTVPropertySet" /> for the current file or <see langword="null" /> if
the current file has no recorded TV properties.</value>
          </Documentation>
          <Type>
            <!--TODO: Need <xsl:template match="NullableType" mode="Types"></xsl:template>-->
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="VideoPropertySetId">
          <Documentation>
            <summary>
Gets unique identifier of the associated video properties entity.
</summary>
            <value>The <see cref="IHasSimpleIdentifier.Id" /> of the <see cref="IVideoPropertySet" /> for the current file or <see langword="null" /> if
the current file has no video properties.</value>
          </Documentation>
          <Type>
            <!--TODO: Need <xsl:template match="NullableType" mode="Types"></xsl:template>-->
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
      </Interface>
    </Namespace>
  </Source>
  <Source Path="Model\IFileSystem.cs" Id="e20f337b-10aa-404b-b7d8-ea62697347fa">
    <Using Name="System" />
    <Using Name="System.Collections.Generic" />
    <Using Name="System.ComponentModel.DataAnnotations" />
    <Namespace Name="FsInfoCat.Model">
      <Interface Name="IFileSystem" Access="public">
        <Documentation>
          <summary>
Interface for entities which represent a specific file system type.
</summary>
          <seealso cref="IDbEntity" />
          <seealso cref="Local.Model.ILocalFileSystem" />
          <seealso cref="Upstream.Model.IUpstreamFileSystem" />
          <seealso cref="IVolume.FileSystem" />
          <seealso cref="ISymbolicName.FileSystem" />
          <seealso cref="IDbContext.FileSystems" />
        </Documentation>
        <Implements>
          <SimpleBaseType Name="IFileSystemRow" />
          <SimpleBaseType>
            <!--TODO: Need <xsl:template match="GenericName" mode="BaseTypes"></xsl:template>-->
          </SimpleBaseType>
        </Implements>
        <Property Name="Volumes">
          <Documentation>
            <summary>
Gets the volumes that share this file system type.
</summary>
            <value>The volumes that share this file system type.</value>
          </Documentation>
          <Display Name="DisplayName_Volumes" ShortName="DisplayName_Volumes" Description="DisplayName_Volumes" />
          <Type>
            <Generic Name="IEnumerable">
              <Identifier Name="IVolume" />
            </Generic>
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="SymbolicNames">
          <Documentation>
            <summary>
Gets the symbolic names for the current file system type.
</summary>
            <value>The symbolic names that are used to identify the current file system type.</value>
          </Documentation>
          <Display Name="DisplayName_SymbolicNames" ShortName="DisplayName_SymbolicNames" Description="DisplayName_SymbolicNames" />
          <Type>
            <Generic Name="IEnumerable">
              <Identifier Name="ISymbolicName" />
            </Generic>
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
      </Interface>
    </Namespace>
  </Source>
  <Source Path="Model\IFileSystemListItem.cs" Id="9265dfd2-9c2e-4e8a-aada-60f91b269ec8">
    <Using Name="System" />
    <Namespace Name="FsInfoCat.Model">
      <Interface Name="IFileSystemListItem" Access="public">
        <Documentation>
          <summary>
Generic interface for file system list item entities.
</summary>
          <seealso cref="IFileSystemRow" />
          <seealso cref="IEquatable{IFileSystemListItem}" />
          <seealso cref="Local.Model.ILocalFileSystemListItem" />
          <seealso cref="Upstream.Model.IUpstreamFileSystemListItem" />
          <seealso cref="IDbContext.FileSystemListing" />
        </Documentation>
        <Implements>
          <SimpleBaseType Name="IFileSystemRow" />
          <SimpleBaseType>
            <!--TODO: Need <xsl:template match="GenericName" mode="BaseTypes"></xsl:template>-->
          </SimpleBaseType>
        </Implements>
        <Property Name="PrimarySymbolicNameId">
          <Documentation>
            <summary>
Gets the primary symbolic name identifier.
</summary>
            <value>The primary symbolic name identifier.</value>
          </Documentation>
          <Type>
            <!--TODO: Need <xsl:template match="NullableType" mode="Types"></xsl:template>-->
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="PrimarySymbolicName">
          <Documentation>
            <summary>
Gets the name of the primary symbolic.
</summary>
            <value>The name of the primary symbolic.</value>
          </Documentation>
          <Type>
            <PredefinedType Keyword="string" />
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="SymbolicNameCount">
          <Documentation>
            <summary>
Gets the symbolic name count.
</summary>
            <value>The symbolic name count.</value>
          </Documentation>
          <Type>
            <PredefinedType Keyword="long" />
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="VolumeCount">
          <Documentation>
            <summary>
Gets the volume count.
</summary>
            <value>The volume count.</value>
          </Documentation>
          <Type>
            <PredefinedType Keyword="long" />
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
      </Interface>
    </Namespace>
  </Source>
  <Source Path="Model\IFileSystemProperties.cs" Id="4c870679-e956-4d23-9823-c429baf45fa2">
    <Using Name="System.ComponentModel.DataAnnotations" />
    <Using Name="System.IO" />
    <Namespace Name="FsInfoCat.Model">
      <Interface Name="IFileSystemProperties" Access="public">
        <Documentation>
          <summary>
Generic interface for entities that describe a file system.
</summary>
        </Documentation>
        <Property Name="DisplayName">
          <Documentation>
            <summary>
Gets the display name.
</summary>
            <value>The display name of the file system.</value>
          </Documentation>
          <Display Name="DisplayName_DisplayName" ShortName="DisplayName_DisplayName" Description="DisplayName_DisplayName" />
          <Type>
            <PredefinedType Keyword="string" />
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="ReadOnly">
          <Documentation>
            <summary>
Gets a value indicating whether this is a read-only file system type.
</summary>
            <value>
                      <see langword="true" /> if this is a read-only file system type; otherwise, <see langword="false" />.</value>
          </Documentation>
          <Display Name="DisplayName_ReadOnly" ShortName="DisplayName_ReadOnly" Description="DisplayName_ReadOnly" />
          <Type>
            <PredefinedType Keyword="bool" />
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="MaxNameLength">
          <Documentation>
            <summary>
Gets the maximum length of file system name components.
</summary>
            <value>The maximum length of file system name components.</value>
          </Documentation>
          <Display Name="DisplayName_MaxNameLength" ShortName="DisplayName_MaxNameLength" Description="DisplayName_MaxNameLength" />
          <Type>
            <PredefinedType Keyword="uint" />
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="DefaultDriveType">
          <Documentation>
            <summary>
Gets the default drive type for this file system.
</summary>
            <value>The default drive type for this file system.</value>
          </Documentation>
          <Display Name="DisplayName_DefaultDriveType" ShortName="DisplayName_DefaultDriveType" Description="DisplayName_DefaultDriveType" />
          <Type>
            <!--TODO: Need <xsl:template match="NullableType" mode="Types"></xsl:template>-->
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
      </Interface>
    </Namespace>
  </Source>
  <Source Path="Model\IFileSystemRow.cs" Id="a784c92b-c737-46c3-ac7b-a0fe3b17867b">
    <Using Name="System.ComponentModel.DataAnnotations" />
    <Namespace Name="FsInfoCat.Model">
      <Interface Name="IFileSystemRow" Access="public">
        <Documentation>
          <summary>
Generic interface for file system entities.
</summary>
          <seealso cref="IFileSystemProperties" />
          <seealso cref="IDbEntity" />
          <seealso cref="IHasSimpleIdentifier" />
          <seealso cref="Local.Model.ILocalFileSystemRow" />
          <seealso cref="Upstream.Model.IUpstreamFileSystemRow" />
        </Documentation>
        <Implements>
          <SimpleBaseType Name="IFileSystemProperties" />
          <SimpleBaseType Name="IDbEntity" />
          <SimpleBaseType Name="IHasSimpleIdentifier" />
        </Implements>
        <Property Name="Notes">
          <Documentation>
            <summary>
Gets the custom notes for this file system type.
</summary>
            <value>The custom notes to associate with this file system type.</value>
          </Documentation>
          <Display Name="DisplayName_Notes" ShortName="DisplayName_Notes" Description="DisplayName_Notes" />
          <Type>
            <PredefinedType Keyword="string" />
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="IsInactive">
          <Documentation>
            <summary>
Gets a value indicating whether this file system type is inactive.
</summary>
            <value>
                      <see langword="true" /> if this file system type is inactive; otherwise, <see langword="false" />.</value>
          </Documentation>
          <Display Name="DisplayName_IsInactive" ShortName="DisplayName_IsInactive" Description="DisplayName_IsInactive" />
          <Type>
            <PredefinedType Keyword="bool" />
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
      </Interface>
    </Namespace>
  </Source>
  <Source Path="Model\IFileTag.cs" Id="565dd9b1-b8df-4403-86e2-cfbc577fe291">
    <Namespace Name="FsInfoCat.Model">
      <Interface Name="IFileTag" Access="public">
        <Documentation>
          <summary>
Generic interface for an <see cref="ITagDefinition" /> that is associated with an <see cref="IFile" />.
</summary>
          <seealso cref="IItemTag" />
          <seealso cref="IHasMembershipKeyReference{IFile, ITagDefinition}" />
          <seealso cref="Local.Model.ILocalFileTag" />
          <seealso cref="Upstream.Model.IUpstreamFileTag" />
          <seealso cref="IFile.SharedTags" />
          <seealso cref="IFile.PersonalTags" />
          <seealso cref="ITagDefinition.FileTags" />
        </Documentation>
        <Implements>
          <SimpleBaseType Name="IItemTag" />
          <SimpleBaseType>
            <!--TODO: Need <xsl:template match="GenericName" mode="BaseTypes"></xsl:template>-->
          </SimpleBaseType>
        </Implements>
        <Property Name="Tagged">
          <Documentation>
            <summary>
Gets the tagged file.
</summary>
            <value>The tagged <see cref="IFile" />.</value>
          </Documentation>
          <Type>
            <Identifier Name="IFile" />
          </Type>
          <!--TODO: Need <xsl:template match="Modifiers" mode="Root"></xsl:template>-->
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
      </Interface>
    </Namespace>
  </Source>
  <Source Path="Model\IForeignKeyReference.cs" Id="b1a000e0-850a-4da1-a934-a794d1312d44">
    <Using Name="System" />
    <Namespace Name="FsInfoCat.Model">
      <Interface Name="IForeignKeyReference" Access="public">
        <Documentation>
          <summary>
Represents a foreign key identifier and the optional associated nagivation property.
</summary>
          <seealso cref="IHasSimpleIdentifier" />
          <seealso cref="ISynchronizable" />
        </Documentation>
        <Implements>
          <SimpleBaseType Name="IHasSimpleIdentifier" />
          <SimpleBaseType Name="ISynchronizable" />
        </Implements>
        <Property Name="Entity">
          <Documentation>
            <summary>
Gets the navigation entity object.
</summary>
            <value>The navigation entity object or <see langword="null" /> if the entity has not been set.</value>
          </Documentation>
          <Type>
            <Identifier Name="IHasSimpleIdentifier" />
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Method Name="HasId">
          <Documentation>
            <summary>
Determines whether the foreign key value or the primary key of the navigation property has been set.
</summary>
            <returns>
                      <see langword="true" /> foreign key value has been set or the primary key of the navigation object has been set;
otherwise, <see langword="false" />.</returns>
          </Documentation>
          <ReturnType>
            <PredefinedType Keyword="bool" />
          </ReturnType>
        </Method>
        <Method Name="SetId">
          <Documentation>
            <summary>
Sets the foreign key value.
</summary>
            <param name="id">The foreign key value or <see langword="null" /> to unset the foreign key reference.</param>
          </Documentation>
          <Parameters>
            <Parameter Name="id">
              <Type>
                <!--TODO: Need <xsl:template match="NullableType" mode="Types"></xsl:template>-->
              </Type>
            </Parameter>
          </Parameters>
          <ReturnType>
            <PredefinedType Keyword="void" />
          </ReturnType>
        </Method>
      </Interface>
      <Interface Name="IForeignKeyReference" Access="public">
        <Documentation>
          <summary>
Represents a foreign key identifier and the optional associated nagivation property.
</summary>
          <seealso cref="IForeignKeyReference" />
          <!--TODO: Need <xsl:template match="typeparam" mode="DocumentationRoot"></xsl:template>-->
        </Documentation>
        <Implements>
          <SimpleBaseType Name="IForeignKeyReference" />
          <SimpleBaseType>
            <!--TODO: Need <xsl:template match="GenericName" mode="BaseTypes"></xsl:template>-->
          </SimpleBaseType>
        </Implements>
        <!--TODO: Need <xsl:template match="TypeParameterList" mode="Root"></xsl:template>-->
        <!--TODO: Need <xsl:template match="Constraints" mode="Root"></xsl:template>-->
        <Property Name="Entity">
          <Documentation>
            <summary>
Gets the navigation entity object.
</summary>
            <value>The navigation entity object or <see langword="null" /> if the entity has not been set.</value>
          </Documentation>
          <Type>
            <Identifier Name="TEntity" />
          </Type>
          <!--TODO: Need <xsl:template match="Modifiers" mode="Root"></xsl:template>-->
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
      </Interface>
    </Namespace>
  </Source>
  <Source Path="Model\IGPSProperties.cs" Id="3c6ffef1-f882-426c-902b-e02b73c18bb9">
    <Using Name="FsInfoCat.Collections" />
    <Using Name="System" />
    <Using Name="System.ComponentModel.DataAnnotations" />
    <Namespace Name="FsInfoCat.Model">
      <Interface Name="IGPSProperties" Access="public">
        <Documentation>
          <summary>
Represents extended file properties for GPS information.
</summary>
        </Documentation>
        <!--TODO: Need <xsl:template match="Attribute[@Name='EntityInterface']" mode="Root" />-->
        <Implements>
          <SimpleBaseType>
            <!--TODO: Need <xsl:template match="GenericName" mode="BaseTypes"></xsl:template>-->
          </SimpleBaseType>
        </Implements>
        <Property Name="AreaInformation">
          <Documentation>
            <summary>
Gets the name of the GPS area.
</summary>
            <value>The name of the GPS area.</value>
            <remarks>
This value should be white-space normalized and trimmed, with white-space-only converted to <see langword="null" />.
<!--TODO: Need <xsl:template match="list" mode="Root"></xsl:template>--></remarks>
          </Documentation>
          <Display Name="DisplayName_AreaInformation" ShortName="DisplayName_AreaInformation" Description="DisplayName_AreaInformation" />
          <Type>
            <PredefinedType Keyword="string" />
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="LatitudeDegrees">
          <Documentation>
            <summary>
Indicates the latitude degrees.
</summary>
            <value>This is the value at index 0 from an array of three values.</value>
            <remarks>
                      <!--TODO: Need <xsl:template match="list" mode="Root"></xsl:template>-->
                    </remarks>
          </Documentation>
          <Display Name="DisplayName_LatitudeDegrees" ShortName="DisplayName_LatitudeDegrees" Description="DisplayName_LatitudeDegrees" />
          <Type>
            <!--TODO: Need <xsl:template match="NullableType" mode="Types"></xsl:template>-->
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="LatitudeMinutes">
          <Documentation>
            <summary>
Indicates the latitude minutes.
</summary>
            <value>This is the value at index 1 from an array of three values.</value>
            <remarks>
                      <!--TODO: Need <xsl:template match="list" mode="Root"></xsl:template>-->
                    </remarks>
          </Documentation>
          <Display Name="DisplayName_LatitudeMinutes" ShortName="DisplayName_LatitudeMinutes" Description="DisplayName_LatitudeMinutes" />
          <Type>
            <!--TODO: Need <xsl:template match="NullableType" mode="Types"></xsl:template>-->
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="LatitudeSeconds">
          <Documentation>
            <summary>
Indicates the latitude seconds.
</summary>
            <value>This is the value at index 2 from an array of three values.</value>
            <remarks>
                      <!--TODO: Need <xsl:template match="list" mode="Root"></xsl:template>-->
                    </remarks>
          </Documentation>
          <Display Name="DisplayName_LatitudeSeconds" ShortName="DisplayName_LatitudeSeconds" Description="DisplayName_LatitudeSeconds" />
          <Type>
            <!--TODO: Need <xsl:template match="NullableType" mode="Types"></xsl:template>-->
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="LatitudeRef">
          <Documentation>
            <summary>
Indicates whether latitude is north or south latitude.
</summary>
            <value>Indicates whether latitude is north or south.</value>
            <remarks>
This value should be white-space normalized and trimmed, with white-space-only converted to <see langword="null" />.
<!--TODO: Need <xsl:template match="list" mode="Root"></xsl:template>--></remarks>
          </Documentation>
          <Display Name="DisplayName_LatitudeRef" ShortName="DisplayName_LatitudeRef" Description="DisplayName_LatitudeRef" />
          <Type>
            <PredefinedType Keyword="string" />
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="LongitudeDegrees">
          <Documentation>
            <summary>
Indicates the longitude degrees.
</summary>
            <value>This is the value at index 0 from an array of three values.</value>
            <remarks>
Indicates whether latitude is north or south.
<!--TODO: Need <xsl:template match="list" mode="Root"></xsl:template>--></remarks>
          </Documentation>
          <Display Name="DisplayName_LongitudeDegrees" ShortName="DisplayName_LongitudeDegrees" Description="DisplayName_LongitudeDegrees" />
          <Type>
            <!--TODO: Need <xsl:template match="NullableType" mode="Types"></xsl:template>-->
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="LongitudeMinutes">
          <Documentation>
            <summary>
Indicates the longitude minutes.
</summary>
            <value>This is the value at index 1 from an array of three values.</value>
            <remarks>
Indicates whether latitude is north or south.
<!--TODO: Need <xsl:template match="list" mode="Root"></xsl:template>--></remarks>
          </Documentation>
          <Display Name="DisplayName_LongitudeMinutes" ShortName="DisplayName_LongitudeMinutes" Description="DisplayName_LongitudeMinutes" />
          <Type>
            <!--TODO: Need <xsl:template match="NullableType" mode="Types"></xsl:template>-->
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="LongitudeSeconds">
          <Documentation>
            <summary>
Indicates the longitude seconds.
</summary>
            <value>This is the value at index 2 from an array of three values.</value>
            <remarks>
Indicates whether latitude is north or south.
<!--TODO: Need <xsl:template match="list" mode="Root"></xsl:template>--></remarks>
          </Documentation>
          <Display Name="DisplayName_LongitudeSeconds" ShortName="DisplayName_LongitudeSeconds" Description="DisplayName_LongitudeSeconds" />
          <Type>
            <!--TODO: Need <xsl:template match="NullableType" mode="Types"></xsl:template>-->
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="LongitudeRef">
          <Documentation>
            <summary>
Indicates whether longitude is east or west longitude.
</summary>
            <value>Indicates whether longitude is east or west.</value>
            <remarks>
This value should be white-space normalized and trimmed, with white-space-only converted to <see langword="null" />.
<!--TODO: Need <xsl:template match="list" mode="Root"></xsl:template>--></remarks>
          </Documentation>
          <Display Name="DisplayName_LongitudeRef" ShortName="DisplayName_LongitudeRef" Description="DisplayName_LongitudeRef" />
          <Type>
            <PredefinedType Keyword="string" />
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="MeasureMode">
          <Documentation>
            <summary>
Indicates the GPS measurement mode.
</summary>
            <value>eg: 2-dimensional, 3-dimensional Indicates the GPS measurement mode (for example, two-dimensional, three-dimensional).</value>
            <remarks>
This value should be white-space normalized and trimmed, with white-space-only converted to <see langword="null" />.
<!--TODO: Need <xsl:template match="list" mode="Root"></xsl:template>--></remarks>
          </Documentation>
          <Display Name="DisplayName_MeasureMode" ShortName="DisplayName_MeasureMode" Description="DisplayName_MeasureMode" />
          <Type>
            <PredefinedType Keyword="string" />
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="ProcessingMethod">
          <Documentation>
            <summary>
Indicates the name of the method used for location finding.
</summary>
            <value>Indicates the name of the method used for finding locations.</value>
            <remarks>
This value should be white-space normalized and trimmed, with white-space-only converted to <see langword="null" />.
<!--TODO: Need <xsl:template match="list" mode="Root"></xsl:template>--></remarks>
          </Documentation>
          <Display Name="DisplayName_ProcessingMethod" ShortName="DisplayName_ProcessingMethod" Description="DisplayName_ProcessingMethod" />
          <Type>
            <PredefinedType Keyword="string" />
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="VersionID">
          <Documentation>
            <summary>
Indicates the version of the GPS information.
</summary>
            <value>Indicates the version of the GPS information.</value>
            <remarks>
                      <!--TODO: Need <xsl:template match="list" mode="Root"></xsl:template>-->
                    </remarks>
          </Documentation>
          <Display Name="DisplayName_VersionID" ShortName="DisplayName_VersionID" Description="DisplayName_VersionID" />
          <Type>
            <Identifier Name="ByteValues" />
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
      </Interface>
    </Namespace>
  </Source>
  <Source Path="Model\IGPSPropertiesListItem.cs" Id="e34f641b-ebda-4aec-a4ff-818f38e09529">
    <Using Name="System" />
    <Namespace Name="FsInfoCat.Model">
      <Interface Name="IGPSPropertiesListItem" Access="public">
        <Documentation>
          <summary>
Generic interface for list item entities containing extended file GPS information properties.
</summary>
          <seealso cref="IPropertiesListItem" />
          <seealso cref="IGPSPropertiesRow" />
          <seealso cref="IGPSPropertySet" />
          <seealso cref="IEquatable{IGPSPropertiesListItem}" />
          <seealso cref="Local.Model.ILocalGPSPropertiesListItem" />
          <seealso cref="Upstream.Model.IUpstreamGPSPropertiesListItem" />
          <seealso cref="IDbContext.GPSPropertiesListing" />
        </Documentation>
        <Implements>
          <SimpleBaseType Name="IPropertiesListItem" />
          <SimpleBaseType Name="IGPSPropertiesRow" />
          <SimpleBaseType>
            <!--TODO: Need <xsl:template match="GenericName" mode="BaseTypes"></xsl:template>-->
          </SimpleBaseType>
        </Implements>
      </Interface>
    </Namespace>
  </Source>
  <Source Path="Model\IGPSPropertiesRow.cs" Id="c3195efb-8437-4d1f-9330-3fff40991ced">
    <Using Name="System" />
    <Namespace Name="FsInfoCat.Model">
      <Interface Name="IGPSPropertiesRow" Access="public">
        <Documentation>
          <summary>
Generic interface for entities containing extended file GPS information properties.
</summary>
          <seealso cref="IPropertiesRow" />
          <seealso cref="IGPSProperties" />
          <seealso cref="IEquatable{IGPSPropertiesRow}" />
          <seealso cref="Local.Model.ILocalGPSPropertiesRow" />
          <seealso cref="Upstream.Model.IUpstreamGPSPropertiesRow" />
        </Documentation>
        <Implements>
          <SimpleBaseType Name="IPropertiesRow" />
          <SimpleBaseType Name="IGPSProperties" />
          <SimpleBaseType>
            <!--TODO: Need <xsl:template match="GenericName" mode="BaseTypes"></xsl:template>-->
          </SimpleBaseType>
        </Implements>
      </Interface>
    </Namespace>
  </Source>
  <Source Path="Model\IGPSPropertySet.cs" Id="e8236d21-977b-4a47-a5a6-cf23f80c394c">
    <Using Name="System" />
    <Namespace Name="FsInfoCat.Model">
      <Interface Name="IGPSPropertySet" Access="public">
        <Documentation>
          <summary>
Interface for database objects that contain extended file GPS property values.
</summary>
          <seealso cref="IPropertySet" />
          <seealso cref="IGPSProperties" />
          <seealso cref="Local.Model.ILocalGPSPropertySet" />
          <seealso cref="Upstream.Model.IUpstreamGPSPropertySet" />
          <seealso cref="IFile.GPSProperties" />
          <seealso cref="IDbContext.GPSPropertySets" />
        </Documentation>
        <Implements>
          <SimpleBaseType Name="IPropertySet" />
          <SimpleBaseType Name="IGPSPropertiesRow" />
          <SimpleBaseType>
            <!--TODO: Need <xsl:template match="GenericName" mode="BaseTypes"></xsl:template>-->
          </SimpleBaseType>
        </Implements>
      </Interface>
    </Namespace>
  </Source>
  <Source Path="Model\IHasCompoundIdentifier.cs" Id="c4e307ed-9b5f-4bb6-9e1d-13e28e4415d7">
    <Using Name="System" />
    <Using Name="System.Collections.Generic" />
    <Using Name="System.Diagnostics.CodeAnalysis" />
    <Namespace Name="FsInfoCat.Model">
      <Interface Name="IHasCompoundIdentifier" Access="public">
        <Documentation>
          <summary>
Interface for entities that have a compound primary key value comprised of more than one <see cref="Guid" /> value.
</summary>
        </Documentation>
        <Property Name="Id">
          <Documentation>
            <summary>
Gets the values of the compound identifier.
</summary>
            <value>The compound identifier values.</value>
          </Documentation>
          <Type>
            <Generic Name="IEnumerable">
              <Identifier Name="Guid" />
            </Generic>
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
      </Interface>
    </Namespace>
  </Source>
  <Source Path="Model\IHasIdentifierPair.cs" Id="935818ab-5ab6-4130-9d90-fb59b2ffb2ea">
    <Using Name="System" />
    <Namespace Name="FsInfoCat.Model">
      <Interface Name="IHasIdentifierPair" Access="public">
        <Documentation>
          <summary>
Interface for entities that have a compound primary key comprised of two <see cref="Guid" /> values.
</summary>
          <seealso cref="IHasCompoundIdentifier" />
        </Documentation>
        <Implements>
          <SimpleBaseType Name="IHasCompoundIdentifier" />
        </Implements>
        <Property Name="Id">
          <Documentation>
            <summary>
Gets the compound primary key values.
</summary>
            <value>The compound primary key values.</value>
          </Documentation>
          <Type>
            <Generic Name="ValueTuple">
              <Identifier Name="Guid" />
              <Identifier Name="Guid" />
            </Generic>
          </Type>
          <!--TODO: Need <xsl:template match="Modifiers" mode="Root"></xsl:template>-->
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
      </Interface>
    </Namespace>
  </Source>
  <Source Path="Model\IHasMembershipKeyReference.cs" Id="d593764d-4629-46da-80cd-221b2bff407d">
    <Using Name="System" />
    <Namespace Name="FsInfoCat.Model">
      <Interface Name="IHasMembershipKeyReference" Access="public">
        <Documentation>
          <summary>
Interface for entities that has a compound identifier comprised of 2 foreign key references.
</summary>
          <seealso cref="ISynchronizable" />
          <seealso cref="IHasIdentifierPair" />
        </Documentation>
        <Implements>
          <SimpleBaseType Name="ISynchronizable" />
          <SimpleBaseType Name="IHasIdentifierPair" />
        </Implements>
        <Property Name="Ref1">
          <Documentation>
            <summary>
Gets the first foreign key reference.
</summary>
            <value>The foreign key reference whose key is the first value of the current entity's compound primary key.</value>
          </Documentation>
          <Type>
            <Identifier Name="IForeignKeyReference" />
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="Ref2">
          <Documentation>
            <summary>
Gets the second foreign key reference.
</summary>
            <value>The foreign key reference whose key is the second value of the current entity's compound primary key.</value>
          </Documentation>
          <Type>
            <Identifier Name="IForeignKeyReference" />
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
      </Interface>
      <Interface Name="IHasMembershipKeyReference" Access="public">
        <Documentation>
          <summary>
Interface for entities that has a compound identifier comprised of 2 foreign key references.
</summary>
          <seealso cref="IHasMembershipKeyReference" />
          <!--TODO: Need <xsl:template match="typeparam" mode="DocumentationRoot"></xsl:template>-->
          <!--TODO: Need <xsl:template match="typeparam" mode="DocumentationRoot"></xsl:template>-->
        </Documentation>
        <Implements>
          <SimpleBaseType Name="IHasMembershipKeyReference" />
        </Implements>
        <!--TODO: Need <xsl:template match="TypeParameterList" mode="Root"></xsl:template>-->
        <!--TODO: Need <xsl:template match="Constraints" mode="Root"></xsl:template>-->
        <Property Name="Ref1">
          <Documentation>
            <summary>
Gets the first foreign key reference.
</summary>
            <value>The foreign key reference whose key is the first value of the current entity's compound primary key.</value>
          </Documentation>
          <Type>
            <Generic Name="IForeignKeyReference">
              <Identifier Name="TEntity1" />
            </Generic>
          </Type>
          <!--TODO: Need <xsl:template match="Modifiers" mode="Root"></xsl:template>-->
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="Ref2">
          <Documentation>
            <summary>
Gets the second foreign key reference.
</summary>
            <value>The foreign key reference whose key is the second value of the current entity's compound primary key.</value>
          </Documentation>
          <Type>
            <Generic Name="IForeignKeyReference">
              <Identifier Name="TEntity2" />
            </Generic>
          </Type>
          <!--TODO: Need <xsl:template match="Modifiers" mode="Root"></xsl:template>-->
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
      </Interface>
    </Namespace>
  </Source>
  <Source Path="Model\IHasSimpleIdentifier.cs" Id="eb0d510f-4e41-4517-afdd-ceeba8daa5c5">
    <Using Name="System" />
    <Using Name="System.ComponentModel.DataAnnotations" />
    <Namespace Name="FsInfoCat.Model">
      <Interface Name="IHasSimpleIdentifier" Access="public">
        <Documentation>
          <summary>
Interface for entities that has a single <see cref="Guid" /> value as the primary key.
</summary>
        </Documentation>
        <Property Name="Id">
          <Documentation>
            <summary>
Gets the primary key value.
</summary>
            <value>The <see cref="Guid">unique identifier</see> used as the current entity's primary key the database.</value>
          </Documentation>
          <Display Name="DisplayName_Id" ShortName="DisplayName_Id" Description="DisplayName_Id" />
          <Type>
            <Identifier Name="Guid" />
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Method Name="TryGetId">
          <Documentation>
            <summary>
Attempts to get the primary key value.
</summary>
            <param name="id">The primary key value.</param>
            <returns>
                      <see langword="true" /> if the primary key value ahas been set; otherwise, <see langword="false" />.</returns>
          </Documentation>
          <Parameters>
            <Parameter Name="id">
              <Type>
                <Identifier Name="Guid" />
              </Type>
              <!--TODO: Need <xsl:template match="Modifiers" mode="Root"></xsl:template>-->
            </Parameter>
          </Parameters>
          <ReturnType>
            <PredefinedType Keyword="bool" />
          </ReturnType>
        </Method>
      </Interface>
    </Namespace>
  </Source>
  <Source Path="Model\IImageProperties.cs" Id="faf73914-c2d4-4aa3-b484-ef12f041b226">
    <Using Name="System" />
    <Using Name="System.ComponentModel.DataAnnotations" />
    <Namespace Name="FsInfoCat.Model">
      <Interface Name="IImageProperties" Access="public">
        <Documentation>
          <summary>
Represents extended file properties for image files.
</summary>
        </Documentation>
        <!--TODO: Need <xsl:template match="Attribute[@Name='EntityInterface']" mode="Root" />-->
        <Implements>
          <SimpleBaseType>
            <!--TODO: Need <xsl:template match="GenericName" mode="BaseTypes"></xsl:template>-->
          </SimpleBaseType>
        </Implements>
        <Property Name="BitDepth">
          <Documentation>
            <summary>
Gets the Bit Depth.
</summary>
            <value>Indicates how many bits are used in each pixel of the image.</value>
            <remarks>
(Usually 8, 16, 24, or 32).
<!--TODO: Need <xsl:template match="list" mode="Root"></xsl:template>--></remarks>
          </Documentation>
          <Display Name="DisplayName_BitDepth" ShortName="DisplayName_BitDepth" Description="DisplayName_BitDepth" />
          <Type>
            <!--TODO: Need <xsl:template match="NullableType" mode="Types"></xsl:template>-->
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="ColorSpace">
          <Documentation>
            <summary>
Gets the Color Space.
</summary>
            <value>PropertyTagExifColorSpace The colorspace embedded in the image.</value>
            <remarks>
Taken from the Exchangeable Image File (EXIF) information.
<!--TODO: Need <xsl:template match="list" mode="Root"></xsl:template>--></remarks>
          </Documentation>
          <Display Name="DisplayName_ColorSpace" ShortName="DisplayName_ColorSpace" Description="DisplayName_ColorSpace" />
          <Type>
            <!--TODO: Need <xsl:template match="NullableType" mode="Types"></xsl:template>-->
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="CompressedBitsPerPixel">
          <Documentation>
            <summary>
Gets the Compressed Bits-per-Pixel.
</summary>
            <value>Calculated from PKEY_Image_CompressedBitsPerPixelNumerator and PKEY_Image_CompressedBitsPerPixelDenominator.</value>
            <remarks>
Indicates the image compression level.
<!--TODO: Need <xsl:template match="list" mode="Root"></xsl:template>--></remarks>
          </Documentation>
          <Display Name="DisplayName_CompressedBitsPerPixel" ShortName="DisplayName_CompressedBitsPerPixel" Description="DisplayName_CompressedBitsPerPixel" />
          <Type>
            <!--TODO: Need <xsl:template match="NullableType" mode="Types"></xsl:template>-->
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="Compression">
          <Documentation>
            <summary>
Indicates the image compression level.
</summary>
            <value>PropertyTagCompression The algorithm used to compress the image.</value>
            <remarks>
                      <!--TODO: Need <xsl:template match="list" mode="Root"></xsl:template>-->
                    </remarks>
          </Documentation>
          <Display Name="DisplayName_Compression" ShortName="DisplayName_Compression" Description="DisplayName_Compression" />
          <Type>
            <!--TODO: Need <xsl:template match="NullableType" mode="Types"></xsl:template>-->
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="CompressionText">
          <Documentation>
            <summary>
This is the user-friendly form of System.Image.Compression.
</summary>
            <value>Not intended to be parsed programmatically.</value>
            <remarks>
This value should be white-space normalized and trimmed, with white-space-only converted to <see langword="null" />.
<para>The user-friendly form of System.Image.Compression. Not intended to be parsed programmatically.</para><!--TODO: Need <xsl:template match="list" mode="Root"></xsl:template>--></remarks>
          </Documentation>
          <Display Name="DisplayName_Compression" ShortName="DisplayName_Compression" Description="DisplayName_Compression" />
          <Type>
            <PredefinedType Keyword="string" />
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="HorizontalResolution">
          <Documentation>
            <summary>
Gets the Horizontal Resolution.
</summary>
            <value>Indicates the number of pixels per resolution unit in the image width.</value>
            <remarks>
                      <!--TODO: Need <xsl:template match="list" mode="Root"></xsl:template>-->
                    </remarks>
          </Documentation>
          <Display Name="DisplayName_HorizontalResolution" ShortName="DisplayName_HorizontalResolution" Description="DisplayName_HorizontalResolution" />
          <Type>
            <!--TODO: Need <xsl:template match="NullableType" mode="Types"></xsl:template>-->
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="HorizontalSize">
          <Documentation>
            <summary>
Gets the Horizontal Size.
</summary>
            <value>The horizontal size of the image, in pixels.</value>
            <remarks>
                      <!--TODO: Need <xsl:template match="list" mode="Root"></xsl:template>-->
                    </remarks>
          </Documentation>
          <Display Name="DisplayName_HorizontalSize" ShortName="DisplayName_HorizontalSize" Description="DisplayName_HorizontalSize" />
          <Type>
            <!--TODO: Need <xsl:template match="NullableType" mode="Types"></xsl:template>-->
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="ImageID">
          <Documentation>
            <summary>
Gets the Image ID.
</summary>
            <value>The Image ID.</value>
            <remarks>
This value should be white-space normalized and trimmed, with white-space-only converted to <see langword="null" />.
<!--TODO: Need <xsl:template match="list" mode="Root"></xsl:template>--></remarks>
          </Documentation>
          <Display Name="DisplayName_ImageID" ShortName="DisplayName_ImageID" Description="DisplayName_ImageID" />
          <Type>
            <PredefinedType Keyword="string" />
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="ResolutionUnit">
          <Documentation>
            <summary>
Gets the Resolution Unit.
</summary>
            <value>Indicates the resolution units.</value>
            <remarks>
Used for images with a non-square aspect ratio, but without meaningful absolute dimensions. 1 = No absolute unit of measurement. 2 = Inches. 3 = Centimeters.
The default value is 2 (Inches).
<!--TODO: Need <xsl:template match="list" mode="Root"></xsl:template>--></remarks>
          </Documentation>
          <Display Name="DisplayName_ResolutionUnit" ShortName="DisplayName_ResolutionUnit" Description="DisplayName_ResolutionUnit" />
          <Type>
            <!--TODO: Need <xsl:template match="NullableType" mode="Types"></xsl:template>-->
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="VerticalResolution">
          <Documentation>
            <summary>
Gets the Vertical Resolution.
</summary>
            <value>Indicates the number of pixels per resolution unit in the image height.</value>
            <remarks>
                      <!--TODO: Need <xsl:template match="list" mode="Root"></xsl:template>-->
                    </remarks>
          </Documentation>
          <Display Name="DisplayName_VerticalResolution" ShortName="DisplayName_VerticalResolution" Description="DisplayName_VerticalResolution" />
          <Type>
            <!--TODO: Need <xsl:template match="NullableType" mode="Types"></xsl:template>-->
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="VerticalSize">
          <Documentation>
            <summary>
Gets the Vertical Size.
</summary>
            <value>The vertical size of the image, in pixels.</value>
            <remarks>
                      <!--TODO: Need <xsl:template match="list" mode="Root"></xsl:template>-->
                    </remarks>
          </Documentation>
          <Display Name="DisplayName_VerticalSize" ShortName="DisplayName_VerticalSize" Description="DisplayName_VerticalSize" />
          <Type>
            <!--TODO: Need <xsl:template match="NullableType" mode="Types"></xsl:template>-->
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
      </Interface>
    </Namespace>
  </Source>
  <Source Path="Model\IImagePropertiesListItem.cs" Id="1dc015f3-de2c-430e-8f47-a76c5329699d">
    <Using Name="System" />
    <Namespace Name="FsInfoCat.Model">
      <Interface Name="IImagePropertiesListItem" Access="public">
        <Documentation>
          <summary>
Generic interface for list item entities containing extended file properties for image files.
</summary>
          <seealso cref="IPropertiesListItem" />
          <seealso cref="IImagePropertiesRow" />
          <seealso cref="IImagePropertySet" />
          <seealso cref="IEquatable{IImagePropertiesListItem}" />
          <seealso cref="Local.Model.ILocalImagePropertiesListItem" />
          <seealso cref="Upstream.Model.IUpstreamImagePropertiesListItem" />
          <seealso cref="IDbContext.ImagePropertiesListing" />
        </Documentation>
        <Implements>
          <SimpleBaseType Name="IPropertiesListItem" />
          <SimpleBaseType Name="IImagePropertiesRow" />
          <SimpleBaseType>
            <!--TODO: Need <xsl:template match="GenericName" mode="BaseTypes"></xsl:template>-->
          </SimpleBaseType>
        </Implements>
      </Interface>
    </Namespace>
  </Source>
  <Source Path="Model\IImagePropertiesRow.cs" Id="16d79fa3-a599-4861-a727-680cdfe075bd">
    <Using Name="System" />
    <Namespace Name="FsInfoCat.Model">
      <Interface Name="IImagePropertiesRow" Access="public">
        <Documentation>
          <summary>
Generic interface for entities containing extended file properties for image files.
</summary>
          <seealso cref="IPropertiesRow" />
          <seealso cref="IImageProperties" />
          <seealso cref="IEquatable{IImagePropertiesRow}" />
          <seealso cref="Local.Model.ILocalImagePropertiesRow" />
          <seealso cref="Upstream.Model.IUpstreamImagePropertiesRow" />
        </Documentation>
        <Implements>
          <SimpleBaseType Name="IPropertiesRow" />
          <SimpleBaseType Name="IImageProperties" />
          <SimpleBaseType>
            <!--TODO: Need <xsl:template match="GenericName" mode="BaseTypes"></xsl:template>-->
          </SimpleBaseType>
        </Implements>
      </Interface>
    </Namespace>
  </Source>
  <Source Path="Model\IImagePropertySet.cs" Id="a504178d-3d34-48a9-906f-d5e891203d64">
    <Using Name="System" />
    <Namespace Name="FsInfoCat.Model">
      <Interface Name="IImagePropertySet" Access="public">
        <Documentation>
          <summary>
Interface for database objects that contain extended file property values of image files.
</summary>
          <seealso cref="IPropertySet" />
          <seealso cref="IImageProperties" />
          <seealso cref="Local.Model.ILocalImagePropertySet" />
          <seealso cref="Upstream.Model.IUpstreamImagePropertySet" />
          <seealso cref="IFile.ImageProperties" />
          <seealso cref="IDbContext.ImagePropertySets" />
        </Documentation>
        <Implements>
          <SimpleBaseType Name="IPropertySet" />
          <SimpleBaseType Name="IImagePropertiesRow" />
          <SimpleBaseType>
            <!--TODO: Need <xsl:template match="GenericName" mode="BaseTypes"></xsl:template>-->
          </SimpleBaseType>
        </Implements>
      </Interface>
    </Namespace>
  </Source>
  <Source Path="Model\IItemTag.cs" Id="dbe3f587-acaa-4a8c-bea6-3a31522812f5">
    <Using Name="System" />
    <Namespace Name="FsInfoCat.Model">
      <Interface Name="IItemTag" Access="public">
        <Documentation>
          <summary>
Generic interface for an entity that associates an <see cref="ITagDefinition" /> with an <see cref="IFile" />, <see cref="ISubdirectory" /> or <see cref="IVolume" />.
</summary>
          <seealso cref="IItemTagRow" />
          <seealso cref="Local.Model.ILocalItemTag" />
          <seealso cref="Upstream.Model.IUpstreamItemTag" />
          <seealso cref="ITagDefinition.FileTags" />
          <seealso cref="ITagDefinition.SubdirectoryTags" />
          <seealso cref="ITagDefinition.VolumeTags" />
        </Documentation>
        <Implements>
          <SimpleBaseType Name="IItemTagRow" />
        </Implements>
        <Property Name="Tagged">
          <Documentation>
            <summary>
Gets the tagged entity.
</summary>
            <value>The entity that is associated with the <see cref="ITagDefinition" />.</value>
          </Documentation>
          <Type>
            <Identifier Name="IDbEntity" />
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="Definition">
          <Documentation>
            <summary>
Gets the tag definition.
</summary>
            <value>The tag definition that is associated with the <see cref="IDbEntity" />.</value>
          </Documentation>
          <Type>
            <Identifier Name="ITagDefinition" />
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Method Name="TryGetTaggedId">
          <Documentation>
            <summary>
Attempts to get the get primary key of the tagged entity.
</summary>
            <param name="taggedId">The <see cref="IHasSimpleIdentifier.Id" /> of the <see cref="Tagged" /> entity.</param>
            <returns>
                      <see langword="true" /> if the <see cref="Tagged" /> entity has a primary key value assigned; otherwise, <see langword="false" />.</returns>
          </Documentation>
          <Parameters>
            <Parameter Name="taggedId">
              <Type>
                <Identifier Name="Guid" />
              </Type>
              <!--TODO: Need <xsl:template match="Modifiers" mode="Root"></xsl:template>-->
            </Parameter>
          </Parameters>
          <ReturnType>
            <PredefinedType Keyword="bool" />
          </ReturnType>
        </Method>
        <Method Name="TryGetDefinitionId">
          <Documentation>
            <summary>
Attempts to get the get primary key of the tag definition.
</summary>
            <param name="definitionId">The <see cref="IHasSimpleIdentifier.Id" /> of the tag <see cref="Definition" />.</param>
            <returns>
                      <see langword="true" /> if the tag <see cref="Definition" /> has a primary key value assigned; otherwise, <see langword="false" />.</returns>
          </Documentation>
          <Parameters>
            <Parameter Name="definitionId">
              <Type>
                <Identifier Name="Guid" />
              </Type>
              <!--TODO: Need <xsl:template match="Modifiers" mode="Root"></xsl:template>-->
            </Parameter>
          </Parameters>
          <ReturnType>
            <PredefinedType Keyword="bool" />
          </ReturnType>
        </Method>
      </Interface>
    </Namespace>
  </Source>
  <Source Path="Model\IItemTagListItem.cs" Id="d734e796-b256-471f-ad88-f6475fe3c886">
    <Using Name="System" />
    <Namespace Name="FsInfoCat.Model">
      <Interface Name="IItemTagListItem" Access="public">
        <Documentation>
          <summary>
Generic interface for a list item entity that associates an <see cref="ITagDefinition" /> with an <see cref="IFile" />, <see cref="ISubdirectory" /> or <see cref="IVolume" />.
</summary>
          <seealso cref="IItemTagRow" />
          <seealso cref="IEquatable{IItemTagListItem}" />
          <seealso cref="Local.Model.ILocalItemTagListItem" />
          <seealso cref="Upstream.Model.IUpstreamItemTagListItem" />
          <seealso cref="IDbContext.PersonalVolumeTagListing" />
          <seealso cref="IDbContext.SharedVolumeTagListing" />
          <seealso cref="IDbContext.PersonalSubdirectoryTagListing" />
          <seealso cref="IDbContext.SharedSubdirectoryTagListing" />
          <seealso cref="IDbContext.PersonalFileTagListing" />
          <seealso cref="IDbContext.SharedFileTagListing" />
        </Documentation>
        <Implements>
          <SimpleBaseType Name="IItemTagRow" />
          <SimpleBaseType>
            <!--TODO: Need <xsl:template match="GenericName" mode="BaseTypes"></xsl:template>-->
          </SimpleBaseType>
        </Implements>
        <Property Name="Name">
          <Documentation>
            <summary>
Gets the name of the tag.
</summary>
            <value>The <see cref="ITagDefinitionRow.Name" /> of the tag.</value>
          </Documentation>
          <Type>
            <PredefinedType Keyword="string" />
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="Description">
          <Documentation>
            <summary>
Gets the description of the tag.
</summary>
            <value>The <see cref="ITagDefinitionRow.Description" /> of the tag.</value>
          </Documentation>
          <Type>
            <PredefinedType Keyword="string" />
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
      </Interface>
    </Namespace>
  </Source>
  <Source Path="Model\IItemTagRow.cs" Id="cb28d580-2e08-42c2-9d53-0701c50f77fa">
    <Using Name="System" />
    <Using Name="System.ComponentModel.DataAnnotations" />
    <Namespace Name="FsInfoCat.Model">
      <Interface Name="IItemTagRow" Access="public">
        <Documentation>
          <summary>
Generic interface for an entity that associates a <see cref="ITagDefinition" /> with an <see cref="IFile" />, <see cref="ISubdirectory" /> or <see cref="IVolume" />.
</summary>
          <seealso cref="IDbEntity" />
          <seealso cref="IHasIdentifierPair" />
          <seealso cref="Local.Model.ILocalItemTagRow" />
          <seealso cref="Upstream.Model.IUpstreamItemTagRow" />
        </Documentation>
        <Implements>
          <SimpleBaseType Name="IDbEntity" />
          <SimpleBaseType Name="IHasIdentifierPair" />
        </Implements>
        <Property Name="TaggedId">
          <Documentation>
            <summary>
Gets the primary key value that references the tagged entity.
</summary>
            <value>The <see cref="Guid">unique identifier</see> used as part of the current entity's primary key the database.</value>
          </Documentation>
          <Type>
            <Identifier Name="Guid" />
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="DefinitionId">
          <Documentation>
            <summary>
Gets the primary key value that references the <see cref="ITagDefinition" /> entity.
</summary>
            <value>The <see cref="Guid">unique identifier</see> used as part of the current entity's primary key the database.</value>
          </Documentation>
          <Type>
            <Identifier Name="Guid" />
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="Notes">
          <Documentation>
            <summary>
Gets custom notes to be associated with the current file system item.
</summary>
            <value>The custom notes to associate with the current file system item.</value>
          </Documentation>
          <Display Name="DisplayName_Notes" ShortName="DisplayName_Notes" Description="DisplayName_Notes" />
          <Type>
            <PredefinedType Keyword="string" />
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
      </Interface>
    </Namespace>
  </Source>
  <Source Path="Model\IMediaProperties.cs" Id="101705ba-20da-4bcf-ae2b-0099e1321787">
    <Using Name="FsInfoCat.Collections" />
    <Using Name="System" />
    <Using Name="System.ComponentModel.DataAnnotations" />
    <Namespace Name="FsInfoCat.Model">
      <Interface Name="IMediaProperties" Access="public">
        <Documentation>
          <summary>
Represents extended file properties for media files.
</summary>
        </Documentation>
        <!--TODO: Need <xsl:template match="Attribute[@Name='EntityInterface']" mode="Root" />-->
        <Implements>
          <SimpleBaseType>
            <!--TODO: Need <xsl:template match="GenericName" mode="BaseTypes"></xsl:template>-->
          </SimpleBaseType>
        </Implements>
        <Property Name="ContentDistributor">
          <Documentation>
            <summary>
Gets the Content Distributor.
</summary>
            <value>The Content Distributor.</value>
            <remarks>
This value should be white-space normalized and trimmed, with white-space-only converted to <see langword="null" />.
<!--TODO: Need <xsl:template match="list" mode="Root"></xsl:template>--></remarks>
          </Documentation>
          <Display Name="DisplayName_ContentDistributor" ShortName="DisplayName_ContentDistributor" Description="DisplayName_ContentDistributor" />
          <Type>
            <PredefinedType Keyword="string" />
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="CreatorApplication">
          <Documentation>
            <summary>
Gets the Creator Application.
</summary>
            <value>The creator application.</value>
            <remarks>
This value should be white-space normalized and trimmed, with white-space-only converted to <see langword="null" />.
<!--TODO: Need <xsl:template match="list" mode="Root"></xsl:template>--></remarks>
          </Documentation>
          <Display Name="DisplayName_CreatorApplication" ShortName="DisplayName_CreatorApplication" Description="DisplayName_CreatorApplication" />
          <Type>
            <PredefinedType Keyword="string" />
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="CreatorApplicationVersion">
          <Documentation>
            <summary>
Gets the Creator Application Version.
</summary>
            <value>The creator application version.</value>
            <remarks>
This value should be white-space normalized and trimmed, with white-space-only converted to <see langword="null" />.
<!--TODO: Need <xsl:template match="list" mode="Root"></xsl:template>--></remarks>
          </Documentation>
          <Display Name="DisplayName_CreatorApplicationVersion" ShortName="DisplayName_CreatorApplicationVersion" Description="DisplayName_CreatorApplicationVersion" />
          <Type>
            <PredefinedType Keyword="string" />
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="DateReleased">
          <Documentation>
            <summary>
Gets the Date Released.
</summary>
            <value>The release data.</value>
            <remarks>
This value should be white-space normalized and trimmed, with white-space-only converted to <see langword="null" />.
<!--TODO: Need <xsl:template match="list" mode="Root"></xsl:template>--></remarks>
          </Documentation>
          <Display Name="DisplayName_DateReleased" ShortName="DisplayName_DateReleased" Description="DisplayName_DateReleased" />
          <Type>
            <PredefinedType Keyword="string" />
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="Duration">
          <Documentation>
            <summary>
Gets the duration.
</summary>
            <value>100ns units, not milliseconds The actual play time of a media file and is measured in 100ns units, not milliseconds.</value>
            <remarks>
                      <!--TODO: Need <xsl:template match="list" mode="Root"></xsl:template>-->
                    </remarks>
          </Documentation>
          <Display Name="DisplayName_Duration" ShortName="DisplayName_Duration" Description="DisplayName_Duration" />
          <Type>
            <!--TODO: Need <xsl:template match="NullableType" mode="Types"></xsl:template>-->
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="DVDID">
          <Documentation>
            <summary>
Gets the DVD ID.
</summary>
            <value>The DVD ID.</value>
            <remarks>
This value should be white-space normalized and trimmed, with white-space-only converted to <see langword="null" />.
<!--TODO: Need <xsl:template match="list" mode="Root"></xsl:template>--></remarks>
          </Documentation>
          <Display Name="DisplayName_DVDID" ShortName="DisplayName_DVDID" Description="DisplayName_DVDID" />
          <Type>
            <PredefinedType Keyword="string" />
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="FrameCount">
          <Documentation>
            <summary>
Indicates the frame count for the image.
</summary>
            <value>Indicates the frame count for the image.</value>
            <remarks>
                      <!--TODO: Need <xsl:template match="list" mode="Root"></xsl:template>-->
                    </remarks>
          </Documentation>
          <Display Name="DisplayName_FrameCount" ShortName="DisplayName_FrameCount" Description="DisplayName_FrameCount" />
          <Type>
            <!--TODO: Need <xsl:template match="NullableType" mode="Types"></xsl:template>-->
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="Producer">
          <Documentation>
            <summary>
Gets the Producer.
</summary>
            <value>The producer.</value>
            <remarks>
Media.Producer
<!--TODO: Need <xsl:template match="list" mode="Root"></xsl:template>--></remarks>
          </Documentation>
          <Display Name="DisplayName_Producer" ShortName="DisplayName_Producer" Description="DisplayName_Producer" />
          <Type>
            <Identifier Name="MultiStringValue" />
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="ProtectionType">
          <Documentation>
            <summary>
Gets the Protection Type.
</summary>
            <value>If media is protected, how is it protected? Describes the type of media protection.</value>
            <remarks>
This value should be white-space normalized and trimmed, with white-space-only converted to <see langword="null" />.
<!--TODO: Need <xsl:template match="list" mode="Root"></xsl:template>--></remarks>
          </Documentation>
          <Display Name="DisplayName_ProtectionType" ShortName="DisplayName_ProtectionType" Description="DisplayName_ProtectionType" />
          <Type>
            <PredefinedType Keyword="string" />
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="ProviderRating">
          <Documentation>
            <summary>
Gets the Provider Rating.
</summary>
            <value>Rating value ranges from 0 to 99, supplied by metadata provider The rating (0 - 99) supplied by metadata provider.</value>
            <remarks>
This value should be white-space normalized and trimmed, with white-space-only converted to <see langword="null" />.
<!--TODO: Need <xsl:template match="list" mode="Root"></xsl:template>--></remarks>
          </Documentation>
          <Display Name="DisplayName_ProviderRating" ShortName="DisplayName_ProviderRating" Description="DisplayName_ProviderRating" />
          <Type>
            <PredefinedType Keyword="string" />
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="ProviderStyle">
          <Documentation>
            <summary>
Style of music or video.
</summary>
            <value>Supplied by metadata provider The style of music or video, supplied by metadata provider.</value>
            <remarks>
This value should be white-space normalized and trimmed, with white-space-only converted to <see langword="null" />.
<!--TODO: Need <xsl:template match="list" mode="Root"></xsl:template>--></remarks>
          </Documentation>
          <Display Name="DisplayName_ProviderStyle" ShortName="DisplayName_ProviderStyle" Description="DisplayName_ProviderStyle" />
          <Type>
            <PredefinedType Keyword="string" />
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="Publisher">
          <Documentation>
            <summary>
Gets the Publisher.
</summary>
            <value>The Publisher.</value>
            <remarks>
This value should be white-space normalized and trimmed, with white-space-only converted to <see langword="null" />.
<!--TODO: Need <xsl:template match="list" mode="Root"></xsl:template>--></remarks>
          </Documentation>
          <Display Name="DisplayName_Publisher" ShortName="DisplayName_Publisher" Description="DisplayName_Publisher" />
          <Type>
            <PredefinedType Keyword="string" />
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="Subtitle">
          <Documentation>
            <summary>
Gets the Subtitle.
</summary>
            <value>The sub-title.</value>
            <remarks>
This value should be white-space normalized and trimmed, with white-space-only converted to <see langword="null" />.
<!--TODO: Need <xsl:template match="list" mode="Root"></xsl:template>--></remarks>
          </Documentation>
          <Display Name="DisplayName_Subtitle" ShortName="DisplayName_Subtitle" Description="DisplayName_Subtitle" />
          <Type>
            <PredefinedType Keyword="string" />
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="Writer">
          <Documentation>
            <summary>
Gets the Writer.
</summary>
            <value>The writer.</value>
            <remarks>
Media.Writer
<!--TODO: Need <xsl:template match="list" mode="Root"></xsl:template>--></remarks>
          </Documentation>
          <Display Name="DisplayName_Writer" ShortName="DisplayName_Writer" Description="DisplayName_Writer" />
          <Type>
            <Identifier Name="MultiStringValue" />
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="Year">
          <Documentation>
            <summary>
Gets the Publication Year.
</summary>
            <value>The publication year.</value>
            <remarks>
Media.Year
<!--TODO: Need <xsl:template match="list" mode="Root"></xsl:template>--></remarks>
          </Documentation>
          <Display Name="DisplayName_Year" ShortName="DisplayName_Year" Description="DisplayName_Year" />
          <Type>
            <!--TODO: Need <xsl:template match="NullableType" mode="Types"></xsl:template>-->
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
      </Interface>
    </Namespace>
  </Source>
  <Source Path="Model\IMediaPropertiesListItem.cs" Id="41686542-4029-4ba4-9f6c-6dc5b66aa8c6">
    <Using Name="System" />
    <Namespace Name="FsInfoCat.Model">
      <Interface Name="IMediaPropertiesListItem" Access="public">
        <Documentation>
          <summary>
Generic interface for list item entities containing extended file properties for media files.
</summary>
          <seealso cref="IPropertiesListItem" />
          <seealso cref="IMediaPropertiesRow" />
          <seealso cref="IMediaPropertySet" />
          <seealso cref="IEquatable{IMediaPropertiesListItem}" />
          <seealso cref="Local.Model.ILocalMediaPropertiesListItem" />
          <seealso cref="Upstream.Model.IUpstreamMediaPropertiesListItem" />
          <seealso cref="IDbContext.MediaPropertiesListing" />
        </Documentation>
        <Implements>
          <SimpleBaseType Name="IPropertiesListItem" />
          <SimpleBaseType Name="IMediaPropertiesRow" />
          <SimpleBaseType>
            <!--TODO: Need <xsl:template match="GenericName" mode="BaseTypes"></xsl:template>-->
          </SimpleBaseType>
        </Implements>
      </Interface>
    </Namespace>
  </Source>
  <Source Path="Model\IMediaPropertiesRow.cs" Id="d0125280-d2c0-4316-bf9d-cf3a8fedfac5">
    <Using Name="System" />
    <Namespace Name="FsInfoCat.Model">
      <Interface Name="IMediaPropertiesRow" Access="public">
        <Documentation>
          <summary>
Generic interface for entities containing extended file properties for media files.
</summary>
          <seealso cref="IPropertiesRow" />
          <seealso cref="IMediaProperties" />
          <seealso cref="IEquatable{IMediaPropertiesRow}" />
          <seealso cref="Local.Model.ILocalMediaPropertiesRow" />
          <seealso cref="Upstream.Model.IUpstreamMediaPropertiesRow" />
        </Documentation>
        <Implements>
          <SimpleBaseType Name="IPropertiesRow" />
          <SimpleBaseType Name="IMediaProperties" />
          <SimpleBaseType>
            <!--TODO: Need <xsl:template match="GenericName" mode="BaseTypes"></xsl:template>-->
          </SimpleBaseType>
        </Implements>
      </Interface>
    </Namespace>
  </Source>
  <Source Path="Model\IMediaPropertySet.cs" Id="6f94d199-133f-4cdc-ba40-f004ca9fe1b6">
    <Using Name="System" />
    <Namespace Name="FsInfoCat.Model">
      <Interface Name="IMediaPropertySet" Access="public">
        <Documentation>
          <summary>
Interface for database objects that contain extended file property values of media files.
</summary>
          <seealso cref="IPropertySet" />
          <seealso cref="IMediaProperties" />
          <seealso cref="Local.Model.ILocalMediaPropertySet" />
          <seealso cref="Upstream.Model.IUpstreamMediaPropertySet" />
          <seealso cref="IFile.MediaProperties" />
          <seealso cref="IDbContext.MediaPropertySets" />
        </Documentation>
        <Implements>
          <SimpleBaseType Name="IPropertySet" />
          <SimpleBaseType Name="IMediaPropertiesRow" />
          <SimpleBaseType>
            <!--TODO: Need <xsl:template match="GenericName" mode="BaseTypes"></xsl:template>-->
          </SimpleBaseType>
        </Implements>
      </Interface>
    </Namespace>
  </Source>
  <Source Path="Model\IMusicProperties.cs" Id="a5263dc0-cdf8-450a-a3c1-1f193bbe8138">
    <Using Name="FsInfoCat.Collections" />
    <Using Name="System" />
    <Using Name="System.ComponentModel.DataAnnotations" />
    <Namespace Name="FsInfoCat.Model">
      <Interface Name="IMusicProperties" Access="public">
        <Documentation>
          <summary>
Represents extended file properties for music files.
</summary>
        </Documentation>
        <!--TODO: Need <xsl:template match="Attribute[@Name='EntityInterface']" mode="Root" />-->
        <Implements>
          <SimpleBaseType>
            <!--TODO: Need <xsl:template match="GenericName" mode="BaseTypes"></xsl:template>-->
          </SimpleBaseType>
        </Implements>
        <Property Name="AlbumArtist">
          <Documentation>
            <summary>
Gets the Album Artist.
</summary>
            <value>The Album Artist</value>
            <remarks>
This value should be white-space normalized and trimmed, with white-space-only converted to <see langword="null" />.
<!--TODO: Need <xsl:template match="list" mode="Root"></xsl:template>--></remarks>
          </Documentation>
          <Display Name="DisplayName_AlbumArtist" ShortName="DisplayName_AlbumArtist" Description="DisplayName_AlbumArtist" />
          <Type>
            <PredefinedType Keyword="string" />
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="AlbumTitle">
          <Documentation>
            <summary>
Gets the Album Title.
</summary>
            <value>The Album Title</value>
            <remarks>
This value should be white-space normalized and trimmed, with white-space-only converted to <see langword="null" />.
<!--TODO: Need <xsl:template match="list" mode="Root"></xsl:template>--></remarks>
          </Documentation>
          <Display Name="DisplayName_AlbumTitle" ShortName="DisplayName_AlbumTitle" Description="DisplayName_AlbumTitle" />
          <Type>
            <PredefinedType Keyword="string" />
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="Artist">
          <Documentation>
            <summary>
Gets the Contributing Artist.
</summary>
            <value>The Contributing Artist</value>
            <remarks>
                      <!--TODO: Need <xsl:template match="list" mode="Root"></xsl:template>-->
                    </remarks>
          </Documentation>
          <Display Name="DisplayName_Artist" ShortName="DisplayName_Artist" Description="DisplayName_Artist" />
          <Type>
            <Identifier Name="MultiStringValue" />
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="ChannelCount">
          <Documentation>
            <summary>
Gets the Channel Count.
</summary>
            <value>Indicates the channel count for the audio file. Possible values are 1 for mono and 2 for stereo.</value>
            <remarks>
                      <!--TODO: Need <xsl:template match="list" mode="Root"></xsl:template>-->
                    </remarks>
          </Documentation>
          <Display Name="DisplayName_ChannelCount" ShortName="DisplayName_ChannelCount" Description="DisplayName_ChannelCount" />
          <Type>
            <!--TODO: Need <xsl:template match="NullableType" mode="Types"></xsl:template>-->
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="Composer">
          <Documentation>
            <summary>
Gets the Composer.
</summary>
            <value>The Composer</value>
            <remarks>
                      <!--TODO: Need <xsl:template match="list" mode="Root"></xsl:template>-->
                    </remarks>
          </Documentation>
          <Display Name="DisplayName_Composer" ShortName="DisplayName_Composer" Description="DisplayName_Composer" />
          <Type>
            <Identifier Name="MultiStringValue" />
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="Conductor">
          <Documentation>
            <summary>
Gets the Conductor.
</summary>
            <value>The Conductor</value>
            <remarks>
                      <!--TODO: Need <xsl:template match="list" mode="Root"></xsl:template>-->
                    </remarks>
          </Documentation>
          <Display Name="DisplayName_Conductor" ShortName="DisplayName_Conductor" Description="DisplayName_Conductor" />
          <Type>
            <Identifier Name="MultiStringValue" />
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="DisplayArtist">
          <Documentation>
            <summary>
Gets the Album Artist (best match of relevant properties).
</summary>
            <value>The best representation of Album Artist for a given music file based upon AlbumArtist, ContributingArtist and compilation info.</value>
            <remarks>
This value should be white-space normalized and trimmed, with white-space-only converted to <see langword="null" />.
<para>This property returns the best representation of the album artist for a specific music file based upon System.Music.AlbumArtist, System.Music.Artist,
and System.Music.IsCompilation information.</para><!--TODO: Need <xsl:template match="list" mode="Root"></xsl:template>--></remarks>
          </Documentation>
          <Display Name="DisplayName_DisplayArtist" ShortName="DisplayName_DisplayArtist" Description="DisplayName_DisplayArtist" />
          <Type>
            <PredefinedType Keyword="string" />
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="Genre">
          <Documentation>
            <summary>
Gets the Genre.
</summary>
            <value>The Genre</value>
            <remarks>
                      <!--TODO: Need <xsl:template match="list" mode="Root"></xsl:template>-->
                    </remarks>
          </Documentation>
          <Display Name="DisplayName_Genre" ShortName="DisplayName_Genre" Description="DisplayName_Genre" />
          <Type>
            <Identifier Name="MultiStringValue" />
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="PartOfSet">
          <Documentation>
            <summary>
Gets the Part of the Set.
</summary>
            <value>The Part of the Set</value>
            <remarks>
This value should be white-space normalized and trimmed, with white-space-only converted to <see langword="null" />.
<!--TODO: Need <xsl:template match="list" mode="Root"></xsl:template>--></remarks>
          </Documentation>
          <Display Name="DisplayName_PartOfSet" ShortName="DisplayName_PartOfSet" Description="DisplayName_PartOfSet" />
          <Type>
            <PredefinedType Keyword="string" />
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="Period">
          <Documentation>
            <summary>
Gets the Period.
</summary>
            <value>The Period</value>
            <remarks>
This value should be white-space normalized and trimmed, with white-space-only converted to <see langword="null" />.
<!--TODO: Need <xsl:template match="list" mode="Root"></xsl:template>--></remarks>
          </Documentation>
          <Display Name="DisplayName_Period" ShortName="DisplayName_Period" Description="DisplayName_Period" />
          <Type>
            <PredefinedType Keyword="string" />
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="TrackNumber">
          <Documentation>
            <summary>
Gets the Track Number.
</summary>
            <value>The Track Number</value>
            <remarks>
                      <!--TODO: Need <xsl:template match="list" mode="Root"></xsl:template>-->
                    </remarks>
          </Documentation>
          <Display Name="DisplayName_TrackNumber" ShortName="DisplayName_TrackNumber" Description="DisplayName_TrackNumber" />
          <Type>
            <!--TODO: Need <xsl:template match="NullableType" mode="Types"></xsl:template>-->
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
      </Interface>
    </Namespace>
  </Source>
  <Source Path="Model\IMusicPropertiesListItem.cs" Id="0d5c34f1-6dd9-4692-8e68-dec213496834">
    <Using Name="System" />
    <Namespace Name="FsInfoCat.Model">
      <Interface Name="IMusicPropertiesListItem" Access="public">
        <Documentation>
          <summary>
Generic interface for list item entities containing extended file properties for music files.
</summary>
          <seealso cref="IPropertiesListItem" />
          <seealso cref="IMusicPropertiesRow" />
          <seealso cref="IMusicPropertySet" />
          <seealso cref="IEquatable{IMusicPropertiesListItem}" />
          <seealso cref="Local.Model.ILocalMusicPropertiesListItem" />
          <seealso cref="Upstream.Model.IUpstreamMusicPropertiesListItem" />
          <seealso cref="IDbContext.MusicPropertiesListing" />
        </Documentation>
        <Implements>
          <SimpleBaseType Name="IPropertiesListItem" />
          <SimpleBaseType Name="IMusicPropertiesRow" />
          <SimpleBaseType>
            <!--TODO: Need <xsl:template match="GenericName" mode="BaseTypes"></xsl:template>-->
          </SimpleBaseType>
        </Implements>
      </Interface>
    </Namespace>
  </Source>
  <Source Path="Model\IMusicPropertiesRow.cs" Id="5f30ed22-baf1-45a3-85e6-3fee844b04bb">
    <Using Name="System" />
    <Namespace Name="FsInfoCat.Model">
      <Interface Name="IMusicPropertiesRow" Access="public">
        <Documentation>
          <summary>
Generic interface for entities containing extended file properties for music files.
</summary>
          <seealso cref="IPropertiesRow" />
          <seealso cref="IMusicProperties" />
          <seealso cref="IEquatable{IMusicPropertiesRow}" />
          <seealso cref="Local.Model.ILocalMusicPropertiesRow" />
          <seealso cref="Upstream.Model.IUpstreamMusicPropertiesRow" />
        </Documentation>
        <Implements>
          <SimpleBaseType Name="IPropertiesRow" />
          <SimpleBaseType Name="IMusicProperties" />
          <SimpleBaseType>
            <!--TODO: Need <xsl:template match="GenericName" mode="BaseTypes"></xsl:template>-->
          </SimpleBaseType>
        </Implements>
      </Interface>
    </Namespace>
  </Source>
  <Source Path="Model\IMusicPropertySet.cs" Id="15218f8a-a18a-40fb-964d-e98e2f291a54">
    <Using Name="System" />
    <Namespace Name="FsInfoCat.Model">
      <Interface Name="IMusicPropertySet" Access="public">
        <Documentation>
          <summary>
Interface for database objects that contain extended file property values of music files.
</summary>
          <seealso cref="IPropertySet" />
          <seealso cref="IMusicProperties" />
          <seealso cref="Local.Model.ILocalMusicPropertySet" />
          <seealso cref="Upstream.Model.IUpstreamMusicPropertySet" />
          <seealso cref="IFile.MusicProperties" />
          <seealso cref="IDbContext.MusicPropertySets" />
        </Documentation>
        <Implements>
          <SimpleBaseType Name="IPropertySet" />
          <SimpleBaseType Name="IMusicPropertiesRow" />
          <SimpleBaseType>
            <!--TODO: Need <xsl:template match="GenericName" mode="BaseTypes"></xsl:template>-->
          </SimpleBaseType>
        </Implements>
      </Interface>
    </Namespace>
  </Source>
  <Source Path="Model\IPersonalFileTag.cs" Id="a703e840-4d22-40a8-908e-1a79c3160445">
    <Using Name="System" />
    <Namespace Name="FsInfoCat.Model">
      <Interface Name="IPersonalFileTag" Access="public">
        <Documentation>
          <summary>
Generic interface for an <see cref="IPersonalTagDefinition" /> that is associated with an <see cref="IFile" />.
</summary>
          <seealso cref="IPersonalTag" />
          <seealso cref="IFileTag" />
          <seealso cref="IEquatable{IPersonalFileTag}" />
          <seealso cref="IHasMembershipKeyReference{IFile, IPersonalTagDefinition}" />
          <seealso cref="Local.Model.ILocalPersonalFileTag" />
          <seealso cref="Upstream.Model.IUpstreamPersonalFileTag" />
          <seealso cref="IFile.PersonalTags" />
          <seealso cref="IDbContext.PersonalFileTags" />
        </Documentation>
        <Implements>
          <SimpleBaseType Name="IPersonalTag" />
          <SimpleBaseType Name="IFileTag" />
          <SimpleBaseType>
            <!--TODO: Need <xsl:template match="GenericName" mode="BaseTypes"></xsl:template>-->
          </SimpleBaseType>
          <SimpleBaseType>
            <!--TODO: Need <xsl:template match="GenericName" mode="BaseTypes"></xsl:template>-->
          </SimpleBaseType>
        </Implements>
      </Interface>
    </Namespace>
  </Source>
  <Source Path="Model\IPersonalSubdirectoryTag.cs" Id="6fcfda6c-5eaa-4994-8890-1910c897462e">
    <Using Name="System" />
    <Namespace Name="FsInfoCat.Model">
      <Interface Name="IPersonalSubdirectoryTag" Access="public">
        <Documentation>
          <summary>
Generic interface for an <see cref="IPersonalTagDefinition" /> that is associated with an <see cref="ISubdirectory" />.
</summary>
          <seealso cref="IPersonalTag" />
          <seealso cref="ISubdirectoryTag" />
          <seealso cref="IEquatable{IPersonalSubdirectoryTag}" />
          <seealso cref="IHasMembershipKeyReference{ISubdirectory, IPersonalTagDefinition}" />
          <seealso cref="Local.Model.ILocalPersonalSubdirectoryTag" />
          <seealso cref="Upstream.Model.IUpstreamPersonalSubdirectoryTag" />
          <seealso cref="ISubdirectory.PersonalTags" />
          <seealso cref="IDbContext.PersonalSubdirectoryTags" />
        </Documentation>
        <Implements>
          <SimpleBaseType Name="IPersonalTag" />
          <SimpleBaseType Name="ISubdirectoryTag" />
          <SimpleBaseType>
            <!--TODO: Need <xsl:template match="GenericName" mode="BaseTypes"></xsl:template>-->
          </SimpleBaseType>
          <SimpleBaseType>
            <!--TODO: Need <xsl:template match="GenericName" mode="BaseTypes"></xsl:template>-->
          </SimpleBaseType>
        </Implements>
      </Interface>
    </Namespace>
  </Source>
  <Source Path="Model\IPersonalTag.cs" Id="482842e2-d218-4eea-83d5-904e539646a5">
    <Namespace Name="FsInfoCat.Model">
      <Interface Name="IPersonalTag" Access="public">
        <Documentation>
          <summary>
Generic interface for an entity that associates an <see cref="IPersonalTagDefinition" /> with an <see cref="IFile" />, <see cref="ISubdirectory" /> or <see cref="IVolume" />.
</summary>
          <seealso cref="IItemTag" />
          <seealso cref="Local.Model.ILocalPersonalTag" />
          <seealso cref="Upstream.Model.IUpstreamPersonalTag" />
          <seealso cref="IPersonalTagDefinition.FileTags" />
          <seealso cref="IPersonalTagDefinition.SubdirectoryTags" />
          <seealso cref="IPersonalTagDefinition.VolumeTags" />
        </Documentation>
        <Implements>
          <SimpleBaseType Name="IItemTag" />
        </Implements>
        <Property Name="Definition">
          <Documentation>
            <summary>
Gets the personal tag definition.
</summary>
            <value>The personal tag definition that is associated with the <see cref="IDbEntity" />.</value>
          </Documentation>
          <Type>
            <Identifier Name="IPersonalTagDefinition" />
          </Type>
          <!--TODO: Need <xsl:template match="Modifiers" mode="Root"></xsl:template>-->
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
      </Interface>
    </Namespace>
  </Source>
  <Source Path="Model\IPersonalTagDefinition.cs" Id="134e03bb-6886-40bc-ab36-2578f8408117">
    <Using Name="System" />
    <Using Name="System.Collections.Generic" />
    <Namespace Name="FsInfoCat.Model">
      <Interface Name="IPersonalTagDefinition" Access="public">
        <Documentation>
          <summary>
Generic interface for a personal (private) tag list item entity that can be associated with <see cref="IFile" />, <see cref="ISubdirectory" />
or <see cref="IVolume" /> entities.
</summary>
          <seealso cref="ITagDefinition" />
          <seealso cref="IEquatable{IPersonalTagDefinition}" />
          <seealso cref="Local.Model.ILocalPersonalTagDefinition" />
          <seealso cref="Upstream.Model.IUpstreamPersonalTagDefinition" />
          <seealso cref="IPersonalTag.Definition" />
          <seealso cref="IDbContext.PersonalTagDefinitions" />
        </Documentation>
        <Implements>
          <SimpleBaseType Name="ITagDefinition" />
          <SimpleBaseType>
            <!--TODO: Need <xsl:template match="GenericName" mode="BaseTypes"></xsl:template>-->
          </SimpleBaseType>
        </Implements>
        <Property Name="FileTags">
          <Documentation>
            <summary>
Gets the file tags.
</summary>
            <value>The <see cref="IPersonalFileTag" /> entities that associate <see cref="IFile" /> entities with the current entity.</value>
          </Documentation>
          <Type>
            <Generic Name="IEnumerable">
              <Identifier Name="IPersonalFileTag" />
            </Generic>
          </Type>
          <!--TODO: Need <xsl:template match="Modifiers" mode="Root"></xsl:template>-->
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="SubdirectoryTags">
          <Documentation>
            <summary>
Gets the subdirectory tags.
</summary>
            <value>The <see cref="IPersonalSubdirectoryTag" /> entities that associate <see cref="ISubdirectory" /> entities with the current entity.</value>
          </Documentation>
          <Type>
            <Generic Name="IEnumerable">
              <Identifier Name="IPersonalSubdirectoryTag" />
            </Generic>
          </Type>
          <!--TODO: Need <xsl:template match="Modifiers" mode="Root"></xsl:template>-->
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="VolumeTags">
          <Documentation>
            <summary>
Gets the volume tags.
</summary>
            <value>The <see cref="IPersonalVolumeTag" /> entities that associate <see cref="IVolume" /> entities with the current entity.</value>
          </Documentation>
          <Type>
            <Generic Name="IEnumerable">
              <Identifier Name="IPersonalVolumeTag" />
            </Generic>
          </Type>
          <!--TODO: Need <xsl:template match="Modifiers" mode="Root"></xsl:template>-->
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
      </Interface>
    </Namespace>
  </Source>
  <Source Path="Model\IPersonalVolumeTag.cs" Id="64826b08-3a2b-4b5f-b344-a6f5cab4f804">
    <Using Name="System" />
    <Namespace Name="FsInfoCat.Model">
      <Interface Name="IPersonalVolumeTag" Access="public">
        <Documentation>
          <summary>
Generic interface for an <see cref="IPersonalTagDefinition" /> that is associated with an <see cref="IVolume" />.
</summary>
          <seealso cref="IPersonalTag" />
          <seealso cref="IVolumeTag" />
          <seealso cref="IEquatable{IPersonalVolumeTag}" />
          <seealso cref="IHasMembershipKeyReference{IVolume, IPersonalTagDefinition}" />
          <seealso cref="Local.Model.ILocalPersonalVolumeTag" />
          <seealso cref="Upstream.Model.IUpstreamPersonalVolumeTag" />
          <seealso cref="IVolume.PersonalTags" />
          <seealso cref="IDbContext.PersonalVolumeTags" />
        </Documentation>
        <Implements>
          <SimpleBaseType Name="IPersonalTag" />
          <SimpleBaseType Name="IVolumeTag" />
          <SimpleBaseType>
            <!--TODO: Need <xsl:template match="GenericName" mode="BaseTypes"></xsl:template>-->
          </SimpleBaseType>
          <SimpleBaseType>
            <!--TODO: Need <xsl:template match="GenericName" mode="BaseTypes"></xsl:template>-->
          </SimpleBaseType>
        </Implements>
      </Interface>
    </Namespace>
  </Source>
  <Source Path="Model\IPhotoProperties.cs" Id="681ae3e8-7154-4fa2-ad7d-a165e1b976cd">
    <Using Name="FsInfoCat.Collections" />
    <Using Name="System" />
    <Using Name="System.ComponentModel.DataAnnotations" />
    <Namespace Name="FsInfoCat.Model">
      <Interface Name="IPhotoProperties" Access="public">
        <Documentation>
          <summary>
Represents extended file properties for photo files.
</summary>
        </Documentation>
        <!--TODO: Need <xsl:template match="Attribute[@Name='EntityInterface']" mode="Root" />-->
        <Implements>
          <SimpleBaseType>
            <!--TODO: Need <xsl:template match="GenericName" mode="BaseTypes"></xsl:template>-->
          </SimpleBaseType>
        </Implements>
        <Property Name="CameraManufacturer">
          <Documentation>
            <summary>
Gets the Camera Manufacturer.
</summary>
            <value>The manufacturer name of the camera that took the photo, in a string format.</value>
            <remarks>
This value should be white-space normalized and trimmed, with white-space-only converted to <see langword="null" />.
<!--TODO: Need <xsl:template match="list" mode="Root"></xsl:template>--></remarks>
          </Documentation>
          <Display Name="DisplayName_CameraManufacturer" ShortName="DisplayName_CameraManufacturer" Description="DisplayName_CameraManufacturer" />
          <Type>
            <PredefinedType Keyword="string" />
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="CameraModel">
          <Documentation>
            <summary>
Gets the Camera Model.
</summary>
            <value>The model name of the camera that shot the photo, in string form.</value>
            <remarks>
This value should be white-space normalized and trimmed, with white-space-only converted to <see langword="null" />.
<!--TODO: Need <xsl:template match="list" mode="Root"></xsl:template>--></remarks>
          </Documentation>
          <Display Name="DisplayName_CameraModel" ShortName="DisplayName_CameraModel" Description="DisplayName_CameraModel" />
          <Type>
            <PredefinedType Keyword="string" />
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="DateTaken">
          <Documentation>
            <summary>
Gets the Date Taken.
</summary>
            <value>The date when the photo was taken, as read from the camera in the file's Exchangeable Image File (EXIF) tag.</value>
            <remarks>
                      <!--TODO: Need <xsl:template match="list" mode="Root"></xsl:template>-->
                    </remarks>
          </Documentation>
          <Display Name="DisplayName_DateTaken" ShortName="DisplayName_DateTaken" Description="DisplayName_DateTaken" />
          <Type>
            <!--TODO: Need <xsl:template match="NullableType" mode="Types"></xsl:template>-->
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="Event">
          <Documentation>
            <summary>
Return the event at which the photo was taken.
</summary>
            <value>The event where the photo was taken.</value>
            <remarks>
The end-user provides this value.
<!--TODO: Need <xsl:template match="list" mode="Root"></xsl:template>--></remarks>
          </Documentation>
          <Display Name="DisplayName_Event" ShortName="DisplayName_Event" Description="DisplayName_Event" />
          <Type>
            <Identifier Name="MultiStringValue" />
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="EXIFVersion">
          <Documentation>
            <summary>
Returns the EXIF version.
</summary>
            <value>The Exchangeable Image File (EXIF) version.</value>
            <remarks>
This value should be white-space normalized and trimmed, with white-space-only converted to <see langword="null" />.
<!--TODO: Need <xsl:template match="list" mode="Root"></xsl:template>--></remarks>
          </Documentation>
          <Display Name="DisplayName_EXIFVersion" ShortName="DisplayName_EXIFVersion" Description="DisplayName_EXIFVersion" />
          <Type>
            <PredefinedType Keyword="string" />
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="Orientation">
          <Documentation>
            <summary>
Gets the Orientation.
</summary>
            <value>The orientation of the photo when it was taken, as specified in the Exchangeable Image File (EXIF) information and in terms of rows and columns.</value>
            <remarks>
                      <!--TODO: Need <xsl:template match="list" mode="Root"></xsl:template>-->
                    </remarks>
          </Documentation>
          <Display Name="DisplayName_Orientation" ShortName="DisplayName_Orientation" Description="DisplayName_Orientation" />
          <Type>
            <!--TODO: Need <xsl:template match="NullableType" mode="Types"></xsl:template>-->
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="OrientationText">
          <Documentation>
            <summary>
Gets the user-friendly form of System.Photo.Orientation.
</summary>
            <value>The user-friendly form of System.Photo.Orientation.</value>
            <remarks>
This value should be trimmed, with white-space-only converted to <see langword="null" />.
<para>Not intended to be parsed programmatically.</para><!--TODO: Need <xsl:template match="list" mode="Root"></xsl:template>--></remarks>
          </Documentation>
          <Display Name="DisplayName_Orientation" ShortName="DisplayName_Orientation" Description="DisplayName_Orientation" />
          <Type>
            <PredefinedType Keyword="string" />
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="PeopleNames">
          <Documentation>
            <summary>
The people tags on an image.
</summary>
            <value>The people tags on an image.</value>
            <remarks>
                      <!--TODO: Need <xsl:template match="list" mode="Root"></xsl:template>-->
                    </remarks>
          </Documentation>
          <Display Name="DisplayName_PeopleNames" ShortName="DisplayName_PeopleNames" Description="DisplayName_PeopleNames" />
          <Type>
            <Identifier Name="MultiStringValue" />
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
      </Interface>
    </Namespace>
  </Source>
  <Source Path="Model\IPhotoPropertiesListItem.cs" Id="fc653f68-8cfa-4eb9-9173-1ebabb8ea1e1">
    <Using Name="System" />
    <Namespace Name="FsInfoCat.Model">
      <Interface Name="IPhotoPropertiesListItem" Access="public">
        <Documentation>
          <summary>
Generic interface for list item entities containing extended file properties for photo files.
</summary>
          <seealso cref="IPropertiesListItem" />
          <seealso cref="IPhotoPropertiesRow" />
          <seealso cref="IPhotoPropertySet" />
          <seealso cref="IEquatable{IPhotoPropertiesListItem}" />
          <seealso cref="Local.Model.ILocalPhotoPropertiesListItem" />
          <seealso cref="Upstream.Model.IUpstreamPhotoPropertiesListItem" />
          <seealso cref="IDbContext.PhotoPropertiesListing" />
        </Documentation>
        <Implements>
          <SimpleBaseType Name="IPropertiesListItem" />
          <SimpleBaseType Name="IPhotoPropertiesRow" />
          <SimpleBaseType>
            <!--TODO: Need <xsl:template match="GenericName" mode="BaseTypes"></xsl:template>-->
          </SimpleBaseType>
        </Implements>
      </Interface>
    </Namespace>
  </Source>
  <Source Path="Model\IPhotoPropertiesRow.cs" Id="71bdbb52-c221-44de-970f-e7e993c20cbc">
    <Using Name="System" />
    <Namespace Name="FsInfoCat.Model">
      <Interface Name="IPhotoPropertiesRow" Access="public">
        <Documentation>
          <summary>
Generic interface for entities containing extended file properties for photo files.
</summary>
          <seealso cref="IPropertiesRow" />
          <seealso cref="IPhotoProperties" />
          <seealso cref="IEquatable{IPhotoPropertiesRow}" />
          <seealso cref="Local.Model.ILocalPhotoPropertiesRow" />
          <seealso cref="Upstream.Model.IUpstreamPhotoPropertiesRow" />
        </Documentation>
        <Implements>
          <SimpleBaseType Name="IPropertiesRow" />
          <SimpleBaseType Name="IPhotoProperties" />
          <SimpleBaseType>
            <!--TODO: Need <xsl:template match="GenericName" mode="BaseTypes"></xsl:template>-->
          </SimpleBaseType>
        </Implements>
      </Interface>
    </Namespace>
  </Source>
  <Source Path="Model\IPhotoPropertySet.cs" Id="0532a75d-77e5-443d-9f48-ae9a718a4b82">
    <Using Name="System" />
    <Namespace Name="FsInfoCat.Model">
      <Interface Name="IPhotoPropertySet" Access="public">
        <Documentation>
          <summary>
Interface for database objects that contain extended file property values of photo files.
</summary>
          <seealso cref="IPropertySet" />
          <seealso cref="IPhotoProperties" />
          <seealso cref="Local.Model.ILocalPhotoPropertySet" />
          <seealso cref="Upstream.Model.IUpstreamPhotoPropertySet" />
          <seealso cref="IFile.PhotoProperties" />
          <seealso cref="IDbContext.PhotoPropertySets" />
        </Documentation>
        <Implements>
          <SimpleBaseType Name="IPropertySet" />
          <SimpleBaseType Name="IPhotoProperties" />
          <SimpleBaseType>
            <!--TODO: Need <xsl:template match="GenericName" mode="BaseTypes"></xsl:template>-->
          </SimpleBaseType>
        </Implements>
      </Interface>
    </Namespace>
  </Source>
  <Source Path="Model\IPropertiesListItem.cs" Id="a98722b6-2bdc-4fb0-8db5-84d6d829b54d">
    <Using Name="System.ComponentModel.DataAnnotations" />
    <Namespace Name="FsInfoCat.Model">
      <Interface Name="IPropertiesListItem" Access="public">
        <Documentation>
          <summary>
Generic interface for list item entities containing extended file properties.
</summary>
          <seealso cref="IPropertiesRow" />
          <seealso cref="IAudioPropertiesListItem" />
          <seealso cref="IDocumentPropertiesListItem" />
          <seealso cref="IDRMPropertiesListItem" />
          <seealso cref="IGPSPropertiesListItem" />
          <seealso cref="IImagePropertiesListItem" />
          <seealso cref="IMediaPropertiesListItem" />
          <seealso cref="IMusicPropertiesListItem" />
          <seealso cref="IPhotoPropertiesListItem" />
          <seealso cref="IRecordedTVPropertiesListItem" />
          <seealso cref="ISummaryPropertiesListItem" />
          <seealso cref="IVideoPropertiesListItem" />
          <seealso cref="Local.Model.ILocalPropertiesListItem" />
          <seealso cref="Upstream.Model.IUpstreamPropertiesListItem" />
        </Documentation>
        <Implements>
          <SimpleBaseType Name="IPropertiesRow" />
        </Implements>
        <Property Name="ExistingFileCount">
          <Documentation>
            <summary>
Gets the number of non-deleted files associated with the current property set.
</summary>
            <value>The number of non-deleted files associated with the current property set.</value>
          </Documentation>
          <Display Name="DisplayName_Files" ShortName="DisplayName_Files" Description="DisplayName_Files" />
          <Type>
            <PredefinedType Keyword="long" />
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="TotalFileCount">
          <Documentation>
            <summary>
Gets the total number of file entities associated with the current property set.
</summary>
            <value>The number of files associated with the current property set, including entities representing deleted files.</value>
          </Documentation>
          <Display Name="DisplayName_AllFiles" ShortName="DisplayName_AllFiles" Description="DisplayName_AllFiles" />
          <Type>
            <PredefinedType Keyword="long" />
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
      </Interface>
    </Namespace>
  </Source>
  <Source Path="Model\IPropertiesRow.cs" Id="e23f3da4-2d64-45db-a631-6daad93ff12f">
    <Namespace Name="FsInfoCat.Model">
      <Interface Name="IPropertiesRow" Access="public">
        <Documentation>
          <summary>
Generic interface for entities containing extended file properties.
</summary>
          <seealso cref="IDbEntity" />
          <seealso cref="IHasSimpleIdentifier" />
          <seealso cref="Local.Model.ILocalPropertiesRow" />
          <seealso cref="Upstream.Model.IUpstreamPropertiesRow" />
          <seealso cref="IPropertySet" />
          <seealso cref="ISummaryPropertiesRow" />
          <seealso cref="IDocumentPropertiesRow" />
          <seealso cref="IAudioPropertiesRow" />
          <seealso cref="IDRMPropertiesRow" />
          <seealso cref="IGPSPropertiesRow" />
          <seealso cref="IImagePropertiesRow" />
          <seealso cref="IMediaPropertiesRow" />
          <seealso cref="IMusicPropertiesRow" />
          <seealso cref="IPhotoPropertiesRow" />
          <seealso cref="IRecordedTVPropertiesRow" />
          <seealso cref="IVideoPropertiesRow" />
        </Documentation>
        <Implements>
          <SimpleBaseType Name="IDbEntity" />
          <SimpleBaseType Name="IHasSimpleIdentifier" />
        </Implements>
      </Interface>
    </Namespace>
  </Source>
  <Source Path="Model\IPropertySet.cs" Id="e6a16887-a801-40c0-ae0c-fbe2c7cacedb">
    <Using Name="System.Collections.Generic" />
    <Using Name="System.ComponentModel.DataAnnotations" />
    <Namespace Name="FsInfoCat.Model">
      <Interface Name="IPropertySet" Access="public">
        <Documentation>
          <summary>
Generic interface for entities that represent a grouping of extended file properties.
</summary>
          <seealso cref="IDbEntity" />
          <seealso cref="Local.Model.ILocalPropertySet" />
          <seealso cref="Upstream.Model.IUpstreamPropertySet" />
          <seealso cref="ISummaryPropertySet" />
          <seealso cref="IDocumentPropertySet" />
          <seealso cref="IAudioPropertySet" />
          <seealso cref="IDRMPropertySet" />
          <seealso cref="IGPSPropertySet" />
          <seealso cref="IImagePropertySet" />
          <seealso cref="IMediaPropertySet" />
          <seealso cref="IMusicPropertySet" />
          <seealso cref="IPhotoPropertySet" />
          <seealso cref="IRecordedTVPropertySet" />
          <seealso cref="IVideoPropertySet" />
        </Documentation>
        <Implements>
          <SimpleBaseType Name="IPropertiesRow" />
        </Implements>
        <Property Name="Files">
          <Documentation>
            <summary>
Gets the files that share the same property values as this property set.
</summary>
            <value>The <see cref="IFile">files</see> that share the same property values as this property set.</value>
          </Documentation>
          <Display Name="DisplayName_Files" ShortName="DisplayName_Files" Description="DisplayName_Files" />
          <Type>
            <Generic Name="IEnumerable">
              <Identifier Name="IFile" />
            </Generic>
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
      </Interface>
    </Namespace>
  </Source>
  <Source Path="Model\IRecordedTVProperties.cs" Id="a135ae54-a787-4db3-b3ff-1645bb2c67de">
    <Using Name="System" />
    <Using Name="System.ComponentModel.DataAnnotations" />
    <Namespace Name="FsInfoCat.Model">
      <Interface Name="IRecordedTVProperties" Access="public">
        <Documentation>
          <summary>
Represents extended file properties for recorded TV files.
</summary>
        </Documentation>
        <!--TODO: Need <xsl:template match="Attribute[@Name='EntityInterface']" mode="Root" />-->
        <Implements>
          <SimpleBaseType>
            <!--TODO: Need <xsl:template match="GenericName" mode="BaseTypes"></xsl:template>-->
          </SimpleBaseType>
        </Implements>
        <Property Name="ChannelNumber">
          <Documentation>
            <summary>
Gets the Channel Number.
</summary>
            <value>Example: 42 The recorded TV channels.</value>
            <remarks>
For example, 42, 5, 53.
<!--TODO: Need <xsl:template match="list" mode="Root"></xsl:template>--></remarks>
          </Documentation>
          <Display Name="DisplayName_ChannelNumber" ShortName="DisplayName_ChannelNumber" Description="DisplayName_ChannelNumber" />
          <Type>
            <!--TODO: Need <xsl:template match="NullableType" mode="Types"></xsl:template>-->
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="EpisodeName">
          <Documentation>
            <summary>
Gets the Episode Name.
</summary>
            <value>Example: "Nowhere to Hyde" The names of recorded TV episodes.</value>
            <remarks>
This value should be white-space normalized and trimmed, with white-space-only converted to <see langword="null" />.
<para>For example, "Nowhere to Hyde".</para><!--TODO: Need <xsl:template match="list" mode="Root"></xsl:template>--></remarks>
          </Documentation>
          <Display Name="DisplayName_EpisodeName" ShortName="DisplayName_EpisodeName" Description="DisplayName_EpisodeName" />
          <Type>
            <PredefinedType Keyword="string" />
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="IsDTVContent">
          <Documentation>
            <summary>
Indicates whether the video is DTV.
</summary>
            <value>
                      <see langword="true" /> if the video is DTV; <see langword="false" /> if not DTV; otherwise, <see langword="null" /> if not specified.</value>
            <remarks>
This value should be white-space normalized and trimmed, with white-space-only converted to <see langword="null" />.
<!--TODO: Need <xsl:template match="list" mode="Root"></xsl:template>--></remarks>
          </Documentation>
          <Display Name="DisplayName_IsDTVContent" ShortName="DisplayName_IsDTVContent" Description="DisplayName_IsDTVContent" />
          <Type>
            <!--TODO: Need <xsl:template match="NullableType" mode="Types"></xsl:template>-->
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="IsHDContent">
          <Documentation>
            <summary>
Indicates whether the video is HDTV.
</summary>
            <value>
                      <see langword="true" /> if the video is HDTV; <see langword="false" /> if not HDTV; otherwise, <see langword="null" /> if not specified.</value>
            <remarks>
This value should be white-space normalized and trimmed, with white-space-only converted to <see langword="null" />.
<!--TODO: Need <xsl:template match="list" mode="Root"></xsl:template>--></remarks>
          </Documentation>
          <Display Name="DisplayName_IsHDContent" ShortName="DisplayName_IsHDContent" Description="DisplayName_IsHDContent" />
          <Type>
            <!--TODO: Need <xsl:template match="NullableType" mode="Types"></xsl:template>-->
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="NetworkAffiliation">
          <Documentation>
            <summary>
Gets the Network Affiliation.
</summary>
            <value>The Network Affiliation</value>
            <remarks>
This value should be white-space normalized and trimmed, with white-space-only converted to <see langword="null" />.
<!--TODO: Need <xsl:template match="list" mode="Root"></xsl:template>--></remarks>
          </Documentation>
          <Display Name="DisplayName_NetworkAffiliation" ShortName="DisplayName_NetworkAffiliation" Description="DisplayName_NetworkAffiliation" />
          <Type>
            <PredefinedType Keyword="string" />
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="OriginalBroadcastDate">
          <Documentation>
            <summary>
Gets the Original Broadcast Date.
</summary>
            <value>The Original Broadcast Date</value>
            <remarks>
                      <!--TODO: Need <xsl:template match="list" mode="Root"></xsl:template>-->
                    </remarks>
          </Documentation>
          <Display Name="DisplayName_OriginalBroadcastDate" ShortName="DisplayName_OriginalBroadcastDate" Description="DisplayName_OriginalBroadcastDate" />
          <Type>
            <!--TODO: Need <xsl:template match="NullableType" mode="Types"></xsl:template>-->
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="ProgramDescription">
          <Documentation>
            <summary>
Gets the Program Description.
</summary>
            <value>The Program Description</value>
            <remarks>
This value should be trimmed, with white-space-only converted to <see langword="null" />.
<!--TODO: Need <xsl:template match="list" mode="Root"></xsl:template>--></remarks>
          </Documentation>
          <Display Name="DisplayName_ProgramDescription" ShortName="DisplayName_ProgramDescription" Description="DisplayName_ProgramDescription" />
          <Type>
            <PredefinedType Keyword="string" />
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="StationCallSign">
          <Documentation>
            <summary>
Gets the Station Call Sign.
</summary>
            <value>Example: "TOONP" Any recorded station call signs.</value>
            <remarks>
This value should be white-space normalized and trimmed, with white-space-only converted to <see langword="null" />.
<para>For example, "TOONP".</para><!--TODO: Need <xsl:template match="list" mode="Root"></xsl:template>--></remarks>
          </Documentation>
          <Display Name="DisplayName_StationCallSign" ShortName="DisplayName_StationCallSign" Description="DisplayName_StationCallSign" />
          <Type>
            <PredefinedType Keyword="string" />
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="StationName">
          <Documentation>
            <summary>
Gets the Station Name.
</summary>
            <value>The  name of the broadcast station or <see langword="null" /> if this value is not specified.</value>
            <remarks>
This value should be white-space normalized and trimmed, with white-space-only converted to <see langword="null" />.
<!--TODO: Need <xsl:template match="list" mode="Root"></xsl:template>--></remarks>
          </Documentation>
          <Display Name="DisplayName_StationName" ShortName="DisplayName_StationName" Description="DisplayName_StationName" />
          <Type>
            <PredefinedType Keyword="string" />
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
      </Interface>
    </Namespace>
  </Source>
  <Source Path="Model\IRecordedTVPropertiesListItem.cs" Id="70e7eda9-5be4-4fca-b8ec-503a615e5e4d">
    <Using Name="System" />
    <Namespace Name="FsInfoCat.Model">
      <Interface Name="IRecordedTVPropertiesListItem" Access="public">
        <Documentation>
          <summary>
Generic interface for list item entities containing extended file properties for recorded TV files.
</summary>
          <seealso cref="IPropertiesListItem" />
          <seealso cref="IRecordedTVPropertiesRow" />
          <seealso cref="IRecordedTVPropertySet" />
          <seealso cref="IEquatable{IRecordedTVPropertiesListItem}" />
          <seealso cref="Local.Model.ILocalRecordedTVPropertiesListItem" />
          <seealso cref="Upstream.Model.IUpstreamRecordedTVPropertiesListItem" />
          <seealso cref="IDbContext.RecordedTVPropertiesListing" />
        </Documentation>
        <Implements>
          <SimpleBaseType Name="IPropertiesListItem" />
          <SimpleBaseType Name="IRecordedTVPropertiesRow" />
          <SimpleBaseType>
            <!--TODO: Need <xsl:template match="GenericName" mode="BaseTypes"></xsl:template>-->
          </SimpleBaseType>
        </Implements>
      </Interface>
    </Namespace>
  </Source>
  <Source Path="Model\IRecordedTVPropertiesRow.cs" Id="58562ac5-e940-4bb2-af89-0d7a9c67738a">
    <Using Name="System" />
    <Namespace Name="FsInfoCat.Model">
      <Interface Name="IRecordedTVPropertiesRow" Access="public">
        <Documentation>
          <summary>
Generic interface for entities containing extended file properties for recorded TV files.
</summary>
          <seealso cref="IPropertiesRow" />
          <seealso cref="IRecordedTVProperties" />
          <seealso cref="IEquatable{IRecordedTVPropertiesRow}" />
          <seealso cref="Local.Model.ILocalRecordedTVPropertiesRow" />
          <seealso cref="Upstream.Model.IUpstreamRecordedTVPropertiesRow" />
        </Documentation>
        <Implements>
          <SimpleBaseType Name="IPropertiesRow" />
          <SimpleBaseType Name="IRecordedTVProperties" />
          <SimpleBaseType>
            <!--TODO: Need <xsl:template match="GenericName" mode="BaseTypes"></xsl:template>-->
          </SimpleBaseType>
        </Implements>
      </Interface>
    </Namespace>
  </Source>
  <Source Path="Model\IRecordedTVPropertySet.cs" Id="aecfe8ba-ed0e-4b25-b7d5-49cbe88bd1ac">
    <Using Name="System" />
    <Namespace Name="FsInfoCat.Model">
      <Interface Name="IRecordedTVPropertySet" Access="public">
        <Documentation>
          <summary>
Interface for database objects that contain extended file property values of recorded TV files.
</summary>
          <seealso cref="IPropertySet" />
          <seealso cref="IRecordedTVProperties" />
          <seealso cref="Local.Model.ILocalRecordedTVPropertySet" />
          <seealso cref="Upstream.Model.IUpstreamRecordedTVPropertySet" />
          <seealso cref="IFile.RecordedTVProperties" />
          <seealso cref="IDbContext.RecordedTVPropertySets" />
        </Documentation>
        <Implements>
          <SimpleBaseType Name="IPropertySet" />
          <SimpleBaseType Name="IRecordedTVPropertiesRow" />
          <SimpleBaseType>
            <!--TODO: Need <xsl:template match="GenericName" mode="BaseTypes"></xsl:template>-->
          </SimpleBaseType>
        </Implements>
      </Interface>
    </Namespace>
  </Source>
  <Source Path="Model\IRedundancy.cs" Id="1a630145-97bb-4e2a-8b41-b314713ca6b0">
    <Using Name="System" />
    <Using Name="System.ComponentModel.DataAnnotations" />
    <Namespace Name="FsInfoCat.Model">
      <Interface Name="IRedundancy" Access="public">
        <Documentation>
          <summary>
Generic interface for an entity that defines an association between an <see cref="IRedundantSet" /> and an <see cref="IFile" />.
</summary>
          <seealso cref="IDbEntity" />
          <seealso cref="Local.Model.ILocalRedundancy" />
          <seealso cref="Upstream.Model.IUpstreamRedundancy" />
          <seealso cref="IRedundantSet.Redundancies" />
          <seealso cref="IFile.Redundancy" />
          <seealso cref="IDbContext.Redundancies" />
        </Documentation>
        <Implements>
          <SimpleBaseType Name="IDbEntity" />
          <SimpleBaseType>
            <!--TODO: Need <xsl:template match="GenericName" mode="BaseTypes"></xsl:template>-->
          </SimpleBaseType>
          <SimpleBaseType>
            <!--TODO: Need <xsl:template match="GenericName" mode="BaseTypes"></xsl:template>-->
          </SimpleBaseType>
        </Implements>
        <Property Name="Reference">
          <Documentation>
            <summary>
Gets the custom reference value.
</summary>
            <value>The custom reference value which can be used to refer to external information regarding redundancy remediation, such as a ticket number.</value>
          </Documentation>
          <Display Name="DisplayName_Reference" ShortName="DisplayName_Reference" Description="DisplayName_Reference" />
          <Type>
            <PredefinedType Keyword="string" />
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="Notes">
          <Documentation>
            <summary>
Gets custom notes to be associated with the current redundancy.
</summary>
            <value>The custom notes to associate with the current redundancy.</value>
          </Documentation>
          <Display Name="DisplayName_Notes" ShortName="DisplayName_Notes" Description="DisplayName_Notes" />
          <Type>
            <PredefinedType Keyword="string" />
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="FileId">
          <Documentation>
            <summary>
Gets the primary key of the file in the that belongs to the redundancy set.
</summary>
            <value>The <see cref="Guid">unique identifier</see> used as the foreign key that refers to the <see cref="File" /><see cref="IFile">entity</see>.</value>
            <remarks>This is also part of this entity's compound primary key.</remarks>
          </Documentation>
          <Display Name="DisplayName_FileId" ShortName="DisplayName_FileId" Description="DisplayName_FileId" />
          <Type>
            <Identifier Name="Guid" />
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="File">
          <Documentation>
            <summary>
Gets the file that belongs to the redundancy set.
</summary>
            <value>The file that belongs to the redundancy set.</value>
          </Documentation>
          <Display Name="DisplayName_File" ShortName="DisplayName_File" Description="DisplayName_File" />
          <Type>
            <Identifier Name="IFile" />
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="RedundantSetId">
          <Documentation>
            <summary>
Gets the primary key of the redundancy set file belongs to.
</summary>
            <value>The <see cref="Guid">unique identifier</see> used as the foreign key that refers to the <see cref="IRedundantSet">entity</see>.</value>
            <remarks>This is also part of this entity's compound primary key.</remarks>
          </Documentation>
          <Display Name="DisplayName_RedundantSetId" ShortName="DisplayName_RedundantSetId" Description="DisplayName_RedundantSetId" />
          <Type>
            <Identifier Name="Guid" />
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="RedundantSet">
          <Documentation>
            <summary>
Gets the redundancy set.
</summary>
            <value>The redundancy set.</value>
          </Documentation>
          <Display Name="DisplayName_RedundantSet" ShortName="DisplayName_RedundantSet" Description="DisplayName_RedundantSet" />
          <Type>
            <Identifier Name="IRedundantSet" />
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Method Name="TryGetFileId">
          <Documentation>
            <summary>
Gets the value of the <see cref="FileId" /> property or the unique identifier of the <see cref="File" /> entity if it has been assigned.
</summary>
            <param name="fileId">Receives the unique identifier value.</param>
            <returns>
                      <see langword="true" /> if the unique identifier for the associated <see cref="IFile" /> baseline entity has been set; otherwise, <see langword="false" />.</returns>
            <value>The <see cref="IFile" /> object that is part of the <see cref="RedundantSet" />.</value>
          </Documentation>
          <Parameters>
            <Parameter Name="fileId">
              <Type>
                <Identifier Name="Guid" />
              </Type>
              <!--TODO: Need <xsl:template match="Modifiers" mode="Root"></xsl:template>-->
            </Parameter>
          </Parameters>
          <ReturnType>
            <PredefinedType Keyword="bool" />
          </ReturnType>
        </Method>
        <Method Name="TryGetRedundantSetId">
          <Documentation>
            <summary>
Gets value of the <see cref="RedundantSetId" /> property or the unique identifier of the <see cref="RedundantSet" /> entity if it has been assigned.
</summary>
            <param name="redundantSetId">Receives the unique identifier value.</param>
            <returns>
                      <see langword="true" /> if the unique identifier for the associated <see cref="IRedundantSet" /> correlative entity has been set; otherwise, <see langword="false" />.</returns>
            <value>The <see cref="IRedundantSet" /> representing the collection of redundant files.</value>
          </Documentation>
          <Parameters>
            <Parameter Name="redundantSetId">
              <Type>
                <Identifier Name="Guid" />
              </Type>
              <!--TODO: Need <xsl:template match="Modifiers" mode="Root"></xsl:template>-->
            </Parameter>
          </Parameters>
          <ReturnType>
            <PredefinedType Keyword="bool" />
          </ReturnType>
        </Method>
      </Interface>
    </Namespace>
  </Source>
  <Source Path="Model\IRedundantSet.cs" Id="b95af207-d0a8-4071-8f9e-8011db10bd4d">
    <Using Name="System" />
    <Using Name="System.Collections.Generic" />
    <Using Name="System.ComponentModel.DataAnnotations" />
    <Namespace Name="FsInfoCat.Model">
      <Interface Name="IRedundantSet" Access="public">
        <Documentation>
          <summary>
Represents a set of files that have the same size, Hash and remediation status.
</summary>
          <seealso cref="IDbEntity" />
          <seealso cref="Local.Model.ILocalRedundantSet" />
          <seealso cref="Upstream.Model.IUpstreamRedundantSet" />
          <seealso cref="IBinaryPropertySet.RedundantSets" />
          <seealso cref="IRedundancy.RedundantSet" />
          <seealso cref="IDbContext.RedundantSets" />
        </Documentation>
        <Implements>
          <SimpleBaseType Name="IRedundantSetRow" />
          <SimpleBaseType>
            <!--TODO: Need <xsl:template match="GenericName" mode="BaseTypes"></xsl:template>-->
          </SimpleBaseType>
        </Implements>
        <Property Name="BinaryProperties">
          <Documentation>
            <summary>
Gets the binary properties in common with all files in the current redundant set.
</summary>
            <value>The binary properties in common with all files in the current redundant set.</value>
          </Documentation>
          <Display Name="DisplayName_BinaryProperties" ShortName="DisplayName_BinaryProperties" Description="DisplayName_BinaryProperties" />
          <Type>
            <Identifier Name="IBinaryPropertySet" />
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="Redundancies">
          <Documentation>
            <summary>
Gets the redundancy entities which represent links to redundant files.
</summary>
            <value>The redundancy entities which represent links to redundant files.</value>
          </Documentation>
          <Display Name="DisplayName_Redundancies" ShortName="DisplayName_Redundancies" Description="DisplayName_Redundancies" />
          <Type>
            <Generic Name="IEnumerable">
              <Identifier Name="IRedundancy" />
            </Generic>
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Method Name="TryGetBinaryPropertiesId">
          <Documentation>
            <summary>
Attempts the get the primary key of the associated binary properties entity.
</summary>
            <param name="binaryPropertiesId">The <see cref="IHasSimpleIdentifier.Id" /> value of the associated <see cref="IBinaryPropertySet" />.</param>
            <returns>
                      <see langword="true" /> if <see cref="BinaryProperties" /> has a primary key value assigned; otherwise, <see langword="false" />.</returns>
          </Documentation>
          <Parameters>
            <Parameter Name="binaryPropertiesId">
              <Type>
                <Identifier Name="Guid" />
              </Type>
              <!--TODO: Need <xsl:template match="Modifiers" mode="Root"></xsl:template>-->
            </Parameter>
          </Parameters>
          <ReturnType>
            <PredefinedType Keyword="bool" />
          </ReturnType>
        </Method>
      </Interface>
    </Namespace>
  </Source>
  <Source Path="Model\IRedundantSetListItem.cs" Id="9913bcf2-81ec-4915-8544-27d5be3b9f2d">
    <Using Name="System" />
    <Namespace Name="FsInfoCat.Model">
      <Interface Name="IRedundantSetListItem" Access="public">
        <Documentation>
          <summary>
Generic interface for an entity that represents a group of <see cref="IFile" /> entities which are considered redundant.
</summary>
          <seealso cref="IRedundantSetRow" />
          <seealso cref="IEquatable{IRedundantSetListItem}" />
          <seealso cref="Local.Model.ILocalRedundantSetListItem" />
          <seealso cref="Upstream.Model.IUpstreamRedundantSetListItem" />
          <seealso cref="IDbContext.RedundantSetListing" />
        </Documentation>
        <Implements>
          <SimpleBaseType Name="IRedundantSetRow" />
          <SimpleBaseType>
            <!--TODO: Need <xsl:template match="GenericName" mode="BaseTypes"></xsl:template>-->
          </SimpleBaseType>
        </Implements>
        <Property Name="Length">
          <Documentation>
            <summary>
Gets the length that all files in this redundant set have in common.
</summary>
            <value>The <see cref="IBinaryPropertySet.Length" /> value that all files in this redundant set have in common.</value>
          </Documentation>
          <Type>
            <PredefinedType Keyword="long" />
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="Hash">
          <Documentation>
            <summary>
Gets the MD5 hash value that all files in this redundant set have in common.
</summary>
            <value>The <see cref="IBinaryPropertySet.Length" /> value that all files in this redundant set have in common or <see langword="null" /> if the MD5 hash has not be
calculated for the files in this set.</value>
          </Documentation>
          <Type>
            <!--TODO: Need <xsl:template match="NullableType" mode="Types"></xsl:template>-->
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="RedundancyCount">
          <Documentation>
            <summary>
Gets the redundancy count.
</summary>
            <value>The number of <see cref="IFile" /> entities in this redundant set.</value>
          </Documentation>
          <Type>
            <PredefinedType Keyword="long" />
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
      </Interface>
    </Namespace>
  </Source>
  <Source Path="Model\IRedundantSetRow.cs" Id="c045d4f8-fca5-4f94-832e-0a2325814968">
    <Using Name="System" />
    <Using Name="System.ComponentModel.DataAnnotations" />
    <Namespace Name="FsInfoCat.Model">
      <Interface Name="IRedundantSetRow" Access="public">
        <Documentation>
          <summary>
Generic interface for an entity that represents a group of <see cref="IFile" /> entities which are considered redundant.
</summary>
          <seealso cref="IDbEntity" />
          <seealso cref="IHasSimpleIdentifier" />
          <seealso cref="Local.Model.ILocalRedundantSetRow" />
          <seealso cref="Upstream.Model.IUpstreamRedundantSetRow" />
        </Documentation>
        <Implements>
          <SimpleBaseType Name="IDbEntity" />
          <SimpleBaseType Name="IHasSimpleIdentifier" />
        </Implements>
        <Property Name="Reference">
          <Documentation>
            <summary>
Gets the custom reference value.
</summary>
            <value>The custom reference value which can be used to refer to external information regarding redundancy remediation, such as a ticket number.</value>
          </Documentation>
          <Display Name="DisplayName_Reference" ShortName="DisplayName_Reference" Description="DisplayName_Reference" />
          <Type>
            <PredefinedType Keyword="string" />
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="Notes">
          <Documentation>
            <summary>
Gets custom notes to be associated with the current set of redunant files.
</summary>
            <value>The custom notes to associate with the current set of redunant files.</value>
          </Documentation>
          <Display Name="DisplayName_Notes" ShortName="DisplayName_Notes" Description="DisplayName_Notes" />
          <Type>
            <PredefinedType Keyword="string" />
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="Status">
          <Documentation>
            <summary>
Gets the redundancy remediation status.
</summary>
            <value>The value that indicates the remediation status for all files in the current redundant set.</value>
          </Documentation>
          <Type>
            <Identifier Name="RedundancyRemediationStatus" />
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="BinaryPropertiesId">
          <Documentation>
            <summary>
Gets the primary key of the binary properties entity that all files in the current redundant set share.
</summary>
            <value>The <see cref="IHasSimpleIdentifier.Id" /> value of the <see cref="IBinaryPropertySet" /> that all files in the current redundant set share.</value>
          </Documentation>
          <Type>
            <Identifier Name="Guid" />
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
      </Interface>
    </Namespace>
  </Source>
  <Source Path="Model\ISharedFileTag.cs" Id="e1b55abe-3851-4417-9099-7f9d9214fd1d">
    <Using Name="System" />
    <Namespace Name="FsInfoCat.Model">
      <Interface Name="ISharedFileTag" Access="public">
        <Documentation>
          <summary>
Generic interface for an <see cref="ISharedTagDefinition" /> that is associated with an <see cref="IFile" />.
</summary>
          <seealso cref="ISharedTag" />
          <seealso cref="IFileTag" />
          <seealso cref="IEquatable{ISharedFileTag}" />
          <seealso cref="IHasMembershipKeyReference{IFile, ISharedTagDefinition}" />
          <seealso cref="Local.Model.ILocalSharedFileTag" />
          <seealso cref="Upstream.Model.IUpstreamSharedFileTag" />
          <seealso cref="IFile.SharedTags" />
          <seealso cref="ISharedTagDefinition.FileTags" />
          <seealso cref="IDbContext.SharedFileTags" />
        </Documentation>
        <Implements>
          <SimpleBaseType Name="ISharedTag" />
          <SimpleBaseType Name="IFileTag" />
          <SimpleBaseType>
            <!--TODO: Need <xsl:template match="GenericName" mode="BaseTypes"></xsl:template>-->
          </SimpleBaseType>
          <SimpleBaseType>
            <!--TODO: Need <xsl:template match="GenericName" mode="BaseTypes"></xsl:template>-->
          </SimpleBaseType>
        </Implements>
      </Interface>
    </Namespace>
  </Source>
  <Source Path="Model\ISharedSubdirectoryTag.cs" Id="e5c18c13-02ff-4b85-b7cd-0d918e157351">
    <Using Name="System" />
    <Namespace Name="FsInfoCat.Model">
      <Interface Name="ISharedSubdirectoryTag" Access="public">
        <Documentation>
          <summary>
Generic interface for an <see cref="ISharedTagDefinition" /> that is associated with an <see cref="ISubdirectory" />.
</summary>
          <seealso cref="ISharedTag" />
          <seealso cref="ISubdirectoryTag" />
          <seealso cref="IEquatable{ISharedSubdirectoryTag}" />
          <seealso cref="IHasMembershipKeyReference{ISubdirectory, ISharedTagDefinition}" />
          <seealso cref="Local.Model.ILocalSharedSubdirectoryTag" />
          <seealso cref="Upstream.Model.IUpstreamSharedSubdirectoryTag" />
          <seealso cref="ISubdirectory.SharedTags" />
          <seealso cref="ISharedTagDefinition.SubdirectoryTags" />
          <seealso cref="IDbContext.SharedSubdirectoryTags" />
        </Documentation>
        <Implements>
          <SimpleBaseType Name="ISharedTag" />
          <SimpleBaseType Name="ISubdirectoryTag" />
          <SimpleBaseType>
            <!--TODO: Need <xsl:template match="GenericName" mode="BaseTypes"></xsl:template>-->
          </SimpleBaseType>
          <SimpleBaseType>
            <!--TODO: Need <xsl:template match="GenericName" mode="BaseTypes"></xsl:template>-->
          </SimpleBaseType>
        </Implements>
      </Interface>
    </Namespace>
  </Source>
  <Source Path="Model\ISharedTag.cs" Id="010432e5-b36a-423f-a27c-695832cf8add">
    <Namespace Name="FsInfoCat.Model">
      <Interface Name="ISharedTag" Access="public">
        <Documentation>
          <summary>
Generic interface for an entity that associates an <see cref="ISharedTagDefinition" /> with an <see cref="IFile" />, <see cref="ISubdirectory" /> or <see cref="IVolume" />.
</summary>
          <seealso cref="IItemTag" />
          <seealso cref="Local.Model.ILocalSharedTag" />
          <seealso cref="Upstream.Model.IUpstreamSharedTag" />
          <seealso cref="ISharedTagDefinition.FileTags" />
          <seealso cref="ISharedTagDefinition.SubdirectoryTags" />
          <seealso cref="ISharedTagDefinition.VolumeTags" />
        </Documentation>
        <Implements>
          <SimpleBaseType Name="IItemTag" />
        </Implements>
        <Property Name="Definition">
          <Documentation>
            <summary>
Gets the tag definition.
</summary>
            <value>The tag definition that is associated with the <see cref="IDbEntity" />.</value>
          </Documentation>
          <Type>
            <Identifier Name="ISharedTagDefinition" />
          </Type>
          <!--TODO: Need <xsl:template match="Modifiers" mode="Root"></xsl:template>-->
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
      </Interface>
    </Namespace>
  </Source>
  <Source Path="Model\ISharedTagDefinition.cs" Id="fe959323-1881-43be-bab8-5f47151e3fca">
    <Using Name="System" />
    <Using Name="System.Collections.Generic" />
    <Namespace Name="FsInfoCat.Model">
      <Interface Name="ISharedTagDefinition" Access="public">
        <Documentation>
          <summary>
Generic interface for a shared tag list item entity that can be associated with <see cref="IFile" />, <see cref="ISubdirectory" /> or <see cref="IVolume" /> entities.
</summary>
          <seealso cref="ITagDefinition" />
          <seealso cref="IEquatable{ISharedTagDefinition}" />
          <seealso cref="Local.Model.ILocalSharedTagDefinition" />
          <seealso cref="Upstream.Model.IUpstreamSharedTagDefinition" />
          <seealso cref="ISharedTag.Definition" />
          <seealso cref="IDbContext.SharedTagDefinitions" />
        </Documentation>
        <Implements>
          <SimpleBaseType Name="ITagDefinition" />
          <SimpleBaseType>
            <!--TODO: Need <xsl:template match="GenericName" mode="BaseTypes"></xsl:template>-->
          </SimpleBaseType>
        </Implements>
        <Property Name="FileTags">
          <Documentation>
            <summary>
Gets the file tags.
</summary>
            <value>The <see cref="ISharedFileTag" /> entities that associate <see cref="IFile" /> entities with the current entity.</value>
          </Documentation>
          <Type>
            <Generic Name="IEnumerable">
              <Identifier Name="ISharedFileTag" />
            </Generic>
          </Type>
          <!--TODO: Need <xsl:template match="Modifiers" mode="Root"></xsl:template>-->
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="SubdirectoryTags">
          <Documentation>
            <summary>
Gets the subdirectory tags.
</summary>
            <value>The <see cref="ISharedSubdirectoryTag" /> entities that associate <see cref="ISubdirectory" /> entities with the current entity.</value>
          </Documentation>
          <Type>
            <Generic Name="IEnumerable">
              <Identifier Name="ISharedSubdirectoryTag" />
            </Generic>
          </Type>
          <!--TODO: Need <xsl:template match="Modifiers" mode="Root"></xsl:template>-->
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="VolumeTags">
          <Documentation>
            <summary>
Gets the volume tags.
</summary>
            <value>The <see cref="ISharedVolumeTag" /> entities that associate <see cref="IVolume" /> entities with the current entity.</value>
          </Documentation>
          <Type>
            <Generic Name="IEnumerable">
              <Identifier Name="ISharedVolumeTag" />
            </Generic>
          </Type>
          <!--TODO: Need <xsl:template match="Modifiers" mode="Root"></xsl:template>-->
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
      </Interface>
    </Namespace>
  </Source>
  <Source Path="Model\ISharedVolumeTag.cs" Id="7086a375-46be-4c25-9091-a8eca3eab823">
    <Using Name="System" />
    <Namespace Name="FsInfoCat.Model">
      <Interface Name="ISharedVolumeTag" Access="public">
        <Documentation>
          <summary>
Generic interface for an <see cref="ISharedTagDefinition" /> that is associated with an <see cref="IVolume" />.
</summary>
          <seealso cref="ISharedTag" />
          <seealso cref="IVolumeTag" />
          <seealso cref="IEquatable{ISharedVolumeTag}" />
          <seealso cref="IHasMembershipKeyReference{IVolume, ISharedTagDefinition}" />
          <seealso cref="Local.Model.ILocalSharedVolumeTag" />
          <seealso cref="Upstream.Model.IUpstreamSharedVolumeTag" />
          <seealso cref="IVolume.SharedTags" />
          <seealso cref="ISharedTagDefinition.VolumeTags" />
          <seealso cref="IDbContext.SharedVolumeTags" />
        </Documentation>
        <Implements>
          <SimpleBaseType Name="ISharedTag" />
          <SimpleBaseType Name="IVolumeTag" />
          <SimpleBaseType>
            <!--TODO: Need <xsl:template match="GenericName" mode="BaseTypes"></xsl:template>-->
          </SimpleBaseType>
          <SimpleBaseType>
            <!--TODO: Need <xsl:template match="GenericName" mode="BaseTypes"></xsl:template>-->
          </SimpleBaseType>
        </Implements>
      </Interface>
    </Namespace>
  </Source>
  <Source Path="Model\ISubdirectory.cs" Id="9919036f-461c-4467-b7a9-7c1eeccb6c5d">
    <Using Name="System" />
    <Using Name="System.Collections.Generic" />
    <Using Name="System.ComponentModel.DataAnnotations" />
    <Namespace Name="FsInfoCat.Model">
      <Interface Name="ISubdirectory" Access="public">
        <Documentation>
          <summary>
Interface for entities that represent a subdirectory node within a file system.
</summary>
          <seealso cref="IDbFsItem" />
          <seealso cref="Local.Model.ILocalSubdirectory" />
          <seealso cref="Upstream.Model.IUpstreamSubdirectory" />
          <seealso cref="IDbFsItem.Parent" />
          <seealso cref="ISubdirectoryAccessError.Target" />
          <seealso cref="ISubdirectoryTag.Tagged" />
          <seealso cref="ICrawlConfiguration.Root" />
          <seealso cref="IDbContext.Subdirectories" />
        </Documentation>
        <Implements>
          <SimpleBaseType Name="ISubdirectoryRow" />
          <SimpleBaseType Name="IDbFsItem" />
          <SimpleBaseType>
            <!--TODO: Need <xsl:template match="GenericName" mode="BaseTypes"></xsl:template>-->
          </SimpleBaseType>
        </Implements>
        <Property Name="Parent">
          <Documentation>
            <summary>
Gets the parent subdirectory of the current file system item.
</summary>
            <value>The parent <see cref="ISubdirectory" /> of the current file system item or <see langword="null" /> if this is the root subdirectory.</value>
          </Documentation>
          <Display Name="DisplayName_Parent" ShortName="DisplayName_Parent" Description="DisplayName_Parent" />
          <Type>
            <Identifier Name="ISubdirectory" />
          </Type>
          <!--TODO: Need <xsl:template match="Modifiers" mode="Root"></xsl:template>-->
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="Volume">
          <Documentation>
            <summary>
Gets the parent volume.
</summary>
            <value>The parent volume (if this is the root subdirectory or <see langword="null" /> if this is a subdirectory.</value>
            <remarks>If this is <see langword="null" />, then <see cref="Parent" /> should not be null, and vice-versa.</remarks>
          </Documentation>
          <Display Name="DisplayName_Volume" ShortName="DisplayName_Volume" Description="DisplayName_Volume" />
          <Type>
            <Identifier Name="IVolume" />
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="CrawlConfiguration">
          <Documentation>
            <summary>
Gets the crawl configuration that starts with the current subdirectory.
</summary>
            <value>The crawl configuration that starts with the current subdirectory.</value>
          </Documentation>
          <Display Name="DisplayName_CrawlConfiguration" ShortName="DisplayName_CrawlConfiguration" Description="DisplayName_CrawlConfiguration" />
          <Type>
            <Identifier Name="ICrawlConfiguration" />
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="Files">
          <Documentation>
            <summary>
Gets the files directly contained within this subdirectory.
</summary>
            <value>The files directly contained within this subdirectory.</value>
          </Documentation>
          <Display Name="DisplayName_Files" ShortName="DisplayName_Files" Description="DisplayName_Files" />
          <Type>
            <Generic Name="IEnumerable">
              <Identifier Name="IFile" />
            </Generic>
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="SubDirectories">
          <Documentation>
            <summary>
Gets the nested subdirectories directly contained within this subdirectory.
</summary>
            <value>The nested subdirectories directly contained within this subdirectory.</value>
          </Documentation>
          <Display Name="DisplayName_SubDirectories" ShortName="DisplayName_SubDirectories" Description="DisplayName_SubDirectories" />
          <Type>
            <Generic Name="IEnumerable">
              <Identifier Name="ISubdirectory" />
            </Generic>
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="AccessErrors">
          <Documentation>
            <summary>
Gets the access errors for the current subdirectory.
</summary>
            <value>The access errors for the current subdirectory</value>
          </Documentation>
          <Display Name="DisplayName_AccessErrors" ShortName="DisplayName_AccessErrors" Description="DisplayName_AccessErrors" />
          <Type>
            <Generic Name="IEnumerable">
              <Identifier Name="ISubdirectoryAccessError" />
            </Generic>
          </Type>
          <!--TODO: Need <xsl:template match="Modifiers" mode="Root"></xsl:template>-->
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="PersonalTags">
          <Documentation>
            <summary>
Gets the personal tags associated with the current subdirectory.
</summary>
            <value>The <see cref="IPersonalSubdirectoryTag" /> entities that associate <see cref="IPersonalTagDefinition" /> entities with the current subdirectory.</value>
          </Documentation>
          <Display Name="DisplayName_PersonalTags" ShortName="DisplayName_PersonalTags" Description="DisplayName_PersonalTags" />
          <Type>
            <Generic Name="IEnumerable">
              <Identifier Name="IPersonalSubdirectoryTag" />
            </Generic>
          </Type>
          <!--TODO: Need <xsl:template match="Modifiers" mode="Root"></xsl:template>-->
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="SharedTags">
          <Documentation>
            <summary>
Gets the shared tags associated with the current subdirectory.
</summary>
            <value>The <see cref="ISharedFileTag" /> entities that associate <see cref="ISharedTagDefinition" /> entities with the current subdirectory.</value>
          </Documentation>
          <Display Name="DisplayName_SharedTags" ShortName="DisplayName_SharedTags" Description="DisplayName_SharedTags" />
          <Type>
            <Generic Name="IEnumerable">
              <Identifier Name="ISharedSubdirectoryTag" />
            </Generic>
          </Type>
          <!--TODO: Need <xsl:template match="Modifiers" mode="Root"></xsl:template>-->
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Method Name="TryGetVolumeId">
          <Documentation>
            <summary>
Attempts to get the primary key of the parent volume.
</summary>
            <param name="volumeId">The <see cref="IHasSimpleIdentifier.Id" /> of the associated <see cref="IVolume" />.</param>
            <returns>
                      <see langword="true" /> if <see cref="ISubdirectoryRow.VolumeId" /> has a foreign key value assigned; otherwise, <see langword="false" />.</returns>
          </Documentation>
          <Parameters>
            <Parameter Name="volumeId">
              <Type>
                <Identifier Name="Guid" />
              </Type>
              <!--TODO: Need <xsl:template match="Modifiers" mode="Root"></xsl:template>-->
            </Parameter>
          </Parameters>
          <ReturnType>
            <PredefinedType Keyword="bool" />
          </ReturnType>
        </Method>
      </Interface>
    </Namespace>
  </Source>
  <Source Path="Model\ISubdirectoryAccessError.cs" Id="62be1779-03fc-4d05-932c-727c0ccd7b6f">
    <Using Name="System" />
    <Using Name="System.ComponentModel.DataAnnotations" />
    <Namespace Name="FsInfoCat.Model">
      <Interface Name="ISubdirectoryAccessError" Access="public">
        <Documentation>
          <summary>
Generic interface for subdirectory access error entities.
</summary>
          <seealso cref="IAccessError" />
          <seealso cref="Local.Model.ILocalSubdirectoryAccessError" />
          <seealso cref="Upstream.Model.IUpstreamSubdirectoryAccessError" />
          <seealso cref="ISubdirectory.AccessErrors" />
          <seealso cref="IEquatable{ISubdirectoryAccessError}" />
          <seealso cref="ISubdirectory.AccessErrors" />
          <seealso cref="IDbContext.SubdirectoryAccessErrors" />
        </Documentation>
        <Implements>
          <SimpleBaseType Name="IAccessError" />
          <SimpleBaseType>
            <!--TODO: Need <xsl:template match="GenericName" mode="BaseTypes"></xsl:template>-->
          </SimpleBaseType>
        </Implements>
        <Property Name="Target">
          <Documentation>
            <summary>
Gets the target subdirectory to which the access error applies.
</summary>
            <value>The <see cref="ISubdirectory" /> entity that this error applies to.</value>
          </Documentation>
          <Display Name="DisplayName_Target" ShortName="DisplayName_Target" Description="DisplayName_Target" />
          <Type>
            <Identifier Name="ISubdirectory" />
          </Type>
          <!--TODO: Need <xsl:template match="Modifiers" mode="Root"></xsl:template>-->
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
      </Interface>
    </Namespace>
  </Source>
  <Source Path="Model\ISubdirectoryAncestorName.cs" Id="dd5ff477-2d12-4e9b-a2ff-b96e8378778f">
    <Using Name="System" />
    <Namespace Name="FsInfoCat.Model">
      <Interface Name="ISubdirectoryAncestorName" Access="public">
        <Documentation>
          <summary>
Generic interface for subdirectory entities that contain the name of a file system node and a delimited list of parent subdirectory names.
</summary>
          <seealso cref="IDbFsItemAncestorName" />
          <seealso cref="IDbContext.SubdirectoryAncestorNames" />
        </Documentation>
        <Implements>
          <SimpleBaseType Name="IDbFsItemAncestorName" />
          <SimpleBaseType>
            <!--TODO: Need <xsl:template match="GenericName" mode="BaseTypes"></xsl:template>-->
          </SimpleBaseType>
        </Implements>
        <Property Name="ParentId">
          <Documentation>
            <summary>
Gets the primary key of the parent subdirectory.
</summary>
            <value>The <see cref="IHasSimpleIdentifier.Id" /> value of the parent <see cref="ISubdirectoryRow" /> or <see langword="null" /> if there is no
parent <see cref="ISubdirectoryRow" />.</value>
          </Documentation>
          <Type>
            <!--TODO: Need <xsl:template match="NullableType" mode="Types"></xsl:template>-->
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
      </Interface>
    </Namespace>
  </Source>
  <Source Path="Model\ISubdirectoryListItem.cs" Id="2b320827-524d-4ccd-81e8-4ef830a43850">
    <Using Name="System" />
    <Namespace Name="FsInfoCat.Model">
      <Interface Name="ISubdirectoryListItem" Access="public">
        <Documentation>
          <summary>
Generic interface for a database list item entity that represents a subdirectory.
</summary>
          <seealso cref="IDbFsItemListItem" />
          <seealso cref="ISubdirectoryRow" />
          <seealso cref="IEquatable{ISubdirectoryListItem}" />
          <seealso cref="Local.Model.ILocalSubdirectoryListItem" />
          <seealso cref="Upstream.Model.IUpstreamSubdirectoryListItem" />
          <seealso cref="IDbContext.SubdirectoryListing" />
        </Documentation>
        <Implements>
          <SimpleBaseType Name="IDbFsItemListItem" />
          <SimpleBaseType Name="ISubdirectoryRow" />
          <SimpleBaseType>
            <!--TODO: Need <xsl:template match="GenericName" mode="BaseTypes"></xsl:template>-->
          </SimpleBaseType>
        </Implements>
        <Property Name="SubdirectoryCount">
          <Documentation>
            <summary>
Gets the subdirectory count.
</summary>
            <value>The number of immediate child subdirectory entities.</value>
          </Documentation>
          <Type>
            <PredefinedType Keyword="long" />
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="FileCount">
          <Documentation>
            <summary>
Gets the file count.
</summary>
            <value>The number of files directly contained within the current subdirectory.</value>
          </Documentation>
          <Type>
            <PredefinedType Keyword="long" />
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="CrawlConfigDisplayName">
          <Documentation>
            <summary>
Gets the display name of the crawl configuration using the current subdirectory and the crawl root.
</summary>
            <value>The <see cref="ICrawlConfigurationRow.DisplayName" /> of the <see cref="ICrawlConfigurationRow" /> using the current subdirectory as the
crawl <see cref="ICrawlConfiguration.Root" /> or an empty string if no crawl configuration uses the current subdirectory as its root.</value>
          </Documentation>
          <Type>
            <PredefinedType Keyword="string" />
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
      </Interface>
    </Namespace>
  </Source>
  <Source Path="Model\ISubdirectoryListItemWithAncestorNames.cs" Id="dfef01f5-7b27-48be-95a7-2f20454fe3a7">
    <Using Name="System" />
    <Namespace Name="FsInfoCat.Model">
      <Interface Name="ISubdirectoryListItemWithAncestorNames" Access="public">
        <Documentation>
          <summary>
Generic interface for a database list item entity that represents a subdirectory and contains the names of the ancestor subdirectories.
</summary>
          <seealso cref="IDbFsItemListItemWithAncestorNames" />
          <seealso cref="ISubdirectoryListItem" />
          <seealso cref="ISubdirectoryRow" />
          <seealso cref="ISubdirectoryAncestorName" />
          <seealso cref="IEquatable{ISubdirectoryListItemWithAncestorNames}" />
          <seealso cref="Local.Model.ILocalSubdirectoryListItemWithAncestorNames" />
          <seealso cref="Upstream.Model.IUpstreamSubdirectoryListItemWithAncestorNames" />
          <seealso cref="IDbContext.SubdirectoryListingWithAncestorNames" />
        </Documentation>
        <Implements>
          <SimpleBaseType Name="IDbFsItemListItemWithAncestorNames" />
          <SimpleBaseType Name="ISubdirectoryListItem" />
          <SimpleBaseType Name="ISubdirectoryRow" />
          <SimpleBaseType Name="ISubdirectoryAncestorName" />
          <SimpleBaseType>
            <!--TODO: Need <xsl:template match="GenericName" mode="BaseTypes"></xsl:template>-->
          </SimpleBaseType>
        </Implements>
      </Interface>
    </Namespace>
  </Source>
  <Source Path="Model\ISubdirectoryRow.cs" Id="bbaafeac-7fb1-4d2f-baaf-36e42e2f4ccc">
    <Using Name="System" />
    <Using Name="System.ComponentModel.DataAnnotations" />
    <Namespace Name="FsInfoCat.Model">
      <Interface Name="ISubdirectoryRow" Access="public">
        <Documentation>
          <summary>
Generic interface for a database entity that represents a subdirectory.
</summary>
          <seealso cref="IDbFsItemRow" />
          <seealso cref="Local.Model.ILocalSubdirectoryRow" />
          <seealso cref="Upstream.Model.IUpstreamSubdirectoryRow" />
        </Documentation>
        <Implements>
          <SimpleBaseType Name="IDbFsItemRow" />
        </Implements>
        <Property Name="Options">
          <Documentation>
            <summary>
Gets the crawl options for the current subdirectory.
</summary>
            <value>The crawl options for the current subdirectory.</value>
          </Documentation>
          <Display Name="DisplayName_Options" ShortName="DisplayName_Options" Description="DisplayName_Options" />
          <Type>
            <Identifier Name="DirectoryCrawlOptions" />
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="Status">
          <Documentation>
            <summary>
Gets the status of the current subdirectory.
</summary>
            <value>The status value for the current subdirectory.</value>
          </Documentation>
          <Display Name="DisplayName_Status" ShortName="DisplayName_Status" Description="DisplayName_Status" />
          <Type>
            <Identifier Name="DirectoryStatus" />
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="ParentId">
          <Documentation>
            <summary>
Gets the primary key of the parent <see cref="ISubdirectoryRow" />.
</summary>
            <value>The <see cref="IHasSimpleIdentifier.Id" /> value of the parent <see cref="ISubdirectoryRow" /> or <see langword="null" /> if this has no parent
subdirectory.</value>
            <remarks>If this is <see langword="null" />, then <see cref="VolumeId" /> should have a value.</remarks>
          </Documentation>
          <Type>
            <!--TODO: Need <xsl:template match="NullableType" mode="Types"></xsl:template>-->
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="VolumeId">
          <Documentation>
            <summary>
Gets the primary key of the parent <see cref="IVolumeRow" />.
</summary>
            <value>The <see cref="IHasSimpleIdentifier.Id" /> value of the parent <see cref="IVolumeRow" /> or <see langword="null" /> if this is a nested subdirectory.</value>
            <remarks>If this is <see langword="null" />, then <see cref="ParentId" /> should have a value.</remarks>
          </Documentation>
          <Type>
            <!--TODO: Need <xsl:template match="NullableType" mode="Types"></xsl:template>-->
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
      </Interface>
    </Namespace>
  </Source>
  <Source Path="Model\ISubdirectoryTag.cs" Id="d0c1e6d0-d7c0-432c-b599-247a3b2c6654">
    <Namespace Name="FsInfoCat.Model">
      <Interface Name="ISubdirectoryTag" Access="public">
        <Documentation>
          <summary>
Generic interface for an <see cref="ITagDefinition" /> that is associated with an <see cref="ISubdirectory" />.
</summary>
          <seealso cref="IItemTag" />
          <seealso cref="IHasMembershipKeyReference{ISubdirectory, ITagDefinition}" />
          <seealso cref="Local.Model.ILocalSubdirectoryTag" />
          <seealso cref="Upstream.Model.IUpstreamSubdirectoryTag" />
          <seealso cref="ISubdirectory.SharedTags" />
          <seealso cref="ISubdirectory.PersonalTags" />
          <seealso cref="ITagDefinition.SubdirectoryTags" />
        </Documentation>
        <Implements>
          <SimpleBaseType Name="IItemTag" />
          <SimpleBaseType>
            <!--TODO: Need <xsl:template match="GenericName" mode="BaseTypes"></xsl:template>-->
          </SimpleBaseType>
        </Implements>
        <Property Name="Tagged">
          <Documentation>
            <summary>
Gets the tagged subdirectory.
</summary>
            <value>The tagged <see cref="ISubdirectory" />.</value>
          </Documentation>
          <Type>
            <Identifier Name="ISubdirectory" />
          </Type>
          <!--TODO: Need <xsl:template match="Modifiers" mode="Root"></xsl:template>-->
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
      </Interface>
    </Namespace>
  </Source>
  <Source Path="Model\ISummaryProperties.cs" Id="be640609-1fc3-4c5c-9d7f-681cdf3c780a">
    <Using Name="FsInfoCat.Collections" />
    <Using Name="System" />
    <Using Name="System.ComponentModel.DataAnnotations" />
    <Namespace Name="FsInfoCat.Model">
      <Interface Name="ISummaryProperties" Access="public">
        <Documentation>
          <summary>
Represents extended file summary properties.
</summary>
        </Documentation>
        <Implements>
          <SimpleBaseType>
            <!--TODO: Need <xsl:template match="GenericName" mode="BaseTypes"></xsl:template>-->
          </SimpleBaseType>
        </Implements>
        <Property Name="ApplicationName">
          <Documentation>
            <summary>
Gets the Application Name.
</summary>
            <value>The name of the application that created this file or item.</value>
            <remarks>
This value should be white-space normalized and trimmed, with white-space-only converted to <see langword="null" />.
<para>Do not use version numbers to identify the application's specific version.</para><!--TODO: Need <xsl:template match="list" mode="Root"></xsl:template>--></remarks>
          </Documentation>
          <Display Name="DisplayName_ApplicationName" ShortName="DisplayName_ApplicationName" Description="DisplayName_ApplicationName" />
          <Type>
            <PredefinedType Keyword="string" />
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="Author">
          <Documentation>
            <summary>
Gets the Author.
</summary>
            <value>The author or authors of the document.</value>
            <remarks>
                      <!--TODO: Need <xsl:template match="list" mode="Root"></xsl:template>-->
                    </remarks>
          </Documentation>
          <Display Name="DisplayName_Author" ShortName="DisplayName_Author" Description="DisplayName_Author" />
          <Type>
            <Identifier Name="MultiStringValue" />
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="Comment">
          <Documentation>
            <summary>
Gets the comments.
</summary>
            <value>The comment attached to a file, typically added by a user.</value>
            <remarks>
This value should be trimmed, with white-space-only converted to <see langword="null" />.
<!--TODO: Need <xsl:template match="list" mode="Root"></xsl:template>--></remarks>
          </Documentation>
          <Display Name="DisplayName_Comment" ShortName="DisplayName_Comment" Description="DisplayName_Comment" />
          <Type>
            <PredefinedType Keyword="string" />
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="Keywords">
          <Documentation>
            <summary>
Gets the keywords for the item.
</summary>
            <value>The set of keywords (also known as "tags") assigned to the item.</value>
            <remarks>
                      <!--TODO: Need <xsl:template match="list" mode="Root"></xsl:template>-->
                    </remarks>
          </Documentation>
          <Display Name="DisplayName_Keywords" ShortName="DisplayName_Keywords" Description="DisplayName_Keywords" />
          <Type>
            <Identifier Name="MultiStringValue" />
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="Subject">
          <Documentation>
            <summary>
Gets the Subject.
</summary>
            <value>The subject of a document.</value>
            <remarks>
This value should be white-space normalized and trimmed, with white-space-only converted to <see langword="null" />.
<para>This property maps to the OLE document property Subject.</para><!--TODO: Need <xsl:template match="list" mode="Root"></xsl:template>--></remarks>
          </Documentation>
          <Display Name="DisplayName_Subject" ShortName="DisplayName_Subject" Description="DisplayName_Subject" />
          <Type>
            <PredefinedType Keyword="string" />
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="Title">
          <Documentation>
            <summary>
Gets the Title of the item.
</summary>
            <value>The title of the item.</value>
            <remarks>
This value should be white-space normalized and trimmed, with white-space-only converted to <see langword="null" />.
<!--TODO: Need <xsl:template match="list" mode="Root"></xsl:template>--></remarks>
          </Documentation>
          <Display Name="DisplayName_Title" ShortName="DisplayName_Title" Description="DisplayName_Title" />
          <Type>
            <PredefinedType Keyword="string" />
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="FileDescription">
          <Documentation>
            <summary>
Gets the user-friendly description of the file.
</summary>
            <value>A user-friendly description of the file.</value>
            <remarks>
This value should be white-space normalized and trimmed, with white-space-only converted to <see langword="null" />.
<!--TODO: Need <xsl:template match="list" mode="Root"></xsl:template>--></remarks>
          </Documentation>
          <Display Name="DisplayName_FileDescription" ShortName="DisplayName_FileDescription" Description="DisplayName_FileDescription" />
          <Type>
            <PredefinedType Keyword="string" />
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="FileVersion">
          <Documentation>
            <summary>
Gets the version of the file.
</summary>
            <value>The version of the file.</value>
            <remarks>
This value should be white-space normalized and trimmed, with white-space-only converted to <see langword="null" />.
<!--TODO: Need <xsl:template match="list" mode="Root"></xsl:template>--></remarks>
          </Documentation>
          <Display Name="DisplayName_FileVersion" ShortName="DisplayName_FileVersion" Description="DisplayName_FileVersion" />
          <Type>
            <PredefinedType Keyword="string" />
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="Company">
          <Documentation>
            <summary>
Gets the company or publisher.
</summary>
            <value>The company or publisher.</value>
            <remarks>
This value should be white-space normalized and trimmed, with white-space-only converted to <see langword="null" />.
<!--TODO: Need <xsl:template match="list" mode="Root"></xsl:template>--></remarks>
          </Documentation>
          <Display Name="DisplayName_Company" ShortName="DisplayName_Company" Description="DisplayName_Company" />
          <Type>
            <PredefinedType Keyword="string" />
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="ContentType">
          <Documentation>
            <summary>
Gets the Content Type.
</summary>
            <value>The content type.</value>
            <remarks>
This value should be white-space normalized and trimmed, with white-space-only converted to <see langword="null" />.
<!--TODO: Need <xsl:template match="list" mode="Root"></xsl:template>--></remarks>
          </Documentation>
          <Display Name="DisplayName_ContentType" ShortName="DisplayName_ContentType" Description="DisplayName_ContentType" />
          <Type>
            <PredefinedType Keyword="string" />
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="Copyright">
          <Documentation>
            <summary>
Gets the Copyright.
</summary>
            <value>The copyright information stored as a string.</value>
            <remarks>
This value should be white-space normalized and trimmed, with white-space-only converted to <see langword="null" />.
<!--TODO: Need <xsl:template match="list" mode="Root"></xsl:template>--></remarks>
          </Documentation>
          <Display Name="DisplayName_Copyright" ShortName="DisplayName_Copyright" Description="DisplayName_Copyright" />
          <Type>
            <PredefinedType Keyword="string" />
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="ParentalRating">
          <Documentation>
            <summary>
Gets the Parental Rating.
</summary>
            <value>The parental rating stored in a format typically determined by the organization named in System.ParentalRatingsOrganization.</value>
            <remarks>
This value should be white-space normalized and trimmed, with white-space-only converted to <see langword="null" />.
<!--TODO: Need <xsl:template match="list" mode="Root"></xsl:template>--></remarks>
          </Documentation>
          <Display Name="DisplayName_ParentalRating" ShortName="DisplayName_ParentalRating" Description="DisplayName_ParentalRating" />
          <Type>
            <PredefinedType Keyword="string" />
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="Rating">
          <Documentation>
            <summary>
Indicates the users preference rating of an item on a scale of 1-99
</summary>
            <value>1-12 = One Star, 13-37 = Two Stars, 38-62 = Three Stars, 63-87 = Four Stars, 88-99 = Five Stars.</value>
            <remarks>
This is the rating system used by the Windows Vista Shell.
<!--TODO: Need <xsl:template match="list" mode="Root"></xsl:template>--></remarks>
          </Documentation>
          <Display Name="DisplayName_Rating" ShortName="DisplayName_Rating" Description="DisplayName_Rating" />
          <Type>
            <!--TODO: Need <xsl:template match="NullableType" mode="Types"></xsl:template>-->
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="ItemAuthors">
          <Documentation>
            <summary>
This is the generic list of authors associated with an item.
</summary>
            <value>Generic list of authors associated with an item.</value>
            <remarks>
For example, the artist name for a music track is the item author.
<!--TODO: Need <xsl:template match="list" mode="Root"></xsl:template>--></remarks>
          </Documentation>
          <Display Name="DisplayName_ItemAuthors" ShortName="DisplayName_ItemAuthors" Description="DisplayName_ItemAuthors" />
          <Type>
            <Identifier Name="MultiStringValue" />
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="ItemType">
          <Documentation>
            <summary>
Gets the canonical item type.
</summary>
            <value>The canonical type of the item, intended to be programmatically parsed.</value>
            <remarks>
This value should be white-space normalized and trimmed, with white-space-only converted to <see langword="null" />.
<para>
    If there is no canonical type, the value is VT_EMPTY. If the item is a file (ie, System.FileName is not VT_EMPTY), the value is the same as
    System.FileExtension.Use System.ItemTypeText when you want to display the type to end users in a view. (If the item is a file, passing the System.ItemType value
    to PSFormatForDisplay will result in the same value as System.ItemTypeText.)
</para><!--TODO: Need <xsl:template match="list" mode="Root"></xsl:template>--></remarks>
          </Documentation>
          <Display Name="DisplayName_ItemType" ShortName="DisplayName_ItemType" Description="DisplayName_ItemType" />
          <Type>
            <PredefinedType Keyword="string" />
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="ItemTypeText">
          <Documentation>
            <summary>
Gets the item type name.
</summary>
            <value>This is the user friendly type name of the item.</value>
            <remarks>
This value should be trimmed, with white-space-only converted to <see langword="null" />.
<para>
    This is not intended to be programmatically parsed. If System.ItemType is VT_EMPTY, the value of this property is also VT_EMPTY.
    If the item is a file, the value of this property is the same as if you passed the file's System.ItemType value to PSFormatForDisplay.
    This property should not be confused with System.Kind, where System.Kind is a high-level user friendly kind name.
</para><!--TODO: Need <xsl:template match="list" mode="Root"></xsl:template>--></remarks>
          </Documentation>
          <Display Name="DisplayName_ItemType" ShortName="DisplayName_ItemType" Description="DisplayName_ItemType" />
          <Type>
            <PredefinedType Keyword="string" />
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="Kind">
          <Documentation>
            <summary>
Search folder extension mappings.
</summary>
            <value>System.Kind values that are used to map extensions to various Search folders.</value>
            <remarks>
Extensions are mapped to Kinds at HKEY_LOCAL_MACHINE\Software\Microsoft\Windows\CurrentVersion\Explorer\KindMap The list of kinds is not extensible.
<!--TODO: Need <xsl:template match="list" mode="Root"></xsl:template>--></remarks>
          </Documentation>
          <Display Name="DisplayName_Kind" ShortName="DisplayName_Kind" Description="DisplayName_Kind" />
          <Type>
            <Identifier Name="MultiStringValue" />
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="MIMEType">
          <Documentation>
            <summary>
Gets the MIME type.
</summary>
            <value>The MIME type.</value>
            <remarks>
This value should be white-space normalized and trimmed, with white-space-only converted to <see langword="null" />.
<para>Eg, for EML files: 'message/rfc822'.</para><!--TODO: Need <xsl:template match="list" mode="Root"></xsl:template>--></remarks>
          </Documentation>
          <Display Name="DisplayName_MIMEType" ShortName="DisplayName_MIMEType" Description="DisplayName_MIMEType" />
          <Type>
            <PredefinedType Keyword="string" />
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="ParentalRatingReason">
          <Documentation>
            <summary>
Gets the Parental Rating Reason.
</summary>
            <value>Explains file ratings.</value>
            <remarks>
This value should be trimmed, with white-space-only converted to <see langword="null" />.
<!--TODO: Need <xsl:template match="list" mode="Root"></xsl:template>--></remarks>
          </Documentation>
          <Display Name="DisplayName_ParentalRatingReason" ShortName="DisplayName_ParentalRatingReason" Description="DisplayName_ParentalRatingReason" />
          <Type>
            <PredefinedType Keyword="string" />
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="ParentalRatingsOrganization">
          <Documentation>
            <summary>
Gets the Parental Ratings Organization.
</summary>
            <value>The name of the organization whose rating system is used for System.ParentalRating.</value>
            <remarks>
This value should be white-space normalized and trimmed, with white-space-only converted to <see langword="null" />.
<para>ParentalRating.</para><!--TODO: Need <xsl:template match="list" mode="Root"></xsl:template>--></remarks>
          </Documentation>
          <Display Name="DisplayName_ParentalRatingsOrganization" ShortName="DisplayName_ParentalRatingsOrganization" Description="DisplayName_ParentalRatingsOrganization" />
          <Type>
            <PredefinedType Keyword="string" />
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="Sensitivity">
          <Documentation>
            <summary>
Gets the Sensitivity.
</summary>
            <value>The Sensitivity value.</value>
            <remarks>
                      <!--TODO: Need <xsl:template match="list" mode="Root"></xsl:template>-->
                    </remarks>
          </Documentation>
          <Display Name="DisplayName_Sensitivity" ShortName="DisplayName_Sensitivity" Description="DisplayName_Sensitivity" />
          <Type>
            <!--TODO: Need <xsl:template match="NullableType" mode="Types"></xsl:template>-->
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="SensitivityText">
          <Documentation>
            <summary>
Gets the user-friendly Sensitivity value.
</summary>
            <value>The user-friendly form of System.Sensitivity.</value>
            <remarks>
This value should be trimmed, with white-space-only converted to <see langword="null" />.
<para>This value is not intended to be parsed programmatically.</para><!--TODO: Need <xsl:template match="list" mode="Root"></xsl:template>--></remarks>
          </Documentation>
          <Display Name="DisplayName_Sensitivity" ShortName="DisplayName_Sensitivity" Description="DisplayName_Sensitivity" />
          <Type>
            <PredefinedType Keyword="string" />
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="SimpleRating">
          <Documentation>
            <summary>
Indicates the users preference rating of an item on a scale of 0-5
</summary>
            <value>0=unrated, 1=One Star, 2=Two Stars, 3=Three Stars, 4=Four Stars, 5=Five Stars</value>
            <remarks>
                      <!--TODO: Need <xsl:template match="list" mode="Root"></xsl:template>-->
                    </remarks>
          </Documentation>
          <Display Name="DisplayName_SimpleRating" ShortName="DisplayName_SimpleRating" Description="DisplayName_SimpleRating" />
          <Type>
            <!--TODO: Need <xsl:template match="NullableType" mode="Types"></xsl:template>-->
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="Trademarks">
          <Documentation>
            <summary>
Gets the Legal Trademarks.
</summary>
            <value>The trademark associated with the item, in a string format.</value>
            <remarks>
This value should be trimmed, with white-space-only converted to <see langword="null" />.
<!--TODO: Need <xsl:template match="list" mode="Root"></xsl:template>--></remarks>
          </Documentation>
          <Display Name="DisplayName_Trademarks" ShortName="DisplayName_Trademarks" Description="DisplayName_Trademarks" />
          <Type>
            <PredefinedType Keyword="string" />
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="ProductName">
          <Documentation>
            <summary>
Gets the Product Name.
</summary>
            <value>The product name.</value>
            <remarks>
This value should be white-space normalized and trimmed, with white-space-only converted to <see langword="null" />.
<!--TODO: Need <xsl:template match="list" mode="Root"></xsl:template>--></remarks>
          </Documentation>
          <Display Name="DisplayName_ProductName" ShortName="DisplayName_ProductName" Description="DisplayName_ProductName" />
          <Type>
            <PredefinedType Keyword="string" />
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
      </Interface>
    </Namespace>
  </Source>
  <Source Path="Model\ISummaryPropertiesListItem.cs" Id="7e3f0cce-9fbe-461c-9029-6ab2e71e81d8">
    <Using Name="System" />
    <Namespace Name="FsInfoCat.Model">
      <Interface Name="ISummaryPropertiesListItem" Access="public">
        <Documentation>
          <summary>
Generic interface for entities containing extended file summary properties.
</summary>
          <seealso cref="IPropertiesListItem" />
          <seealso cref="ISummaryPropertiesRow" />
          <seealso cref="ISummaryPropertySet" />
          <seealso cref="IEquatable{ISummaryPropertiesListItem}" />
          <seealso cref="Local.Model.ILocalSummaryPropertiesListItem" />
          <seealso cref="Upstream.Model.IUpstreamSummaryPropertiesListItem" />
          <seealso cref="IDbContext.SummaryPropertiesListing" />
        </Documentation>
        <Implements>
          <SimpleBaseType Name="IPropertiesListItem" />
          <SimpleBaseType Name="ISummaryPropertiesRow" />
          <SimpleBaseType>
            <!--TODO: Need <xsl:template match="GenericName" mode="BaseTypes"></xsl:template>-->
          </SimpleBaseType>
        </Implements>
      </Interface>
    </Namespace>
  </Source>
  <Source Path="Model\ISummaryPropertiesRow.cs" Id="47e04889-6b0d-49a4-8708-1640354559a1">
    <Using Name="System" />
    <Namespace Name="FsInfoCat.Model">
      <Interface Name="ISummaryPropertiesRow" Access="public">
        <Documentation>
          <summary>
Generic interface for entities containing extended file summary properties.
</summary>
          <seealso cref="IPropertiesRow" />
          <seealso cref="ISummaryProperties" />
          <seealso cref="IEquatable{ISummaryPropertiesRow}" />
          <seealso cref="Local.Model.ILocalSummaryPropertiesRow" />
          <seealso cref="Upstream.Model.IUpstreamSummaryPropertiesRow" />
        </Documentation>
        <Implements>
          <SimpleBaseType Name="IPropertiesRow" />
          <SimpleBaseType Name="ISummaryProperties" />
          <SimpleBaseType>
            <!--TODO: Need <xsl:template match="GenericName" mode="BaseTypes"></xsl:template>-->
          </SimpleBaseType>
        </Implements>
      </Interface>
    </Namespace>
  </Source>
  <Source Path="Model\ISummaryPropertySet.cs" Id="c9be4551-8335-454a-8b28-4cfe43ef6d3f">
    <Using Name="System" />
    <Namespace Name="FsInfoCat.Model">
      <Interface Name="ISummaryPropertySet" Access="public">
        <Documentation>
          <summary>
Interface for database objects that contain extended file summary property values.
</summary>
          <seealso cref="IPropertySet" />
          <seealso cref="ISummaryProperties" />
          <seealso cref="Local.Model.ILocalSummaryPropertySet" />
          <seealso cref="Upstream.Model.IUpstreamSummaryPropertySet" />
          <seealso cref="IFile.SummaryProperties" />
          <seealso cref="IDbContext.SummaryPropertySets" />
        </Documentation>
        <Implements>
          <SimpleBaseType Name="IPropertySet" />
          <SimpleBaseType Name="ISummaryPropertiesRow" />
          <SimpleBaseType>
            <!--TODO: Need <xsl:template match="GenericName" mode="BaseTypes"></xsl:template>-->
          </SimpleBaseType>
        </Implements>
      </Interface>
    </Namespace>
  </Source>
  <Source Path="Model\ISymbolicName.cs" Id="a45793e7-1f86-4ce1-bb66-16aeee5c35e3">
    <Using Name="System" />
    <Using Name="System.ComponentModel.DataAnnotations" />
    <Namespace Name="FsInfoCat.Model">
      <Interface Name="ISymbolicName" Access="public">
        <Documentation>
          <summary>
Interface for entities that represent a symbolic name for a file system type.
</summary>
          <seealso cref="IDbEntity" />
          <seealso cref="Local.Model.ILocalSymbolicName" />
          <seealso cref="Upstream.Model.IUpstreamSymbolicName" />
          <seealso cref="IFileSystem.SymbolicNames" />
          <seealso cref="IDbContext.SymbolicNames" />
        </Documentation>
        <Implements>
          <SimpleBaseType Name="ISymbolicNameRow" />
          <SimpleBaseType>
            <!--TODO: Need <xsl:template match="GenericName" mode="BaseTypes"></xsl:template>-->
          </SimpleBaseType>
        </Implements>
        <Property Name="FileSystem">
          <Documentation>
            <summary>
Gets the file system that this symbolic name refers to.
</summary>
            <value>The file system entity that represents the file system type that this symbolic name refers to.</value>
          </Documentation>
          <Display Name="DisplayName_FileSystem" ShortName="DisplayName_FileSystem" Description="DisplayName_FileSystem" />
          <Type>
            <Identifier Name="IFileSystem" />
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Method Name="TryGetFileSystemId">
          <Documentation>
            <summary>
Attempts to get the primary key of the associated filesystem.
</summary>
            <param name="fileSystemId">The <see cref="IHasSimpleIdentifier.Id" /> of the associated <see cref="IFileSystem" />.</param>
            <returns>
                      <see langword="true" /> if <see cref="ISymbolicNameRow.FileSystemId" /> has a foreign key value assigned; otherwise, <see langword="false" />.</returns>
            <returns>
                      <!--TODO: Need <xsl:template match="c" mode="Root"></xsl:template>--> if XXXX, <!--TODO: Need <xsl:template match="c" mode="Root"></xsl:template>--> otherwise.</returns>
          </Documentation>
          <Parameters>
            <Parameter Name="fileSystemId">
              <Type>
                <Identifier Name="Guid" />
              </Type>
              <!--TODO: Need <xsl:template match="Modifiers" mode="Root"></xsl:template>-->
            </Parameter>
          </Parameters>
          <ReturnType>
            <PredefinedType Keyword="bool" />
          </ReturnType>
        </Method>
      </Interface>
    </Namespace>
  </Source>
  <Source Path="Model\ISymbolicNameListItem.cs" Id="9ddf740f-0f2f-4110-b308-95e4a70a08f4">
    <Using Name="System" />
    <Namespace Name="FsInfoCat.Model">
      <Interface Name="ISymbolicNameListItem" Access="public">
        <Documentation>
          <summary>
Generic interface for a list item entity representing a filesystem symbolic name.
</summary>
          <seealso cref="ISymbolicNameRow" />
          <seealso cref="IEquatable{ISymbolicNameListItem}" />
          <seealso cref="Local.Model.ILocalSymbolicNameListItem" />
          <seealso cref="Upstream.Model.IUpstreamSymbolicNameListItem" />
          <seealso cref="IDbContext.SymbolicNameListing" />
        </Documentation>
        <Implements>
          <SimpleBaseType Name="ISymbolicNameRow" />
          <SimpleBaseType>
            <!--TODO: Need <xsl:template match="GenericName" mode="BaseTypes"></xsl:template>-->
          </SimpleBaseType>
        </Implements>
        <Property Name="FileSystemDisplayName">
          <Documentation>
            <summary>
Gets the display name of the associated filesystem.
</summary>
            <value>The <see cref="IFileSystemProperties.DisplayName" /> of the associated <see cref="IFileSystemRow" />.</value>
          </Documentation>
          <Type>
            <PredefinedType Keyword="string" />
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
      </Interface>
    </Namespace>
  </Source>
  <Source Path="Model\ISymbolicNameRow.cs" Id="134a5982-b153-41af-b536-65925d8d869d">
    <Using Name="System" />
    <Using Name="System.ComponentModel.DataAnnotations" />
    <Namespace Name="FsInfoCat.Model">
      <Interface Name="ISymbolicNameRow" Access="public">
        <Documentation>
          <summary>
Generic interface for an entity representing a filesystem symbolic name.
</summary>
          <seealso cref="IDbEntity" />
          <seealso cref="IHasSimpleIdentifier" />
          <seealso cref="Local.Model.ILocalSymbolicNameRow" />
          <seealso cref="Upstream.Model.IUpstreamSymbolicNameRow" />
        </Documentation>
        <Implements>
          <SimpleBaseType Name="IDbEntity" />
          <SimpleBaseType Name="IHasSimpleIdentifier" />
        </Implements>
        <Property Name="Name">
          <Documentation>
            <summary>
Gets the symbolic name.
</summary>
            <value>The symbolic name which refers to a file system type.</value>
          </Documentation>
          <Display Name="DisplayName_Name" ShortName="DisplayName_Name" Description="DisplayName_Name" />
          <Type>
            <PredefinedType Keyword="string" />
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="Notes">
          <Documentation>
            <summary>
Gets the custom notes for the current symbolic name.
</summary>
            <value>The custom notes to associate with the current symblic name.</value>
          </Documentation>
          <Display Name="DisplayName_Notes" ShortName="DisplayName_Notes" Description="DisplayName_Notes" />
          <Type>
            <PredefinedType Keyword="string" />
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="Priority">
          <Documentation>
            <summary>
Gets the priority for this symbolic name.
</summary>
            <value>The priority of this symbolic name in relation to other symbolic names that refer to the same file system type, with lower values being higher priority.</value>
          </Documentation>
          <Display Name="DisplayName_Priority" ShortName="DisplayName_Priority" Description="DisplayName_Priority" />
          <Type>
            <PredefinedType Keyword="int" />
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="IsInactive">
          <Documentation>
            <summary>
Gets a value indicating whether this symbolic name is inactive.
</summary>
            <value>
                      <see langword="true" /> if this symbolic name  is inactive; otherwise, <see langword="false" />.</value>
          </Documentation>
          <Display Name="DisplayName_IsInactive" ShortName="DisplayName_IsInactive" Description="DisplayName_IsInactive" />
          <Type>
            <PredefinedType Keyword="bool" />
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="FileSystemId">
          <Documentation>
            <summary>
Gets the primary key of the associated filesystem.
</summary>
            <value>The <see cref="IHasSimpleIdentifier.Id" /> value of the associated <see cref="IFileSystem" />.</value>
          </Documentation>
          <Type>
            <Identifier Name="Guid" />
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
      </Interface>
    </Namespace>
  </Source>
  <Source Path="Model\ITagDefinition.cs" Id="3eedbc2b-7f90-486c-91ee-8b9223d2f662">
    <Using Name="System" />
    <Using Name="System.Collections.Generic" />
    <Namespace Name="FsInfoCat.Model">
      <Interface Name="ITagDefinition" Access="public">
        <Documentation>
          <summary>
Generic interface for a tag entity that can be associated with <see cref="IFile" />, <see cref="ISubdirectory" /> or <see cref="IVolume" /> entities.
</summary>
          <seealso cref="ITagDefinitionRow" />
          <seealso cref="Local.Model.ILocalTagDefinition" />
          <seealso cref="Upstream.Model.IUpstreamTagDefinition" />
          <seealso cref="IItemTag.Definition" />
        </Documentation>
        <Implements>
          <SimpleBaseType Name="ITagDefinitionRow" />
          <SimpleBaseType>
            <!--TODO: Need <xsl:template match="GenericName" mode="BaseTypes"></xsl:template>-->
          </SimpleBaseType>
        </Implements>
        <Property Name="FileTags">
          <Documentation>
            <summary>
Gets the file tags.
</summary>
            <value>The <see cref="IFileTag" /> entities that associate <see cref="IFile" /> entities with the current entity.</value>
          </Documentation>
          <Type>
            <Generic Name="IEnumerable">
              <Identifier Name="IFileTag" />
            </Generic>
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="SubdirectoryTags">
          <Documentation>
            <summary>
Gets the subdirectory tags.
</summary>
            <value>The <see cref="ISubdirectoryTag" /> entities that associate <see cref="ISubdirectory" /> entities with the current entity.</value>
          </Documentation>
          <Type>
            <Generic Name="IEnumerable">
              <Identifier Name="ISubdirectoryTag" />
            </Generic>
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="VolumeTags">
          <Documentation>
            <summary>
Gets the volume tags.
</summary>
            <value>The <see cref="IVolumeTag" /> entities that associate <see cref="IVolume" /> entities with the current entity.</value>
          </Documentation>
          <Type>
            <Generic Name="IEnumerable">
              <Identifier Name="IVolumeTag" />
            </Generic>
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
      </Interface>
    </Namespace>
  </Source>
  <Source Path="Model\ITagDefinitionListItem.cs" Id="ffa188a7-c92a-4dbb-9ac1-6ea43d26e567">
    <Using Name="System" />
    <Namespace Name="FsInfoCat.Model">
      <Interface Name="ITagDefinitionListItem" Access="public">
        <Documentation>
          <summary>
Generic interface for a tag list item entity that can be associated with <see cref="IFile" />, <see cref="ISubdirectory" /> or <see cref="IVolume" /> entities.
</summary>
          <seealso cref="ITagDefinitionRow" />
          <seealso cref="IEquatable{ITagDefinitionListItem}" />
          <seealso cref="Local.Model.ILocalTagDefinitionListItem" />
          <seealso cref="Upstream.Model.IUpstreamTagDefinitionListItem" />
          <seealso cref="IDbContext.PersonalTagDefinitionListing" />
          <seealso cref="IDbContext.SharedTagDefinitionListing" />
        </Documentation>
        <Implements>
          <SimpleBaseType Name="ITagDefinitionRow" />
          <SimpleBaseType>
            <!--TODO: Need <xsl:template match="GenericName" mode="BaseTypes"></xsl:template>-->
          </SimpleBaseType>
        </Implements>
        <Property Name="FileTagCount">
          <Documentation>
            <summary>
Gets the tag file count.
</summary>
            <value>The number of <see cref="IFile" /> entities associated with the current tag.</value>
          </Documentation>
          <Type>
            <PredefinedType Keyword="long" />
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="SubdirectoryTagCount">
          <Documentation>
            <summary>
Gets the tagged subdirectory count.
</summary>
            <value>The number of <see cref="ISubdirectory" /> entities associated with the current tag.</value>
          </Documentation>
          <Type>
            <PredefinedType Keyword="long" />
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="VolumeTagCount">
          <Documentation>
            <summary>
Gets the tagged volume count.
</summary>
            <value>The number of <see cref="IVolume" /> entities associated with the current tag.</value>
          </Documentation>
          <Type>
            <PredefinedType Keyword="long" />
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
      </Interface>
    </Namespace>
  </Source>
  <Source Path="Model\ITagDefinitionRow.cs" Id="67be4886-1bef-4e9d-8104-a852d315c1f9">
    <Using Name="System.ComponentModel.DataAnnotations" />
    <Namespace Name="FsInfoCat.Model">
      <Interface Name="ITagDefinitionRow" Access="public">
        <Documentation>
          <summary>
Generic interface for a tag entity that can be associated with <see cref="IFile" />, <see cref="ISubdirectory" /> or <see cref="IVolume" /> entities.
</summary>
          <seealso cref="IDbEntity" />
          <seealso cref="IHasSimpleIdentifier" />
          <seealso cref="Local.Model.ILocalTagDefinitionRow" />
          <seealso cref="Upstream.Model.IUpstreamTagDefinitionRow" />
        </Documentation>
        <Implements>
          <SimpleBaseType Name="IDbEntity" />
          <SimpleBaseType Name="IHasSimpleIdentifier" />
        </Implements>
        <Property Name="Name">
          <Documentation>
            <summary>
Gets the name of item tag.
</summary>
            <value>The name of the current file system item.</value>
          </Documentation>
          <Display Name="DisplayName_Name" ShortName="DisplayName_Name" Description="DisplayName_Name" />
          <Type>
            <PredefinedType Keyword="string" />
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="Description">
          <Documentation>
            <summary>
Gets the description of the current tag.
</summary>
            <value>The custom description of the current tag.</value>
          </Documentation>
          <Display Name="DisplayName_Description" ShortName="DisplayName_Description" Description="DisplayName_Description" />
          <Type>
            <PredefinedType Keyword="string" />
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="IsInactive">
          <Documentation>
            <summary>
Gets a value indicating whether the tag is inactive (archived).
</summary>
            <value>
                      <see langword="true" /> if the curren tag is inactive; otherwise, <see langword="false" />.</value>
          </Documentation>
          <Display Name="DisplayName_Description" ShortName="DisplayName_Description" Description="DisplayName_Description" />
          <Type>
            <PredefinedType Keyword="bool" />
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
      </Interface>
    </Namespace>
  </Source>
  <Source Path="Model\IVideoProperties.cs" Id="29d5f6d8-83e6-4d96-8965-555845dc6336">
    <Using Name="FsInfoCat.Collections" />
    <Using Name="System" />
    <Using Name="System.ComponentModel.DataAnnotations" />
    <Namespace Name="FsInfoCat.Model">
      <Interface Name="IVideoProperties" Access="public">
        <Documentation>
          <summary>
Represents extended file properties for video files.
</summary>
        </Documentation>
        <!--TODO: Need <xsl:template match="Attribute[@Name='EntityInterface']" mode="Root" />-->
        <Implements>
          <SimpleBaseType>
            <!--TODO: Need <xsl:template match="GenericName" mode="BaseTypes"></xsl:template>-->
          </SimpleBaseType>
        </Implements>
        <Property Name="Compression">
          <Documentation>
            <summary>
Indicates the level of compression for the video stream.
</summary>
            <value>Specifies the video compression format.</value>
            <remarks>
This value should be white-space normalized and trimmed, with white-space-only converted to <see langword="null" />.
<!--TODO: Need <xsl:template match="list" mode="Root"></xsl:template>--></remarks>
          </Documentation>
          <Display Name="DisplayName_Compression" ShortName="DisplayName_Compression" Description="DisplayName_Compression" />
          <Type>
            <PredefinedType Keyword="string" />
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="Director">
          <Documentation>
            <summary>
Gets the Director.
</summary>
            <value>Indicates the person who directed the video.</value>
            <remarks>
                      <!--TODO: Need <xsl:template match="list" mode="Root"></xsl:template>-->
                    </remarks>
          </Documentation>
          <Display Name="DisplayName_Director" ShortName="DisplayName_Director" Description="DisplayName_Director" />
          <Type>
            <Identifier Name="MultiStringValue" />
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="EncodingBitrate">
          <Documentation>
            <summary>
Indicates the data rate in "bits per second" for the video stream.
</summary>
            <value>Indicates the data rate in "bits per second" for the video stream.</value>
            <remarks>
"DataRate".
<!--TODO: Need <xsl:template match="list" mode="Root"></xsl:template>--></remarks>
          </Documentation>
          <Display Name="DisplayName_EncodingBitrate" ShortName="DisplayName_EncodingBitrate" Description="DisplayName_EncodingBitrate" />
          <Type>
            <!--TODO: Need <xsl:template match="NullableType" mode="Types"></xsl:template>-->
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="FrameHeight">
          <Documentation>
            <summary>
Indicates the frame height for the video stream.
</summary>
            <value>Indicates the frame height for the video stream.</value>
            <remarks>
                      <!--TODO: Need <xsl:template match="list" mode="Root"></xsl:template>-->
                    </remarks>
          </Documentation>
          <Display Name="DisplayName_FrameHeight" ShortName="DisplayName_FrameHeight" Description="DisplayName_FrameHeight" />
          <Type>
            <!--TODO: Need <xsl:template match="NullableType" mode="Types"></xsl:template>-->
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="FrameRate">
          <Documentation>
            <summary>
Indicates the frame rate in "frames per millisecond" for the video stream.
</summary>
            <value>Indicates the frame rate for the video stream, in frames per 1000 seconds.</value>
            <remarks>
                      <!--TODO: Need <xsl:template match="list" mode="Root"></xsl:template>-->
                    </remarks>
          </Documentation>
          <Display Name="DisplayName_FrameRate" ShortName="DisplayName_FrameRate" Description="DisplayName_FrameRate" />
          <Type>
            <!--TODO: Need <xsl:template match="NullableType" mode="Types"></xsl:template>-->
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="FrameWidth">
          <Documentation>
            <summary>
Indicates the frame width for the video stream.
</summary>
            <value>Indicates the frame width for the video stream.</value>
            <remarks>
                      <!--TODO: Need <xsl:template match="list" mode="Root"></xsl:template>-->
                    </remarks>
          </Documentation>
          <Display Name="DisplayName_FrameWidth" ShortName="DisplayName_FrameWidth" Description="DisplayName_FrameWidth" />
          <Type>
            <!--TODO: Need <xsl:template match="NullableType" mode="Types"></xsl:template>-->
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="HorizontalAspectRatio">
          <Documentation>
            <summary>
Indicates the horizontal portion of the aspect ratio.
</summary>
            <value>The X portion of XX:YY, like 16:9.</value>
            <remarks>
Indicates the horizontal portion of the pixel aspect ratio. The X portion of XX:YY. For example, 10 is the X portion of 10:11.
<!--TODO: Need <xsl:template match="list" mode="Root"></xsl:template>--></remarks>
          </Documentation>
          <Display Name="DisplayName_HorizontalAspectRatio" ShortName="DisplayName_HorizontalAspectRatio" Description="DisplayName_HorizontalAspectRatio" />
          <Type>
            <!--TODO: Need <xsl:template match="NullableType" mode="Types"></xsl:template>-->
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="StreamNumber">
          <Documentation>
            <summary>
Gets the Stream Number.
</summary>
            <value>Indicates the ordinal number of the stream being played.</value>
            <remarks>
                      <!--TODO: Need <xsl:template match="list" mode="Root"></xsl:template>-->
                    </remarks>
          </Documentation>
          <Display Name="DisplayName_StreamNumber" ShortName="DisplayName_StreamNumber" Description="DisplayName_StreamNumber" />
          <Type>
            <!--TODO: Need <xsl:template match="NullableType" mode="Types"></xsl:template>-->
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="StreamName">
          <Documentation>
            <summary>
Gets the name for the video stream..
</summary>
            <value>The name for the video stream.</value>
            <remarks>
This value should be white-space normalized and trimmed, with white-space-only converted to <see langword="null" />.
<!--TODO: Need <xsl:template match="list" mode="Root"></xsl:template>--></remarks>
          </Documentation>
          <Display Name="DisplayName_StreamName" ShortName="DisplayName_StreamName" Description="DisplayName_StreamName" />
          <Type>
            <PredefinedType Keyword="string" />
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="VerticalAspectRatio">
          <Documentation>
            <summary>
Indicates the vertical portion of the aspect ratio.
</summary>
            <value>The Y portion of XX:YY, like 16:9.</value>
            <remarks>
Indicates the horizontal portion of the pixel aspect ratio. The Y portion of XX:YY. For example, 11 is the Y portion of 10:11 .
<!--TODO: Need <xsl:template match="list" mode="Root"></xsl:template>--></remarks>
          </Documentation>
          <Display Name="DisplayName_VerticalAspectRatio" ShortName="DisplayName_VerticalAspectRatio" Description="DisplayName_VerticalAspectRatio" />
          <Type>
            <!--TODO: Need <xsl:template match="NullableType" mode="Types"></xsl:template>-->
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
      </Interface>
    </Namespace>
  </Source>
  <Source Path="Model\IVideoPropertiesListItem.cs" Id="ec200f32-7e6a-4be9-b07c-463197e395b0">
    <Using Name="System" />
    <Namespace Name="FsInfoCat.Model">
      <Interface Name="IVideoPropertiesListItem" Access="public">
        <Documentation>
          <summary>
Generic interface for list item entities containing extended file properties for video files.
</summary>
          <seealso cref="IPropertiesListItem" />
          <seealso cref="IVideoPropertiesRow" />
          <seealso cref="IVideoPropertySet" />
          <seealso cref="IEquatable{IVideoPropertiesListItem}" />
          <seealso cref="Local.Model.ILocalVideoPropertiesListItem" />
          <seealso cref="Upstream.Model.IUpstreamVideoPropertiesListItem" />
          <seealso cref="IDbContext.VideoPropertiesListing" />
        </Documentation>
        <Implements>
          <SimpleBaseType Name="IPropertiesListItem" />
          <SimpleBaseType Name="IVideoPropertiesRow" />
          <SimpleBaseType>
            <!--TODO: Need <xsl:template match="GenericName" mode="BaseTypes"></xsl:template>-->
          </SimpleBaseType>
        </Implements>
      </Interface>
    </Namespace>
  </Source>
  <Source Path="Model\IVideoPropertiesRow.cs" Id="3e919d2f-b0cd-46d4-baf8-225c87f8dde7">
    <Using Name="System" />
    <Namespace Name="FsInfoCat.Model">
      <Interface Name="IVideoPropertiesRow" Access="public">
        <Documentation>
          <summary>
Generic interface for entities containing extended file properties for video files.
</summary>
          <seealso cref="IPropertiesRow" />
          <seealso cref="IVideoProperties" />
          <seealso cref="IEquatable{IVideoPropertiesRow}" />
          <seealso cref="Local.Model.ILocalVideoPropertiesRow" />
          <seealso cref="Upstream.Model.IUpstreamVideoPropertiesRow" />
        </Documentation>
        <Implements>
          <SimpleBaseType Name="IPropertiesRow" />
          <SimpleBaseType Name="IVideoProperties" />
          <SimpleBaseType>
            <!--TODO: Need <xsl:template match="GenericName" mode="BaseTypes"></xsl:template>-->
          </SimpleBaseType>
        </Implements>
      </Interface>
    </Namespace>
  </Source>
  <Source Path="Model\IVideoPropertySet.cs" Id="95521f9e-ce00-4247-834a-4ce44f601f93">
    <Using Name="System" />
    <Namespace Name="FsInfoCat.Model">
      <Interface Name="IVideoPropertySet" Access="public">
        <Documentation>
          <summary>
Interface for database objects that contain extended file property values of video files.
</summary>
          <seealso cref="IPropertySet" />
          <seealso cref="IVideoProperties" />
          <seealso cref="Local.Model.ILocalVideoPropertySet" />
          <seealso cref="Upstream.Model.IUpstreamVideoPropertySet" />
          <seealso cref="IFile.VideoProperties" />
          <seealso cref="IDbContext.VideoPropertySets" />
        </Documentation>
        <Implements>
          <SimpleBaseType Name="IPropertySet" />
          <SimpleBaseType Name="IVideoPropertiesRow" />
          <SimpleBaseType>
            <!--TODO: Need <xsl:template match="GenericName" mode="BaseTypes"></xsl:template>-->
          </SimpleBaseType>
        </Implements>
      </Interface>
    </Namespace>
  </Source>
  <Source Path="Model\IVolume.cs" Id="175771a8-ba55-4b72-9848-629c3f42392b">
    <Using Name="System" />
    <Using Name="System.Collections.Generic" />
    <Using Name="System.ComponentModel.DataAnnotations" />
    <Namespace Name="FsInfoCat.Model">
      <Interface Name="IVolume" Access="public">
        <Documentation>
          <summary>
Interface for entities which represent a logical file system volume.
</summary>
          <seealso cref="IDbEntity" />
          <seealso cref="Local.Model.ILocalVolume" />
          <seealso cref="Upstream.Model.IUpstreamVolume" />
          <seealso cref="IVolumeAccessError.Target" />
          <seealso cref="IVolumeTag.Tagged" />
          <seealso cref="IFileSystem.Volumes" />
          <seealso cref="IDbContext.Volumes" />
        </Documentation>
        <Implements>
          <SimpleBaseType Name="IVolumeRow" />
          <SimpleBaseType>
            <!--TODO: Need <xsl:template match="GenericName" mode="BaseTypes"></xsl:template>-->
          </SimpleBaseType>
        </Implements>
        <Property Name="FileSystem">
          <Documentation>
            <summary>
Gets the file system type.
</summary>
            <value>The file system type for this volume.</value>
          </Documentation>
          <Display Name="DisplayName_FileSystem" ShortName="DisplayName_FileSystem" Description="DisplayName_FileSystem" />
          <Type>
            <Identifier Name="IFileSystem" />
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="RootDirectory">
          <Documentation>
            <summary>
Gets the root directory of this volume.
</summary>
            <value>The root directory of this volume.</value>
          </Documentation>
          <Display Name="DisplayName_RootDirectory" ShortName="DisplayName_RootDirectory" Description="DisplayName_RootDirectory" />
          <Type>
            <Identifier Name="ISubdirectory" />
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="AccessErrors">
          <Documentation>
            <summary>
Gets the access errors for the current file system item.
</summary>
            <value>The access errors for the current file system item.</value>
          </Documentation>
          <Display Name="DisplayName_AccessErrors" ShortName="DisplayName_AccessErrors" Description="DisplayName_AccessErrors" />
          <Type>
            <Generic Name="IEnumerable">
              <Identifier Name="IVolumeAccessError" />
            </Generic>
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="PersonalTags">
          <Documentation>
            <summary>
Gets the personal tags associated with the current volume.
</summary>
            <value>The <see cref="IPersonalVolumeTag" /> entities that associate <see cref="IPersonalTagDefinition" /> entities with the current volume.</value>
          </Documentation>
          <Type>
            <Generic Name="IEnumerable">
              <Identifier Name="IPersonalVolumeTag" />
            </Generic>
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="SharedTags">
          <Documentation>
            <summary>
Gets the shared tags associated with the current volume.
</summary>
            <value>The <see cref="ISharedVolumeTag" /> entities that associate <see cref="ISharedTagDefinition" /> entities with the current volume.</value>
          </Documentation>
          <Type>
            <Generic Name="IEnumerable">
              <Identifier Name="ISharedVolumeTag" />
            </Generic>
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Method Name="TryGetFileSystemId">
          <Documentation>
            <summary>
Attempts to get the primary key of the associated filesystem.
</summary>
            <param name="fileSystemId">The <see cref="IHasSimpleIdentifier.Id" /> of the associated <see cref="IFileSystem" />.</param>
            <returns>
                      <see langword="true" /> if <see cref="IVolumeRow.FileSystemId" /> has a foreign key value assigned; otherwise, <see langword="false" />.</returns>
          </Documentation>
          <Parameters>
            <Parameter Name="fileSystemId">
              <Type>
                <Identifier Name="Guid" />
              </Type>
              <!--TODO: Need <xsl:template match="Modifiers" mode="Root"></xsl:template>-->
            </Parameter>
          </Parameters>
          <ReturnType>
            <PredefinedType Keyword="bool" />
          </ReturnType>
        </Method>
      </Interface>
    </Namespace>
  </Source>
  <Source Path="Model\IVolumeAccessError.cs" Id="0f028c2c-cf7f-478c-a8f1-0d3ebb4da6d5">
    <Using Name="System" />
    <Using Name="System.ComponentModel.DataAnnotations" />
    <Namespace Name="FsInfoCat.Model">
      <Interface Name="IVolumeAccessError" Access="public">
        <Documentation>
          <summary>
Generic interface for volume access error entities.
</summary>
          <seealso cref="IAccessError" />
          <seealso cref="Local.Model.ILocalVolumeAccessError" />
          <seealso cref="Upstream.Model.IUpstreamVolumeAccessError" />
          <seealso cref="IEquatable{IVolumeAccessError}" />
          <seealso cref="Local.Model.ILocalVolumeAccessError" />
          <seealso cref="Upstream.Model.IUpstreamVolumeAccessError" />
          <seealso cref="IVolume.AccessErrors" />
          <seealso cref="IDbContext.VolumeAccessErrors" />
        </Documentation>
        <Implements>
          <SimpleBaseType Name="IAccessError" />
          <SimpleBaseType>
            <!--TODO: Need <xsl:template match="GenericName" mode="BaseTypes"></xsl:template>-->
          </SimpleBaseType>
        </Implements>
        <Property Name="Target">
          <Documentation>
            <summary>
Gets the target volume to which the access error applies.
</summary>
            <value>The <see cref="IVolume" /> entity that this error applies to.</value>
          </Documentation>
          <Display Name="DisplayName_Target" ShortName="DisplayName_Target" Description="DisplayName_Target" />
          <Type>
            <Identifier Name="IVolume" />
          </Type>
          <!--TODO: Need <xsl:template match="Modifiers" mode="Root"></xsl:template>-->
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
      </Interface>
    </Namespace>
  </Source>
  <Source Path="Model\IVolumeListItem.cs" Id="bce18575-061a-4d52-86c9-b46132bbd79c">
    <Using Name="System" />
    <Namespace Name="FsInfoCat.Model">
      <Interface Name="IVolumeListItem" Access="public">
        <Documentation>
          <summary>
Generic interface for list item entities which represent a logical file system volume.
</summary>
          <seealso cref="IVolumeRow" />
          <seealso cref="IEquatable{IVolumeListItem}" />
          <seealso cref="Local.Model.ILocalVolumeListItem" />
          <seealso cref="Upstream.Model.IUpstreamVolumeListItem" />
          <seealso cref="IDbContext.VolumeListing" />
        </Documentation>
        <Implements>
          <SimpleBaseType Name="IVolumeRow" />
          <SimpleBaseType>
            <!--TODO: Need <xsl:template match="GenericName" mode="BaseTypes"></xsl:template>-->
          </SimpleBaseType>
        </Implements>
        <Property Name="RootPath">
          <Documentation>
            <summary>
Gets the path of the volume's root subdirectory.
</summary>
            <value>The full path of the volume's root <see cref="ISubdirectory" />.</value>
          </Documentation>
          <Type>
            <PredefinedType Keyword="string" />
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="RootSubdirectoryCount">
          <Documentation>
            <summary>
Gets the root subdirectory count.
</summary>
            <value>The number of subdirectories directly inside the volume's root <see cref="ISubdirectory" />.</value>
          </Documentation>
          <Type>
            <PredefinedType Keyword="long" />
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="RootFileCount">
          <Documentation>
            <summary>
Gets the root subdirectory file count.
</summary>
            <value>The number of files directly inside the volume's root <see cref="ISubdirectory" />.</value>
          </Documentation>
          <Type>
            <PredefinedType Keyword="long" />
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="AccessErrorCount">
          <Documentation>
            <summary>
Gets the access error count.
</summary>
            <value>Gets the number of access errors that occurred while attempting to access the current volume entity.</value>
          </Documentation>
          <Type>
            <PredefinedType Keyword="long" />
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="SharedTagCount">
          <Documentation>
            <summary>
Gets the shared tag count.
</summary>
            <value>The number shared tags associated with the current volume entity.</value>
          </Documentation>
          <Type>
            <PredefinedType Keyword="long" />
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="PersonalTagCount">
          <Documentation>
            <summary>
Gets the personal tag count.
</summary>
            <value>The number personal personal tags associated with the current volume entity.</value>
          </Documentation>
          <Type>
            <PredefinedType Keyword="long" />
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
      </Interface>
    </Namespace>
  </Source>
  <Source Path="Model\IVolumeListItemWithFileSystem.cs" Id="6b8ba470-e656-4852-a674-2b24bd4ead8f">
    <Using Name="System" />
    <Namespace Name="FsInfoCat.Model">
      <Interface Name="IVolumeListItemWithFileSystem" Access="public">
        <Documentation>
          <summary>
Generic interface for list item entities which represent a logical file system volume and contains associated file system properties.
</summary>
          <seealso cref="IVolumeListItem" />
          <seealso cref="IEquatable{IVolumeListItemWithFileSystem}" />
          <seealso cref="Local.Model.ILocalVolumeListItemWithFileSystem" />
          <seealso cref="Upstream.Model.IUpstreamVolumeListItemWithFileSystem" />
          <seealso cref="IDbContext.VolumeListingWithFileSystem" />
        </Documentation>
        <Implements>
          <SimpleBaseType Name="IVolumeListItem" />
          <SimpleBaseType>
            <!--TODO: Need <xsl:template match="GenericName" mode="BaseTypes"></xsl:template>-->
          </SimpleBaseType>
        </Implements>
        <Property Name="FileSystemDisplayName">
          <Documentation>
            <summary>
Gets the display name of the volume's file system.
</summary>
            <value>The <see cref="IFileSystemProperties.DisplayName" /> of the associated filesystem.</value>
          </Documentation>
          <Type>
            <PredefinedType Keyword="string" />
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="EffectiveReadOnly">
          <Documentation>
            <summary>
Gets a value indicating whether the volume is effectively read-only.
</summary>
            <value>
                      <see langword="true" /> if the volume properties or the associated file system type indicates this is read-only; otherwise, <see langword="false" />.</value>
          </Documentation>
          <Type>
            <PredefinedType Keyword="bool" />
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="EffectiveMaxNameLength">
          <Documentation>
            <summary>
Gets the effective maximum name length.
</summary>
            <value>The maximum name length taken from the volume properties or file system type.</value>
          </Documentation>
          <Type>
            <PredefinedType Keyword="uint" />
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
      </Interface>
    </Namespace>
  </Source>
  <Source Path="Model\IVolumeRow.cs" Id="077dbdd5-e072-431f-93e7-128eb3d5217d">
    <Using Name="System" />
    <Using Name="System.ComponentModel.DataAnnotations" />
    <Using Name="System.IO" />
    <Namespace Name="FsInfoCat.Model">
      <Interface Name="IVolumeRow" Access="public">
        <Documentation>
          <summary>
Generic interface for entities which represent a logical file system volume.
</summary>
          <seealso cref="IDbEntity" />
          <seealso cref="IHasSimpleIdentifier" />
          <seealso cref="Local.Model.ILocalVolumeRow" />
          <seealso cref="Upstream.Model.IUpstreamVolumeRow" />
        </Documentation>
        <Implements>
          <SimpleBaseType Name="IDbEntity" />
          <SimpleBaseType Name="IHasSimpleIdentifier" />
        </Implements>
        <Property Name="DisplayName">
          <Documentation>
            <summary>
Gets the display name of the volume.
</summary>
            <value>The display name of the volume.</value>
          </Documentation>
          <Display Name="DisplayName_DisplayName" ShortName="DisplayName_DisplayName" Description="DisplayName_DisplayName" />
          <Type>
            <PredefinedType Keyword="string" />
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="VolumeName">
          <Documentation>
            <summary>
Gets the name of the volume.
</summary>
            <value>The name of the volume.</value>
          </Documentation>
          <Display Name="DisplayName_VolumeName" ShortName="DisplayName_VolumeName" Description="DisplayName_VolumeName" />
          <Type>
            <PredefinedType Keyword="string" />
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="Identifier">
          <Documentation>
            <summary>
Gets the unique volume identifier.
</summary>
            <value>The system-independent unique identifier, which identifies the volume.</value>
          </Documentation>
          <Display Name="DisplayName_Identifier" ShortName="DisplayName_Identifier" Description="DisplayName_Identifier" />
          <Type>
            <Identifier Name="VolumeIdentifier" />
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="ReadOnly">
          <Documentation>
            <summary>
Gets a value indicating whether the current volume is read-only.
</summary>
            <value>
                      <see langword="true" /> if the current volume is read-only; <see langword="false" /> if it is read/write; otherwise, <see langword="null" /> to assume the same value as defined by the <see cref="IFileSystemProperties.ReadOnly">file system type</see>.</value>
          </Documentation>
          <Display Name="DisplayName_ReadOnly" ShortName="DisplayName_ReadOnly" Description="DisplayName_ReadOnly" />
          <Type>
            <!--TODO: Need <xsl:template match="NullableType" mode="Types"></xsl:template>-->
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="MaxNameLength">
          <Documentation>
            <summary>
Gets the maximum length of file system name components.
</summary>
            <value>The maximum length of file system name components or <see langword="null" /> to assume the same value as defined by the <see cref="IFileSystemProperties.MaxNameLength">file system type</see>.</value>
          </Documentation>
          <Display Name="DisplayName_MaxNameLength" ShortName="DisplayName_MaxNameLength" Description="DisplayName_MaxNameLength" />
          <Type>
            <!--TODO: Need <xsl:template match="NullableType" mode="Types"></xsl:template>-->
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="Type">
          <Documentation>
            <summary>
Gets the drive type for this volume.
</summary>
            <value>The drive type for this volume.</value>
          </Documentation>
          <Display Name="DisplayName_Type" ShortName="DisplayName_Type" Description="DisplayName_Type" />
          <Type>
            <Identifier Name="DriveType" />
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="Notes">
          <Documentation>
            <summary>
Gets the custom notes for this volume.
</summary>
            <value>The custom notes to associate with this volume.</value>
          </Documentation>
          <Display Name="DisplayName_Notes" ShortName="DisplayName_Notes" Description="DisplayName_Notes" />
          <Type>
            <PredefinedType Keyword="string" />
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="Status">
          <Documentation>
            <summary>
Gets the volume status.
</summary>
            <value>The volume status value.</value>
          </Documentation>
          <Display Name="DisplayName_Status" ShortName="DisplayName_Status" Description="DisplayName_Status" />
          <Type>
            <Identifier Name="VolumeStatus" />
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="FileSystemId">
          <Documentation>
            <summary>
Gets the unique identifier of the entity host file system.
</summary>
            <value>The unique identifier of the entity that represents the host file system for the current volume.</value>
          </Documentation>
          <Type>
            <Identifier Name="Guid" />
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
      </Interface>
    </Namespace>
  </Source>
  <Source Path="Model\IVolumeTag.cs" Id="02a728a6-7f64-4cf2-9eb1-f783ca492d32">
    <Namespace Name="FsInfoCat.Model">
      <Interface Name="IVolumeTag" Access="public">
        <Documentation>
          <summary>
Generic interface for an <see cref="ITagDefinition" /> that is associated with an <see cref="IVolume" />.
</summary>
          <seealso cref="IItemTag" />
          <seealso cref="IHasMembershipKeyReference{IVolume, ITagDefinition}" />
          <seealso cref="Local.Model.ILocalVolumeTag" />
          <seealso cref="Upstream.Model.IUpstreamVolumeTag" />
          <seealso cref="IVolume.SharedTags" />
          <seealso cref="IVolume.PersonalTags" />
          <seealso cref="ITagDefinition.VolumeTags" />
        </Documentation>
        <Implements>
          <SimpleBaseType Name="IItemTag" />
          <SimpleBaseType>
            <!--TODO: Need <xsl:template match="GenericName" mode="BaseTypes"></xsl:template>-->
          </SimpleBaseType>
        </Implements>
        <Property Name="Tagged">
          <Documentation>
            <summary>
Gets the tagged volume.
</summary>
            <value>The tagged <see cref="IVolume" />.</value>
          </Documentation>
          <Type>
            <Identifier Name="IVolume" />
          </Type>
          <!--TODO: Need <xsl:template match="Modifiers" mode="Root"></xsl:template>-->
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
      </Interface>
    </Namespace>
  </Source>
  <Source Path="Model\MD5Hash.cs" Id="652b2a66-6868-493e-a19b-6470831fcd70">
    <Using Name="Microsoft.EntityFrameworkCore.Storage.ValueConversion" />
    <Using Name="System" />
    <Using Name="System.Collections.Generic" />
    <Using Name="System.IO" />
    <Using Name="System.Linq" />
    <Using Name="System.Runtime.InteropServices" />
    <Using Name="System.Security.Cryptography" />
    <Using Name="System.Text.RegularExpressions" />
    <Using Name="System.Threading" />
    <Using Name="System.Threading.Tasks" />
    <Namespace Name="FsInfoCat.Model">
      <Members>
        <!--TODO: Need <xsl:template match="Struct" mode="Root"></xsl:template>-->
      </Members>
    </Namespace>
  </Source>
  <Source Path="Model\MessageCode.cs" Id="325d531a-d8d7-43cc-b2c4-c44d2de3634a">
    <Using Name="System.ComponentModel" />
    <Using Name="System.ComponentModel.DataAnnotations" />
    <Namespace Name="FsInfoCat.Model">
      <Enum Name="MessageCode" BaseType="int" Access="public">
        <Documentation>
          <summary>
Unique value to represent a specific message code.
</summary>
          <remarks>
                  <!--TODO: Need <xsl:template match="list" mode="Root"></xsl:template>-->
                </remarks>
        </Documentation>
        <Field Name="UnexpectedError" Value="0">
          <Documentation>
            <summary>
An unexpected error has occurred.
</summary>
            <remarks>This field must remain the default field and indicate an unexpected error so the default message code of <see cref="ErrorCode" /> values will make logical
sense.</remarks>
          </Documentation>
          <Display Name="DisplayName_UnexpectedError" ShortName="DisplayName_UnexpectedError" Description="ErrorMessage_UnexpectedError" />
        </Field>
        <Field Name="IOError" Value="1">
          <Documentation>
            <summary>
An <see cref="System.IO.IOException" /> has occurred.
</summary>
          </Documentation>
          <Display Name="DisplayName_IOError" ShortName="DisplayName_IOError" Description="ErrorMessage_IOError" />
        </Field>
        <Field Name="UnauthorizedAccess" Value="2">
          <Documentation>
            <summary>
An <see cref="System.UnauthorizedAccessException" /> has occurred.
</summary>
          </Documentation>
          <Display Name="DisplayName_UnauthorizedAccessError" ShortName="DisplayName_Unauthorized" Description="DisplayName_UnauthorizedAccessError" />
        </Field>
        <Field Name="SecurityException" Value="3">
          <Documentation>
            <summary>
A <see cref="System.Security.SecurityException" /> has occurred.
</summary>
          </Documentation>
          <Display Name="DisplayName_SecurityException" ShortName="DisplayName_AccessDenied" Description="ErrorMessage_SecurityException" />
        </Field>
        <Field Name="InvalidPath" Value="4">
          <Documentation>
            <summary>
The name of one or more files or subdirectories in the path contain a invalid character(s).
</summary>
          </Documentation>
          <Display Name="DisplayName_InvalidPathError" ShortName="DisplayName_InvalidPath" Description="ErrorMessage_InvalidPathError" />
        </Field>
        <Field Name="PathTooLong" Value="5">
          <Documentation>
            <summary>
A <see cref="System.IO.PathTooLongException" /> has occurred, indicating that hhe specified path, file name, or both exceed the system-defined maximum length.
</summary>
          </Documentation>
          <Display Name="DisplayName_PathTooLongError" ShortName="DisplayName_TooLong" Description="ErrorMessage_PathTooLongError" />
        </Field>
        <Field Name="CrawlOperationFailed" Value="6">
          <Documentation>
            <summary>
Crawl operation has failed and terminated before completion.
</summary>
          </Documentation>
          <Display Name="DisplayName_CrawlOperationFailed" ShortName="DisplayName_CrawlFailed" Description="ErrorMessage_CrawlOperationFailed" />
        </Field>
        <Field Name="DirectoryNotFound" Value="7">
          <Documentation>
            <summary>
A <see cref="System.IO.DirectoryNotFoundException" /> has occurred.
</summary>
          </Documentation>
          <Display Name="DisplayName_DirectoryNotFound" ShortName="DisplayName_NotFound" Description="ErrorMessage_DirectoryNotFound" />
        </Field>
        <Field Name="GetLogicalDisksFailure" Value="8">
          <Display Name="DisplayName_GetLogicalDisksFailure" ShortName="DisplayName_GetLogicalDisksFailure" Description="ErrorMessage_GetLogicalDisksFailure" />
        </Field>
        <Field Name="BackgroundJobPending" Value="9">
          <Display Name="DisplayName_BackgroundJobPending" ShortName="DisplayName_Pending" Description="DisplayName_BackgroundJobPending" />
        </Field>
        <Field Name="BackgroundJobStarted" Value="10">
          <Display Name="DisplayName_BackgroundJobStarted" ShortName="DisplayName_Started" Description="DisplayName_BackgroundJobStarted" />
        </Field>
        <Field Name="BackgroundJobCompleted" Value="11">
          <Display Name="DisplayName_BackgroundJobCompleted" ShortName="DisplayName_Completed" Description="DisplayName_BackgroundJobCompleted" />
        </Field>
        <Field Name="CancellingBackgroundJob" Value="12">
          <Display Name="DisplayName_CancellingBackgroundJob" ShortName="DisplayName_Cancelling" Description="DisplayName_CancellingBackgroundJob" />
        </Field>
        <Field Name="BackgroundJobCanceled" Value="13">
          <Display Name="DisplayName_BackgroundJobCanceled" ShortName="DisplayName_Canceled" Description="DisplayName_BackgroundJobCanceled" />
        </Field>
        <Field Name="BackgroundJobFaulted" Value="14">
          <Display Name="DisplayName_BackgroundJobFailed" ShortName="DisplayName_Failed" Description="DisplayName_BackgroundJobFailed" />
        </Field>
        <Field Name="ItemLimitReached" Value="15">
          <Display Name="DisplayName_ItemLimitReached" ShortName="DisplayName_ItemLimitReached" Description="DisplayName_ItemLimitReached" />
        </Field>
        <Field Name="TimeLimitReached" Value="16">
          <Display Name="DisplayName_TimeLimitReached" ShortName="DisplayName_TimeLimitReached" Description="DisplayName_TimeLimitReached" />
        </Field>
        <Field Name="CrawlingSubdirectory" Value="17">
          <Display Name="DisplayName_CrawlingSubdirectory" ShortName="DisplayName_CrawlingSubdirectory" Description="DisplayName_CrawlingSubdirectory" />
        </Field>
        <Field Name="ReadingFileInformation" Value="18">
          <Display Name="DisplayName_ReadingFileInformation" ShortName="DisplayName_ReadingFileInformation" Description="DisplayName_ReadingFileInformation" />
        </Field>
      </Enum>
    </Namespace>
  </Source>
  <Source Path="Model\StatusMessageLevel.cs" Id="289d71ee-26df-4473-a2c9-080613af4d82">
    <Namespace Name="FsInfoCat.Model">
      <Enum Name="StatusMessageLevel" BaseType="byte" Access="public">
        <Documentation>
          <summary>
Indicates the severity of a status message.
</summary>
        </Documentation>
        <Field Name="Information" Value="0">
          <Documentation>
            <summary>
Indicates that the associated message is informational.
</summary>
          </Documentation>
        </Field>
        <Field Name="Warning" Value="1">
          <Documentation>
            <summary>
Indicates that the associated message is a warning.
</summary>
          </Documentation>
        </Field>
        <Field Name="Error" Value="2">
          <Documentation>
            <summary>
Indicates that the associated message is an error message.
</summary>
          </Documentation>
        </Field>
      </Enum>
    </Namespace>
  </Source>
  <Source Path="Model\VolumeIdentifier.cs" Id="df4df4cb-c2bb-48a4-8a91-0d702eea963b">
    <Using Name="Microsoft.EntityFrameworkCore.Storage.ValueConversion" />
    <Using Name="System" />
    <Using Name="System.Globalization" />
    <Using Name="System.Text.RegularExpressions" />
    <Namespace Name="FsInfoCat.Model">
      <Members>
        <!--TODO: Need <xsl:template match="Struct" mode="Root"></xsl:template>-->
      </Members>
    </Namespace>
  </Source>
  <Source Path="Model\VolumeStatus.cs" Id="6321d724-98ed-4b61-af29-30f198d2f720">
    <Using Name="System.ComponentModel.DataAnnotations" />
    <Namespace Name="FsInfoCat.Model">
      <Enum Name="VolumeStatus" BaseType="byte" Access="public">
        <Documentation>
          <summary>
Represents a volume status.
</summary>
        </Documentation>
        <Field Name="Unknown" Value="0">
          <Documentation>
            <summary>
The status of the volume is uknown or unspecified.
</summary>
          </Documentation>
          <Display Name="DisplayName_Unknown" ShortName="DisplayName_Unknown" Description="Description_VolumeStatus_Unknown" />
        </Field>
        <Field Name="Controlled" Value="1">
          <Documentation>
            <summary>
Volume is under corporate control / ownership.
</summary>
          </Documentation>
          <Display Name="DisplayName_VolumeStatus_Controlled" ShortName="DisplayName_VolumeStatus_Controlled" Description="Description_VolumeStatus_Controlled" />
        </Field>
        <Field Name="AccessError" Value="2">
          <Documentation>
            <summary>
An error occurred while trying to access the volume.
</summary>
          </Documentation>
          <Display Name="DisplayName_AccessError" ShortName="DisplayName_Error" Description="Description_VolumeStatus_AccessError" />
        </Field>
        <Field Name="Uncontrolled" Value="3">
          <Documentation>
            <summary>
Volume is being tracked, but is not under corporate control / ownership.
</summary>
          </Documentation>
          <Display Name="DisplayName_VolumeStatus_Uncontrolled" ShortName="DisplayName_VolumeStatus_Uncontrolled" Description="Description_VolumeStatus_Uncontrolled" />
        </Field>
        <Field Name="Offline" Value="4">
          <Documentation>
            <summary>
Volume is offline or unavailable.
</summary>
          </Documentation>
          <Display Name="DisplayName_VolumeStatus_Offline" ShortName="DisplayName_VolumeStatus_Offline" Description="Description_VolumeStatus_Offline" />
        </Field>
        <Field Name="Relinquished" Value="5">
          <Documentation>
            <summary>
Ownership / control of volume has been relinquished to another entity.
</summary>
          </Documentation>
          <Display Name="DisplayName_VolumeStatus_Relinquished" ShortName="DisplayName_VolumeStatus_Relinquished" Description="Description_VolumeStatus_Relinquished" />
        </Field>
        <Field Name="Destroyed" Value="6">
          <Documentation>
            <summary>
Volume has been destroyed.
</summary>
          </Documentation>
          <Display Name="DisplayName_VolumeStatus_Destroyed" ShortName="DisplayName_VolumeStatus_Destroyed" Description="Description_VolumeStatus_Destroyed" />
        </Field>
        <Field Name="Deleted" Value="7">
          <Documentation>
            <summary>
Volume entity marked as deleted.
</summary>
          </Documentation>
        </Field>
      </Enum>
    </Namespace>
  </Source>
  <Source Path="Local\Model\ILocalAccessError.cs" Id="c31e5c51-4b52-4165-bc70-5b2dda03d739">
    <Using Name="FsInfoCat.Model" />
    <Using Name="System.ComponentModel.DataAnnotations" />
    <Namespace Name="FsInfoCat.Local.Model">
      <Interface Name="ILocalAccessError" Access="public">
        <Documentation>
          <summary>
Generic interface for access error entities that from the local host system database.
</summary>
          <seealso cref="IAccessError" />
          <seealso cref="ILocalFileAccessError" />
          <seealso cref="ILocalSubdirectoryAccessError" />
          <seealso cref="ILocalVolumeAccessError" />
          <seealso cref="ILocalDbFsItem.AccessErrors" />
          <seealso cref="Upstream.Model.IUpstreamAccessError" />
        </Documentation>
        <Implements>
          <SimpleBaseType Name="IAccessError" />
        </Implements>
        <Property Name="Target">
          <Documentation>
            <summary>
Gets the target entity to which the access error applies.
</summary>
            <value>The <see cref="ILocalDbEntity" /> object that this error applies to.</value>
          </Documentation>
          <Display Name="DisplayName_Target" ShortName="DisplayName_Target" Description="DisplayName_Target" />
          <Type>
            <Identifier Name="ILocalDbEntity" />
          </Type>
          <!--TODO: Need <xsl:template match="Modifiers" mode="Root"></xsl:template>-->
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
      </Interface>
    </Namespace>
  </Source>
  <Source Path="Local\Model\ILocalAudioPropertiesListItem.cs" Id="25d3a9f6-71c9-49f8-a2aa-06612b664cf3">
    <Using Name="FsInfoCat.Model" />
    <Namespace Name="FsInfoCat.Local.Model">
      <Interface Name="ILocalAudioPropertiesListItem" Access="public">
        <Documentation>
          <summary>
Generic interface for list item entities containing extended file properties for audio files.
</summary>
          <seealso cref="ILocalAudioPropertiesRow" />
          <seealso cref="ILocalPropertiesListItem" />
          <seealso cref="IAudioPropertiesListItem" />
          <seealso cref="Upstream.Model.IUpstreamAudioPropertiesListItem" />
        </Documentation>
        <Implements>
          <SimpleBaseType Name="ILocalAudioPropertiesRow" />
          <SimpleBaseType Name="ILocalPropertiesListItem" />
          <SimpleBaseType Name="IAudioPropertiesListItem" />
        </Implements>
      </Interface>
    </Namespace>
  </Source>
  <Source Path="Local\Model\ILocalAudioPropertiesRow.cs" Id="117578cf-2af7-4bba-8858-c69ff64fea18">
    <Using Name="FsInfoCat.Model" />
    <Namespace Name="FsInfoCat.Local.Model">
      <Interface Name="ILocalAudioPropertiesRow" Access="public">
        <Documentation>
          <summary>
Generic interface for entities containing extended file properties for audio files.
</summary>
          <seealso cref="ILocalPropertiesRow" />
          <seealso cref="IAudioPropertiesRow" />
          <seealso cref="Upstream.Model.IUpstreamAudioPropertiesRow" />
        </Documentation>
        <Implements>
          <SimpleBaseType Name="ILocalPropertiesRow" />
          <SimpleBaseType Name="IAudioPropertiesRow" />
        </Implements>
      </Interface>
    </Namespace>
  </Source>
  <Source Path="Local\Model\ILocalAudioPropertySet.cs" Id="a7d8623c-8ecb-4d56-ba8b-b17e4ea275fa">
    <Using Name="FsInfoCat.Model" />
    <Using Name="System" />
    <Namespace Name="FsInfoCat.Local.Model">
      <Interface Name="ILocalAudioPropertySet" Access="public">
        <Documentation>
          <summary>
Contains extended audio file property values.
</summary>
          <seealso cref="ILocalAudioPropertiesRow" />
          <seealso cref="ILocalPropertySet" />
          <seealso cref="IAudioPropertySet" />
          <seealso cref="IEquatable{ILocalAudioPropertySet}" />
          <seealso cref="Upstream.Model.IUpstreamAudioPropertySet" />
        </Documentation>
        <Implements>
          <SimpleBaseType Name="ILocalAudioPropertiesRow" />
          <SimpleBaseType Name="ILocalPropertySet" />
          <SimpleBaseType Name="IAudioPropertySet" />
          <SimpleBaseType>
            <!--TODO: Need <xsl:template match="GenericName" mode="BaseTypes"></xsl:template>-->
          </SimpleBaseType>
        </Implements>
      </Interface>
    </Namespace>
  </Source>
  <Source Path="Local\Model\ILocalBinaryPropertySet.cs" Id="c381fb8d-3d0c-49a4-b8fe-e30616cbd249">
    <Using Name="FsInfoCat.Model" />
    <Using Name="System" />
    <Using Name="System.Collections.Generic" />
    <Using Name="System.ComponentModel.DataAnnotations" />
    <Namespace Name="FsInfoCat.Local.Model">
      <Interface Name="ILocalBinaryPropertySet" Access="public">
        <Documentation>
          <summary>
Represents a set of files that have the same file size and cryptographic hash.
</summary>
          <seealso cref="IBinaryPropertySet" />
          <seealso cref="IEquatable{ILocalBinaryPropertySet}" />
          <seealso cref="ILocalDbEntity" />
          <seealso cref="ILocalDbContext.BinaryPropertySets" />
          <seealso cref="ILocalFile.BinaryProperties" />
          <seealso cref="ILocalRedundantSet.BinaryProperties" />
          <seealso cref="Upstream.Model.IUpstreamBinaryPropertySet" />
        </Documentation>
        <Implements>
          <SimpleBaseType Name="ILocalDbEntity" />
          <SimpleBaseType Name="IBinaryPropertySet" />
          <SimpleBaseType>
            <!--TODO: Need <xsl:template match="GenericName" mode="BaseTypes"></xsl:template>-->
          </SimpleBaseType>
        </Implements>
        <Property Name="Files">
          <Documentation>
            <summary>
Gets the files which have the same length and cryptographic hash.
</summary>
            <value>The files which have the same length and cryptographic hash..</value>
          </Documentation>
          <Display Name="DisplayName_Files" ShortName="DisplayName_Files" Description="DisplayName_Files" />
          <Type>
            <Generic Name="IEnumerable">
              <Identifier Name="ILocalFile" />
            </Generic>
          </Type>
          <!--TODO: Need <xsl:template match="Modifiers" mode="Root"></xsl:template>-->
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="RedundantSets">
          <Documentation>
            <summary>
Gets the sets of files which were determined to be duplicates.
</summary>
            <value>The sets of files which were determined to be duplicates.</value>
          </Documentation>
          <Display Name="DisplayName_RedundantSets" ShortName="ShortName_RedundantSets" Description="DisplayName_RedundantSets" />
          <Type>
            <Generic Name="IEnumerable">
              <Identifier Name="ILocalRedundantSet" />
            </Generic>
          </Type>
          <!--TODO: Need <xsl:template match="Modifiers" mode="Root"></xsl:template>-->
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
      </Interface>
    </Namespace>
  </Source>
  <Source Path="Local\Model\ILocalComparison.cs" Id="32656140-675b-4f4f-9a5d-7be46b89ee75">
    <Using Name="FsInfoCat.Model" />
    <Using Name="System" />
    <Using Name="System.ComponentModel.DataAnnotations" />
    <Namespace Name="FsInfoCat.Local.Model">
      <Interface Name="ILocalComparison" Access="public">
        <Documentation>
          <summary>
The results of a byte-for-byte comparison of 2 files.
</summary>
          <seealso cref="IComparison" />
          <seealso cref="IEquatable{ILocalComparison}" />
          <seealso cref="IHasMembershipKeyReference{ILocalFile, ILocalFile}" />
          <seealso cref="ILocalDbEntity" />
          <seealso cref="ILocalDbContext.Comparisons" />
          <seealso cref="ILocalFile.BaselineComparisons" />
          <seealso cref="ILocalFile.CorrelativeComparisons" />
          <seealso cref="Upstream.Model.IUpstreamComparison" />
        </Documentation>
        <Implements>
          <SimpleBaseType Name="ILocalDbEntity" />
          <SimpleBaseType Name="IComparison" />
          <SimpleBaseType>
            <!--TODO: Need <xsl:template match="GenericName" mode="BaseTypes"></xsl:template>-->
          </SimpleBaseType>
          <SimpleBaseType>
            <!--TODO: Need <xsl:template match="GenericName" mode="BaseTypes"></xsl:template>-->
          </SimpleBaseType>
        </Implements>
        <Property Name="Baseline">
          <Documentation>
            <summary>
Gets the baseline file in the comparison.
</summary>
            <value>The generic <see cref="ILocalFile" /> that represents the baseline file in the comparison.</value>
          </Documentation>
          <Display Name="DisplayName_Baseline" ShortName="DisplayName_Baseline" Description="DisplayName_Baseline" />
          <Type>
            <Identifier Name="ILocalFile" />
          </Type>
          <!--TODO: Need <xsl:template match="Modifiers" mode="Root"></xsl:template>-->
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="Correlative">
          <Documentation>
            <summary>
Gets the correlative file in the comparison.
</summary>
            <value>The generic <see cref="ILocalFile" /> that represents the correlative file, which is the new or changed file in the comparison.</value>
          </Documentation>
          <Display Name="DisplayName_Correlative" ShortName="DisplayName_Correlative" Description="DisplayName_Correlative" />
          <Type>
            <Identifier Name="ILocalFile" />
          </Type>
          <!--TODO: Need <xsl:template match="Modifiers" mode="Root"></xsl:template>-->
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
      </Interface>
    </Namespace>
  </Source>
  <Source Path="Local\Model\ILocalCrawlConfigReportItem.cs" Id="8d59e909-a546-4c37-8e4a-c3528ee8d132">
    <Using Name="FsInfoCat.Model" />
    <Namespace Name="FsInfoCat.Local.Model">
      <Interface Name="ILocalCrawlConfigReportItem" Access="public">
        <Documentation>
          <summary>
Represents a crawl configuration report entity associated with the <see cref="ILocalDbContext" />.
</summary>
          <seealso cref="ILocalCrawlConfigurationListItem" />
          <seealso cref="ICrawlConfigReportItem" />
          <seealso cref="Upstream.Model.IUpstreamCrawlConfigReportItem" />
        </Documentation>
        <Implements>
          <SimpleBaseType Name="ILocalCrawlConfigurationListItem" />
          <SimpleBaseType Name="ICrawlConfigReportItem" />
        </Implements>
      </Interface>
    </Namespace>
  </Source>
  <Source Path="Local\Model\ILocalCrawlConfiguration.cs" Id="df06f1ff-eeb1-45eb-a23c-53ed1597e458">
    <Using Name="FsInfoCat.Model" />
    <Using Name="System" />
    <Using Name="System.Collections.Generic" />
    <Using Name="System.ComponentModel.DataAnnotations" />
    <Namespace Name="FsInfoCat.Local.Model">
      <Interface Name="ILocalCrawlConfiguration" Access="public">
        <Documentation>
          <summary>
Specifies the configuration of a file system crawl.
</summary>
          <seealso cref="ICrawlConfiguration" />
          <seealso cref="IEquatable{ILocalCrawlConfiguration}" />
          <seealso cref="ILocalDbEntity" />
          <seealso cref="ILocalCrawlJobLog.Configuration" />
          <seealso cref="ILocalDbContext.CrawlConfigurations" />
          <seealso cref="ILocalSubdirectory.CrawlConfiguration" />
          <seealso cref="Upstream.Model.IUpstreamCrawlConfiguration" />
        </Documentation>
        <Implements>
          <SimpleBaseType Name="ILocalCrawlConfigurationRow" />
          <SimpleBaseType Name="ICrawlConfiguration" />
          <SimpleBaseType>
            <!--TODO: Need <xsl:template match="GenericName" mode="BaseTypes"></xsl:template>-->
          </SimpleBaseType>
        </Implements>
        <Property Name="Root">
          <Documentation>
            <summary>
Gets the starting subdirectory for the configured subdirectory crawl.
</summary>
            <value>The root subdirectory of the configured subdirectory crawl.</value>
          </Documentation>
          <Display Name="DisplayName_Root" ShortName="DisplayName_Root" Description="DisplayName_Root" />
          <Type>
            <Identifier Name="ILocalSubdirectory" />
          </Type>
          <!--TODO: Need <xsl:template match="Modifiers" mode="Root"></xsl:template>-->
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="Logs">
          <Documentation>
            <summary>
Gets the crawl log entries.
</summary>
            <value>The crawl log entries.</value>
          </Documentation>
          <Display Name="DisplayName_Logs" ShortName="DisplayName_Logs" Description="DisplayName_Logs" />
          <Type>
            <Generic Name="IEnumerable">
              <Identifier Name="ILocalCrawlJobLog" />
            </Generic>
          </Type>
          <!--TODO: Need <xsl:template match="Modifiers" mode="Root"></xsl:template>-->
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
      </Interface>
    </Namespace>
  </Source>
  <Source Path="Local\Model\ILocalCrawlConfigurationListItem.cs" Id="56219253-0e3f-4b68-9661-99f06b034124">
    <Using Name="FsInfoCat.Model" />
    <Namespace Name="FsInfoCat.Local.Model">
      <Interface Name="ILocalCrawlConfigurationListItem" Access="public">
        <Documentation>
          <summary>
Represents a crawl configuration list item entity.
</summary>
          <seealso cref="ICrawlConfigurationListItem" />
          <seealso cref="ILocalDbEntity" />
          <seealso cref="ILocalCrawlConfigReportItem" />
          <seealso cref="ILocalDbContext.CrawlConfigListing" />
          <seealso cref="Upstream.Model.IUpstreamCrawlConfigurationListItem" />
        </Documentation>
        <Implements>
          <SimpleBaseType Name="ILocalCrawlConfigurationRow" />
          <SimpleBaseType Name="ICrawlConfigurationListItem" />
        </Implements>
      </Interface>
    </Namespace>
  </Source>
  <Source Path="Local\Model\ILocalCrawlConfigurationRow.cs" Id="2ca09ff8-1a4c-4f4f-9c1c-c3a874811db3">
    <Using Name="FsInfoCat.Model" />
    <Namespace Name="FsInfoCat.Local.Model">
      <Interface Name="ILocalCrawlConfigurationRow" Access="public">
        <Documentation>
          <summary>
Represents a crawl configuration entity.
</summary>
          <seealso cref="ICrawlConfigurationRow" />
          <seealso cref="ILocalDbEntity" />
          <seealso cref="Upstream.Model.IUpstreamCrawlConfigurationRow" />
        </Documentation>
        <Implements>
          <SimpleBaseType Name="ILocalDbEntity" />
          <SimpleBaseType Name="ICrawlConfigurationRow" />
        </Implements>
      </Interface>
    </Namespace>
  </Source>
  <Source Path="Local\Model\ILocalCrawlJobListItem.cs" Id="8a5c5048-620a-4c5f-91d1-6730e42006e8">
    <Using Name="FsInfoCat.Model" />
    <Namespace Name="FsInfoCat.Local.Model">
      <Interface Name="ILocalCrawlJobListItem" Access="public">
        <Documentation>
          <summary>
Represents a file system crawl job log list item entity.
</summary>
          <seealso cref="ILocalCrawlJobLogRow" />
          <seealso cref="ICrawlJobListItem" />
          <seealso cref="Upstream.Model.IUpstreamCrawlJobListItem" />
        </Documentation>
        <Implements>
          <SimpleBaseType Name="ILocalCrawlJobLogRow" />
          <SimpleBaseType Name="ICrawlJobListItem" />
        </Implements>
      </Interface>
    </Namespace>
  </Source>
  <Source Path="Local\Model\ILocalCrawlJobLog.cs" Id="4f5909d0-d5f7-4ccc-b024-116cb292b34b">
    <Using Name="FsInfoCat.Model" />
    <Using Name="System" />
    <Using Name="System.ComponentModel.DataAnnotations" />
    <Namespace Name="FsInfoCat.Local.Model">
      <Interface Name="ILocalCrawlJobLog" Access="public">
        <Documentation>
          <summary>
Log of crawl job results.
</summary>
          <seealso cref="ILocalDbEntity" />
          <seealso cref="ICrawlJobLog" />
          <seealso cref="IEquatable{ILocalCrawlJobLog}" />
          <seealso cref="Upstream.Model.IUpstreamCrawlJobLog" />
        </Documentation>
        <Implements>
          <SimpleBaseType Name="ILocalCrawlJobLogRow" />
          <SimpleBaseType Name="ICrawlJobLog" />
          <SimpleBaseType>
            <!--TODO: Need <xsl:template match="GenericName" mode="BaseTypes"></xsl:template>-->
          </SimpleBaseType>
        </Implements>
        <Property Name="Configuration">
          <Documentation>
            <summary>
Gets the configuration source for the file system crawl.
</summary>
            <value>The configuration for the file system crawl.</value>
          </Documentation>
          <Display Name="DisplayName_Configuration" ShortName="DisplayName_Configuration" Description="DisplayName_Configuration" />
          <Type>
            <Identifier Name="ILocalCrawlConfiguration" />
          </Type>
          <!--TODO: Need <xsl:template match="Modifiers" mode="Root"></xsl:template>-->
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
      </Interface>
    </Namespace>
  </Source>
  <Source Path="Local\Model\ILocalCrawlJobLogRow.cs" Id="b248343e-6f81-4841-a9c8-194b2633ee93">
    <Using Name="FsInfoCat.Model" />
    <Namespace Name="FsInfoCat.Local.Model">
      <Interface Name="ILocalCrawlJobLogRow" Access="public">
        <Documentation>
          <summary>
Represents a file system crawl job log entity.
</summary>
          <seealso cref="ICrawlJobLogRow" />
          <seealso cref="ILocalDbEntity" />
          <seealso cref="Upstream.Model.IUpstreamCrawlJobLogRow" />
        </Documentation>
        <Implements>
          <SimpleBaseType Name="ICrawlJobLogRow" />
          <SimpleBaseType Name="ILocalDbEntity" />
        </Implements>
      </Interface>
    </Namespace>
  </Source>
  <Source Path="Local\Model\ILocalDbContext.cs" Id="b2f9a8df-1ef2-4314-b8aa-c2880971960c">
    <Using Name="FsInfoCat.Model" />
    <Using Name="System.Collections.Generic" />
    <Using Name="System.Threading" />
    <Using Name="System.Threading.Tasks" />
    <Namespace Name="FsInfoCat.Local.Model">
      <Interface Name="ILocalDbContext" Access="public">
        <Documentation>
          <summary>
Generic interface for the local FS InfoCat database context.
Extends the <see cref="IDbContext" /> interface to represent the local database.
</summary>
          <seealso cref="IDbContext" />
          <seealso cref="Upstream.Model.IUpstreamDbContext" />
          <seealso cref="ILocalAudioPropertiesListItem" />
          <seealso cref="ILocalAudioPropertySet" />
          <seealso cref="ILocalBinaryPropertySet" />
          <seealso cref="ILocalComparison" />
          <seealso cref="ILocalCrawlConfigReportItem" />
          <seealso cref="ILocalCrawlConfiguration" />
          <seealso cref="ILocalCrawlConfigurationListItem" />
          <seealso cref="ILocalCrawlJobListItem" />
          <seealso cref="ILocalCrawlJobLog" />
          <seealso cref="ILocalDocumentPropertiesListItem" />
          <seealso cref="ILocalDocumentPropertySet" />
          <seealso cref="ILocalDRMPropertiesListItem" />
          <seealso cref="ILocalDRMPropertySet" />
          <seealso cref="ILocalFile" />
          <seealso cref="ILocalFileAccessError" />
          <seealso cref="ILocalFileListItemWithAncestorNames" />
          <seealso cref="ILocalFileListItemWithBinaryProperties" />
          <seealso cref="ILocalFileListItemWithBinaryPropertiesAndAncestorNames" />
          <seealso cref="ILocalFileSystem" />
          <seealso cref="ILocalFileSystemListItem" />
          <seealso cref="ILocalGPSPropertiesListItem" />
          <seealso cref="ILocalGPSPropertySet" />
          <seealso cref="ILocalImagePropertiesListItem" />
          <seealso cref="ILocalImagePropertySet" />
          <seealso cref="ILocalMediaPropertiesListItem" />
          <seealso cref="ILocalMediaPropertySet" />
          <seealso cref="ILocalMusicPropertiesListItem" />
          <seealso cref="ILocalMusicPropertySet" />
          <seealso cref="ILocalPersonalFileTag" />
          <seealso cref="ILocalPersonalSubdirectoryTag" />
          <seealso cref="ILocalPersonalTagDefinition" />
          <seealso cref="ILocalPersonalVolumeTag" />
          <seealso cref="ILocalPhotoPropertiesListItem" />
          <seealso cref="ILocalPhotoPropertySet" />
          <seealso cref="ILocalRecordedTVPropertiesListItem" />
          <seealso cref="ILocalRecordedTVPropertySet" />
          <seealso cref="ILocalRedundancy" />
          <seealso cref="ILocalRedundantSet" />
          <seealso cref="ILocalRedundantSetListItem" />
          <seealso cref="ILocalSharedFileTag" />
          <seealso cref="ILocalSharedSubdirectoryTag" />
          <seealso cref="ILocalSharedTagDefinition" />
          <seealso cref="ILocalSharedVolumeTag" />
          <seealso cref="ILocalSubdirectory" />
          <seealso cref="ILocalSubdirectoryAccessError" />
          <seealso cref="ISubdirectoryAncestorName" />
          <seealso cref="ILocalSubdirectoryListItem" />
          <seealso cref="ILocalSubdirectoryListItemWithAncestorNames" />
          <seealso cref="ILocalSummaryPropertiesListItem" />
          <seealso cref="ILocalSummaryPropertySet" />
          <seealso cref="ILocalSymbolicName" />
          <seealso cref="ILocalSymbolicNameListItem" />
          <seealso cref="ILocalVideoPropertiesListItem" />
          <seealso cref="ILocalVideoPropertySet" />
          <seealso cref="ILocalVolume" />
          <seealso cref="ILocalVolumeAccessError" />
          <seealso cref="ILocalVolumeListItem" />
          <seealso cref="ILocalVolumeListItemWithFileSystem" />
        </Documentation>
        <Implements>
          <SimpleBaseType Name="IDbContext" />
        </Implements>
        <Property Name="Comparisons">
          <Documentation>
            <summary>
Enumerates generic file comparison entities from the local database.
</summary>
            <value>A <see cref="IEnumerable{T}" /> that enumerates <see cref="ILocalComparison" /> entities.</value>
          </Documentation>
          <Type>
            <Generic Name="IEnumerable">
              <Identifier Name="ILocalComparison" />
            </Generic>
          </Type>
          <!--TODO: Need <xsl:template match="Modifiers" mode="Root"></xsl:template>-->
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="BinaryPropertySets">
          <Documentation>
            <summary>
Enumerates generic binary property set entities from the local database.
</summary>
            <value>A <see cref="IEnumerable{T}" /> that enumerates <see cref="ILocalBinaryPropertySet" /> entities.</value>
          </Documentation>
          <Type>
            <Generic Name="IEnumerable">
              <Identifier Name="ILocalBinaryPropertySet" />
            </Generic>
          </Type>
          <!--TODO: Need <xsl:template match="Modifiers" mode="Root"></xsl:template>-->
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="SummaryPropertySets">
          <Documentation>
            <summary>
Enumerates generic summary property set entities from the local database.
</summary>
            <value>A <see cref="IEnumerable{T}" /> that enumerates <see cref="ILocalSummaryPropertySet" /> entities.</value>
          </Documentation>
          <Type>
            <Generic Name="IEnumerable">
              <Identifier Name="ILocalSummaryPropertySet" />
            </Generic>
          </Type>
          <!--TODO: Need <xsl:template match="Modifiers" mode="Root"></xsl:template>-->
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="DocumentPropertySets">
          <Documentation>
            <summary>
Enumerates generic document property set entities from the local database.
</summary>
            <value>A <see cref="IEnumerable{T}" /> that enumerates <see cref="ILocalDocumentPropertySet" /> entities.</value>
          </Documentation>
          <Type>
            <Generic Name="IEnumerable">
              <Identifier Name="ILocalDocumentPropertySet" />
            </Generic>
          </Type>
          <!--TODO: Need <xsl:template match="Modifiers" mode="Root"></xsl:template>-->
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="AudioPropertySets">
          <Documentation>
            <summary>
Enumerates generic audio property set entities from the local database.
</summary>
            <value>A <see cref="IEnumerable{T}" /> that enumerates <see cref="ILocalAudioPropertySet" /> entities.</value>
          </Documentation>
          <Type>
            <Generic Name="IEnumerable">
              <Identifier Name="ILocalAudioPropertySet" />
            </Generic>
          </Type>
          <!--TODO: Need <xsl:template match="Modifiers" mode="Root"></xsl:template>-->
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="DRMPropertySets">
          <Documentation>
            <summary>
Enumerates generic DRM property set entities from the local database.
</summary>
            <value>A <see cref="IEnumerable{T}" /> that enumerates <see cref="ILocalDRMPropertySet" /> entities.</value>
          </Documentation>
          <Type>
            <Generic Name="IEnumerable">
              <Identifier Name="ILocalDRMPropertySet" />
            </Generic>
          </Type>
          <!--TODO: Need <xsl:template match="Modifiers" mode="Root"></xsl:template>-->
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="GPSPropertySets">
          <Documentation>
            <summary>
Enumerates generic GPS property set entities from the local database.
</summary>
            <value>A <see cref="IEnumerable{T}" /> that enumerates <see cref="ILocalGPSPropertySet" /> entities.</value>
          </Documentation>
          <Type>
            <Generic Name="IEnumerable">
              <Identifier Name="ILocalGPSPropertySet" />
            </Generic>
          </Type>
          <!--TODO: Need <xsl:template match="Modifiers" mode="Root"></xsl:template>-->
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="ImagePropertySets">
          <Documentation>
            <summary>
Enumerates generic image property set entities from the local database.
</summary>
            <value>A <see cref="IEnumerable{T}" /> that enumerates <see cref="ILocalImagePropertySet" /> entities.</value>
          </Documentation>
          <Type>
            <Generic Name="IEnumerable">
              <Identifier Name="ILocalImagePropertySet" />
            </Generic>
          </Type>
          <!--TODO: Need <xsl:template match="Modifiers" mode="Root"></xsl:template>-->
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="MediaPropertySets">
          <Documentation>
            <summary>
Enumerates generic media property set entities from the local database.
</summary>
            <value>A <see cref="IEnumerable{T}" /> that enumerates <see cref="ILocalMediaPropertySet" /> entities.</value>
          </Documentation>
          <Type>
            <Generic Name="IEnumerable">
              <Identifier Name="ILocalMediaPropertySet" />
            </Generic>
          </Type>
          <!--TODO: Need <xsl:template match="Modifiers" mode="Root"></xsl:template>-->
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="MusicPropertySets">
          <Documentation>
            <summary>
Enumerates generic music property set entities from the local database.
</summary>
            <value>A <see cref="IEnumerable{T}" /> that enumerates <see cref="ILocalMusicPropertySet" /> entities.</value>
          </Documentation>
          <Type>
            <Generic Name="IEnumerable">
              <Identifier Name="ILocalMusicPropertySet" />
            </Generic>
          </Type>
          <!--TODO: Need <xsl:template match="Modifiers" mode="Root"></xsl:template>-->
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="PhotoPropertySets">
          <Documentation>
            <summary>
Enumerates generic photo property set entities from the local database.
</summary>
            <value>A <see cref="IEnumerable{T}" /> that enumerates <see cref="ILocalPhotoPropertySet" /> entities.</value>
          </Documentation>
          <Type>
            <Generic Name="IEnumerable">
              <Identifier Name="ILocalPhotoPropertySet" />
            </Generic>
          </Type>
          <!--TODO: Need <xsl:template match="Modifiers" mode="Root"></xsl:template>-->
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="RecordedTVPropertySets">
          <Documentation>
            <summary>
Enumerates generic recorded TV property set entities from the local database.
</summary>
            <value>A <see cref="IEnumerable{T}" /> that enumerates <see cref="ILocalRecordedTVPropertySet" /> entities.</value>
          </Documentation>
          <Type>
            <Generic Name="IEnumerable">
              <Identifier Name="ILocalRecordedTVPropertySet" />
            </Generic>
          </Type>
          <!--TODO: Need <xsl:template match="Modifiers" mode="Root"></xsl:template>-->
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="VideoPropertySets">
          <Documentation>
            <summary>
Enumerates generic video property set entities from the local database.
</summary>
            <value>A <see cref="IEnumerable{T}" /> that enumerates <see cref="ILocalVideoPropertySet" /> entities.</value>
          </Documentation>
          <Type>
            <Generic Name="IEnumerable">
              <Identifier Name="ILocalVideoPropertySet" />
            </Generic>
          </Type>
          <!--TODO: Need <xsl:template match="Modifiers" mode="Root"></xsl:template>-->
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="FileAccessErrors">
          <Documentation>
            <summary>
Enumerates generic file access error entities from the local database.
</summary>
            <value>A <see cref="IEnumerable{T}" /> that enumerates <see cref="ILocalFileAccessError" /> entities.</value>
          </Documentation>
          <Type>
            <Generic Name="IEnumerable">
              <Identifier Name="ILocalFileAccessError" />
            </Generic>
          </Type>
          <!--TODO: Need <xsl:template match="Modifiers" mode="Root"></xsl:template>-->
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="Files">
          <Documentation>
            <summary>
Enumerates generic file entities from the local database.
</summary>
            <value>A <see cref="IEnumerable{T}" /> that enumerates <see cref="ILocalFile" /> entities.</value>
          </Documentation>
          <Type>
            <Generic Name="IEnumerable">
              <Identifier Name="ILocalFile" />
            </Generic>
          </Type>
          <!--TODO: Need <xsl:template match="Modifiers" mode="Root"></xsl:template>-->
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="FileSystems">
          <Documentation>
            <summary>
Enumerates generic file system entities from the local database.
</summary>
            <value>A <see cref="IEnumerable{T}" /> that enumerates <see cref="ILocalFileSystem" /> entities.</value>
          </Documentation>
          <Type>
            <Generic Name="IEnumerable">
              <Identifier Name="ILocalFileSystem" />
            </Generic>
          </Type>
          <!--TODO: Need <xsl:template match="Modifiers" mode="Root"></xsl:template>-->
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="Redundancies">
          <Documentation>
            <summary>
Enumerates generic redundancy entities from the local database.
</summary>
            <value>A <see cref="IEnumerable{T}" /> that enumerates <see cref="ILocalRedundancy" /> entities.</value>
          </Documentation>
          <Type>
            <Generic Name="IEnumerable">
              <Identifier Name="ILocalRedundancy" />
            </Generic>
          </Type>
          <!--TODO: Need <xsl:template match="Modifiers" mode="Root"></xsl:template>-->
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="RedundantSets">
          <Documentation>
            <summary>
Enumerates generic redundant set entities from the local database.
</summary>
            <value>A <see cref="IEnumerable{T}" /> that enumerates <see cref="ILocalRedundantSet" /> entities.</value>
          </Documentation>
          <Type>
            <Generic Name="IEnumerable">
              <Identifier Name="ILocalRedundantSet" />
            </Generic>
          </Type>
          <!--TODO: Need <xsl:template match="Modifiers" mode="Root"></xsl:template>-->
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="Subdirectories">
          <Documentation>
            <summary>
Enumerates generic sub-directory entities from the local database.
</summary>
            <value>A <see cref="IEnumerable{T}" /> that enumerates <see cref="ILocalSubdirectory" /> entities.</value>
          </Documentation>
          <Type>
            <Generic Name="IEnumerable">
              <Identifier Name="ILocalSubdirectory" />
            </Generic>
          </Type>
          <!--TODO: Need <xsl:template match="Modifiers" mode="Root"></xsl:template>-->
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="SubdirectoryAccessErrors">
          <Documentation>
            <summary>
Enumerates generic sub-directory access error entities from the local database.
</summary>
            <value>A <see cref="IEnumerable{T}" /> that enumerates <see cref="ILocalSubdirectoryAccessError" /> entities.</value>
          </Documentation>
          <Type>
            <Generic Name="IEnumerable">
              <Identifier Name="ILocalSubdirectoryAccessError" />
            </Generic>
          </Type>
          <!--TODO: Need <xsl:template match="Modifiers" mode="Root"></xsl:template>-->
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="SymbolicNames">
          <Documentation>
            <summary>
Enumerates generic symbolic name entities from the local database.
</summary>
            <value>A <see cref="IEnumerable{T}" /> that enumerates <see cref="ILocalSymbolicName" /> entities.</value>
          </Documentation>
          <Type>
            <Generic Name="IEnumerable">
              <Identifier Name="ILocalSymbolicName" />
            </Generic>
          </Type>
          <!--TODO: Need <xsl:template match="Modifiers" mode="Root"></xsl:template>-->
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="VolumeAccessErrors">
          <Documentation>
            <summary>
Enumerates generic volume access error entities from the local database.
</summary>
            <value>A <see cref="IEnumerable{T}" /> that enumerates <see cref="ILocalVolumeAccessError" /> entities.</value>
          </Documentation>
          <Type>
            <Generic Name="IEnumerable">
              <Identifier Name="ILocalVolumeAccessError" />
            </Generic>
          </Type>
          <!--TODO: Need <xsl:template match="Modifiers" mode="Root"></xsl:template>-->
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="Volumes">
          <Documentation>
            <summary>
Enumerates generic volume entities from the local database.
</summary>
            <value>A <see cref="IEnumerable{T}" /> that enumerates <see cref="ILocalVolume" /> entities.</value>
          </Documentation>
          <Type>
            <Generic Name="IEnumerable">
              <Identifier Name="ILocalVolume" />
            </Generic>
          </Type>
          <!--TODO: Need <xsl:template match="Modifiers" mode="Root"></xsl:template>-->
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="PersonalTagDefinitions">
          <Documentation>
            <summary>
Enumerates generic personal tag definition entities.
</summary>
            <value>A <see cref="IEnumerable{T}" /> that enumerates <see cref="ILocalPersonalTagDefinition" /> entities.</value>
          </Documentation>
          <Type>
            <Generic Name="IEnumerable">
              <Identifier Name="ILocalPersonalTagDefinition" />
            </Generic>
          </Type>
          <!--TODO: Need <xsl:template match="Modifiers" mode="Root"></xsl:template>-->
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="PersonalFileTags">
          <Documentation>
            <summary>
Enumerates generic personal file tag entities.
</summary>
            <value>A <see cref="IEnumerable{T}" /> that enumerates <see cref="ILocalPersonalFileTag" /> entities.</value>
          </Documentation>
          <Type>
            <Generic Name="IEnumerable">
              <Identifier Name="ILocalPersonalFileTag" />
            </Generic>
          </Type>
          <!--TODO: Need <xsl:template match="Modifiers" mode="Root"></xsl:template>-->
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="PersonalSubdirectoryTags">
          <Documentation>
            <summary>
Enumerates generic personal subdirectory tag entities.
</summary>
            <value>A <see cref="IEnumerable{T}" /> that enumerates <see cref="ILocalPersonalSubdirectoryTag" /> entities.</value>
          </Documentation>
          <Type>
            <Generic Name="IEnumerable">
              <Identifier Name="ILocalPersonalSubdirectoryTag" />
            </Generic>
          </Type>
          <!--TODO: Need <xsl:template match="Modifiers" mode="Root"></xsl:template>-->
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="PersonalVolumeTags">
          <Documentation>
            <summary>
Enumerates generic personal volume tag entities.
</summary>
            <value>A <see cref="IEnumerable{T}" /> that enumerates <see cref="ILocalPersonalVolumeTag" /> entities.</value>
          </Documentation>
          <Type>
            <Generic Name="IEnumerable">
              <Identifier Name="ILocalPersonalVolumeTag" />
            </Generic>
          </Type>
          <!--TODO: Need <xsl:template match="Modifiers" mode="Root"></xsl:template>-->
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="SharedTagDefinitions">
          <Documentation>
            <summary>
Enumerates generic shared tag definition entities.
</summary>
            <value>A <see cref="IEnumerable{T}" /> that enumerates <see cref="ILocalSharedTagDefinition" /> entities.</value>
          </Documentation>
          <Type>
            <Generic Name="IEnumerable">
              <Identifier Name="ILocalSharedTagDefinition" />
            </Generic>
          </Type>
          <!--TODO: Need <xsl:template match="Modifiers" mode="Root"></xsl:template>-->
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="SharedFileTags">
          <Documentation>
            <summary>
Enumerates generic shared file tag entities.
</summary>
            <value>A <see cref="IEnumerable{T}" /> that enumerates <see cref="ILocalSharedFileTag" /> entities.</value>
          </Documentation>
          <Type>
            <Generic Name="IEnumerable">
              <Identifier Name="ILocalSharedFileTag" />
            </Generic>
          </Type>
          <!--TODO: Need <xsl:template match="Modifiers" mode="Root"></xsl:template>-->
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="SharedSubdirectoryTags">
          <Documentation>
            <summary>
Enumerates generic shared subdirectory tag entities.
</summary>
            <value>A <see cref="IEnumerable{T}" /> that enumerates <see cref="ILocalSharedSubdirectoryTag" /> entities.</value>
          </Documentation>
          <Type>
            <Generic Name="IEnumerable">
              <Identifier Name="ILocalSharedSubdirectoryTag" />
            </Generic>
          </Type>
          <!--TODO: Need <xsl:template match="Modifiers" mode="Root"></xsl:template>-->
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="SharedVolumeTags">
          <Documentation>
            <summary>
Enumerates generic shared volume tag entities.
</summary>
            <value>A <see cref="IEnumerable{T}" /> that enumerates <see cref="ILocalSharedVolumeTag" /> entities.</value>
          </Documentation>
          <Type>
            <Generic Name="IEnumerable">
              <Identifier Name="ILocalSharedVolumeTag" />
            </Generic>
          </Type>
          <!--TODO: Need <xsl:template match="Modifiers" mode="Root"></xsl:template>-->
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="CrawlConfigurations">
          <Documentation>
            <summary>
Enumerates generic crawl configuration entities from the local database.
</summary>
          </Documentation>
          <Type>
            <Generic Name="IEnumerable">
              <Identifier Name="ILocalCrawlConfiguration" />
            </Generic>
          </Type>
          <!--TODO: Need <xsl:template match="Modifiers" mode="Root"></xsl:template>-->
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="CrawlJobLogs">
          <Documentation>
            <summary>
Enumerates generic crawl log entities from the local database.
</summary>
          </Documentation>
          <Type>
            <Generic Name="IEnumerable">
              <Identifier Name="ILocalCrawlJobLog" />
            </Generic>
          </Type>
          <!--TODO: Need <xsl:template match="Modifiers" mode="Root"></xsl:template>-->
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="FileSystemListing">
          <Documentation>
            <summary>
Enumerates entites from the file system listing view.
</summary>
            <value>Result entities from a view of <see cref="FileSystems" /> joined with <see cref="SymbolicNames" /> and <see cref="Volumes" />.</value>
          </Documentation>
          <Type>
            <Generic Name="IEnumerable">
              <Identifier Name="ILocalFileSystemListItem" />
            </Generic>
          </Type>
          <!--TODO: Need <xsl:template match="Modifiers" mode="Root"></xsl:template>-->
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="PersonalTagDefinitionListing">
          <Documentation>
            <summary>
Enumerates entites from the personal tag definition listing view.
</summary>
            <value>Result entities from a view of <see cref="PersonalTagDefinitions" /> joined with <see cref="Files" />, <see cref="Subdirectories" /> and <see cref="Volumes" />.</value>
          </Documentation>
          <Type>
            <Generic Name="IEnumerable">
              <Identifier Name="ILocalTagDefinitionListItem" />
            </Generic>
          </Type>
          <!--TODO: Need <xsl:template match="Modifiers" mode="Root"></xsl:template>-->
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="SharedTagDefinitionListing">
          <Documentation>
            <summary>
Enumerates entites from the shared tag definition listing view.
</summary>
            <value>Result entities from a view of <see cref="SharedTagDefinitions" /> joined with <see cref="Files" />, <see cref="Subdirectories" /> and <see cref="Volumes" />.</value>
          </Documentation>
          <Type>
            <Generic Name="IEnumerable">
              <Identifier Name="ILocalTagDefinitionListItem" />
            </Generic>
          </Type>
          <!--TODO: Need <xsl:template match="Modifiers" mode="Root"></xsl:template>-->
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="RedundantSetListing">
          <Documentation>
            <summary>
Enumerates entites from the redundant set listing view.
</summary>
            <value>Result entities from a view of <see cref="RedundantSets" /> joined with <see cref="BinaryPropertySets" /> and <see cref="Redundancies" />.</value>
          </Documentation>
          <Type>
            <Generic Name="IEnumerable">
              <Identifier Name="ILocalRedundantSetListItem" />
            </Generic>
          </Type>
          <!--TODO: Need <xsl:template match="Modifiers" mode="Root"></xsl:template>-->
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="VolumeListing">
          <Documentation>
            <summary>
Enumerates entites from the volume listing view intended for display listings of a specific file system.
</summary>
            <value>
Result entities from a view of <see cref="Volumes" /> joined with <see cref="Subdirectories" />, <see cref="VolumeAccessErrors" />, <see cref="SharedVolumeTags" />
and <see cref="PersonalVolumeTags" />.
</value>
          </Documentation>
          <Type>
            <Generic Name="IEnumerable">
              <Identifier Name="ILocalVolumeListItem" />
            </Generic>
          </Type>
          <!--TODO: Need <xsl:template match="Modifiers" mode="Root"></xsl:template>-->
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="VolumeListingWithFileSystem">
          <Documentation>
            <summary>
Enumerates entites from the volume listing view.
</summary>
            <value>
Result entities from a view of <see cref="Volumes" /> joined with <see cref="FileSystems" />, <see cref="Subdirectories" />, <see cref="VolumeAccessErrors" />,
<see cref="SharedVolumeTags" /> and <see cref="PersonalVolumeTags" />.
</value>
          </Documentation>
          <Type>
            <Generic Name="IEnumerable">
              <Identifier Name="ILocalVolumeListItemWithFileSystem" />
            </Generic>
          </Type>
          <!--TODO: Need <xsl:template match="Modifiers" mode="Root"></xsl:template>-->
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="SubdirectoryListing">
          <Documentation>
            <summary>
Enumerates entites from the subdirectory listing view.
</summary>
            <value>Result entities from a view of <see cref="Subdirectories" /> joined with <see cref="Files" />, <see cref="Subdirectories" /> and <see cref="CrawlConfigurations" />.</value>
          </Documentation>
          <Type>
            <Generic Name="IEnumerable">
              <Identifier Name="ILocalSubdirectoryListItem" />
            </Generic>
          </Type>
          <!--TODO: Need <xsl:template match="Modifiers" mode="Root"></xsl:template>-->
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="SubdirectoryListingWithAncestorNames">
          <Documentation>
            <summary>
Enumerates entites from the subdirectory listing view that includes ancestor path element names.
</summary>
            <value>Result entities from a view of <see cref="Subdirectories" /> joined with <see cref="Files" />, <see cref="Subdirectories" /> and <see cref="CrawlConfigurations" />.</value>
          </Documentation>
          <Type>
            <Generic Name="IEnumerable">
              <Identifier Name="ILocalSubdirectoryListItemWithAncestorNames" />
            </Generic>
          </Type>
          <!--TODO: Need <xsl:template match="Modifiers" mode="Root"></xsl:template>-->
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="FileListingWithAncestorNames">
          <Documentation>
            <summary>
Enumerates entites from the file listing view that includes ancestor path element names.
</summary>
            <value>Result entities from a view of <see cref="Files" /> joined with <see cref="Subdirectories" />.</value>
          </Documentation>
          <Type>
            <Generic Name="IEnumerable">
              <Identifier Name="ILocalFileListItemWithAncestorNames" />
            </Generic>
          </Type>
          <!--TODO: Need <xsl:template match="Modifiers" mode="Root"></xsl:template>-->
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="FileListingWithBinaryProperties">
          <Documentation>
            <summary>
Enumerates entites from the file listing view that includes size and hash.
</summary>
            <value>Result entities from a view of <see cref="Files" /> joined with <see cref="BinaryPropertySets" />.</value>
          </Documentation>
          <Type>
            <Generic Name="IEnumerable">
              <Identifier Name="ILocalFileListItemWithBinaryProperties" />
            </Generic>
          </Type>
          <!--TODO: Need <xsl:template match="Modifiers" mode="Root"></xsl:template>-->
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="FileListingWithBinaryPropertiesAndAncestorNames">
          <Documentation>
            <summary>
Enumerates entites from the file listing view that includes size, hash and ancestor path element names.
</summary>
            <value>Result entities from a view of <see cref="Files" /> joined with <see cref="Subdirectories" /> and <see cref="BinaryPropertySets" />.</value>
          </Documentation>
          <Type>
            <Generic Name="IEnumerable">
              <Identifier Name="ILocalFileListItemWithBinaryPropertiesAndAncestorNames" />
            </Generic>
          </Type>
          <!--TODO: Need <xsl:template match="Modifiers" mode="Root"></xsl:template>-->
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="CrawlConfigListing">
          <Documentation>
            <summary>
Enumerates entites from the file listing view that includes size and hash.
</summary>
            <value>Result entities from a view of <see cref="CrawlConfigurations" /> joined with <see cref="Subdirectories" />, <see cref="Volumes" />,  and <see cref="FileSystems" />.</value>
          </Documentation>
          <Type>
            <Generic Name="IEnumerable">
              <Identifier Name="ILocalCrawlConfigurationListItem" />
            </Generic>
          </Type>
          <!--TODO: Need <xsl:template match="Modifiers" mode="Root"></xsl:template>-->
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="CrawlConfigReport">
          <Documentation>
            <summary>
Enumerates entities representing crawl configuration result report rows.
</summary>
            <value>Result entities from a view of <see cref="CrawlConfigurations" /> joined with <see cref="Subdirectories" />, <see cref="Volumes" />,  and <see cref="FileSystems" />.</value>
          </Documentation>
          <Type>
            <Generic Name="IEnumerable">
              <Identifier Name="ILocalCrawlConfigReportItem" />
            </Generic>
          </Type>
          <!--TODO: Need <xsl:template match="Modifiers" mode="Root"></xsl:template>-->
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="CrawlJobListing">
          <Documentation>
            <summary>
Enumerates entites from the crawl job logs view that includes configuration information.
</summary>
            <value>Result entities from a view of <see cref="CrawlJobLogs" /> joined with <see cref="CrawlConfigurations" />.</value>
          </Documentation>
          <Type>
            <Generic Name="IEnumerable">
              <Identifier Name="ILocalCrawlJobListItem" />
            </Generic>
          </Type>
          <!--TODO: Need <xsl:template match="Modifiers" mode="Root"></xsl:template>-->
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="SummaryPropertiesListing">
          <Documentation>
            <summary>
Enumerates entites from the summary properties listing view that includes file counts.
</summary>
            <value>Result entities from a view of <see cref="SummaryPropertySets" /> joined with <see cref="Files" />.</value>
          </Documentation>
          <Type>
            <Generic Name="IEnumerable">
              <Identifier Name="ILocalSummaryPropertiesListItem" />
            </Generic>
          </Type>
          <!--TODO: Need <xsl:template match="Modifiers" mode="Root"></xsl:template>-->
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="DocumentPropertiesListing">
          <Documentation>
            <summary>
Enumerates entites from the document properties listing view that includes file counts.
</summary>
            <value>Result entities from a view of <see cref="DocumentPropertySets" /> joined with <see cref="Files" />.</value>
          </Documentation>
          <Type>
            <Generic Name="IEnumerable">
              <Identifier Name="ILocalDocumentPropertiesListItem" />
            </Generic>
          </Type>
          <!--TODO: Need <xsl:template match="Modifiers" mode="Root"></xsl:template>-->
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="AudioPropertiesListing">
          <Documentation>
            <summary>
Enumerates entites from the audio properties listing view that includes file counts.
</summary>
            <value>Result entities from a view of <see cref="AudioPropertySets" /> joined with <see cref="Files" />.</value>
          </Documentation>
          <Type>
            <Generic Name="IEnumerable">
              <Identifier Name="ILocalAudioPropertiesListItem" />
            </Generic>
          </Type>
          <!--TODO: Need <xsl:template match="Modifiers" mode="Root"></xsl:template>-->
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="DRMPropertiesListing">
          <Documentation>
            <summary>
Enumerates entites from the DRM properties listing view that includes file counts.
</summary>
            <value>Result entities from a view of <see cref="DRMPropertySets" /> joined with <see cref="Files" />.</value>
          </Documentation>
          <Type>
            <Generic Name="IEnumerable">
              <Identifier Name="ILocalDRMPropertiesListItem" />
            </Generic>
          </Type>
          <!--TODO: Need <xsl:template match="Modifiers" mode="Root"></xsl:template>-->
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="GPSPropertiesListing">
          <Documentation>
            <summary>
Enumerates entites from the GPS properties listing view that includes file counts.
</summary>
            <value>Result entities from a view of <see cref="GPSPropertySets" /> joined with <see cref="Files" />.</value>
          </Documentation>
          <Type>
            <Generic Name="IEnumerable">
              <Identifier Name="ILocalGPSPropertiesListItem" />
            </Generic>
          </Type>
          <!--TODO: Need <xsl:template match="Modifiers" mode="Root"></xsl:template>-->
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="ImagePropertiesListing">
          <Documentation>
            <summary>
Enumerates entites from the image properties listing view that includes file counts.
</summary>
            <value>Result entities from a view of <see cref="ImagePropertySets" /> joined with <see cref="Files" />.</value>
          </Documentation>
          <Type>
            <Generic Name="IEnumerable">
              <Identifier Name="ILocalImagePropertiesListItem" />
            </Generic>
          </Type>
          <!--TODO: Need <xsl:template match="Modifiers" mode="Root"></xsl:template>-->
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="MediaPropertiesListing">
          <Documentation>
            <summary>
Enumerates entites from the media properties listing view that includes file counts.
</summary>
            <value>Result entities from a view of <see cref="MediaPropertySets" /> joined with <see cref="Files" />.</value>
          </Documentation>
          <Type>
            <Generic Name="IEnumerable">
              <Identifier Name="ILocalMediaPropertiesListItem" />
            </Generic>
          </Type>
          <!--TODO: Need <xsl:template match="Modifiers" mode="Root"></xsl:template>-->
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="MusicPropertiesListing">
          <Documentation>
            <summary>
Enumerates entites from the music properties listing view that includes file counts.
</summary>
            <value>Result entities from a view of <see cref="MusicPropertySets" /> joined with <see cref="Files" />.</value>
          </Documentation>
          <Type>
            <Generic Name="IEnumerable">
              <Identifier Name="ILocalMusicPropertiesListItem" />
            </Generic>
          </Type>
          <!--TODO: Need <xsl:template match="Modifiers" mode="Root"></xsl:template>-->
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="PhotoPropertiesListing">
          <Documentation>
            <summary>
Enumerates entites from the photo properties listing view that includes file counts.
</summary>
            <value>Result entities from a view of <see cref="PhotoPropertySets" /> joined with <see cref="Files" />.</value>
          </Documentation>
          <Type>
            <Generic Name="IEnumerable">
              <Identifier Name="ILocalPhotoPropertiesListItem" />
            </Generic>
          </Type>
          <!--TODO: Need <xsl:template match="Modifiers" mode="Root"></xsl:template>-->
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="RecordedTVPropertiesListing">
          <Documentation>
            <summary>
Enumerates entites from the recorded TV properties listing view that includes file counts.
</summary>
            <value>Result entities from a view of <see cref="RecordedTVPropertySets" /> joined with <see cref="Files" />.</value>
          </Documentation>
          <Type>
            <Generic Name="IEnumerable">
              <Identifier Name="ILocalRecordedTVPropertiesListItem" />
            </Generic>
          </Type>
          <!--TODO: Need <xsl:template match="Modifiers" mode="Root"></xsl:template>-->
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="VideoPropertiesListing">
          <Documentation>
            <summary>
Enumerates entites from the video properties listing view that includes file counts.
</summary>
            <value>Result entities from a view of <see cref="VideoPropertySets" /> joined with <see cref="Files" />.</value>
          </Documentation>
          <Type>
            <Generic Name="IEnumerable">
              <Identifier Name="ILocalVideoPropertiesListItem" />
            </Generic>
          </Type>
          <!--TODO: Need <xsl:template match="Modifiers" mode="Root"></xsl:template>-->
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="PersonalVolumeTagListing">
          <Documentation>
            <summary>
Enumerates entites from the personal volume tags listing view that includes volume and tag properties.
</summary>
            <value>Result entities from a view of <see cref="PersonalVolumeTags" /> joined with <see cref="Volumes" /> and <see cref="PersonalTagDefinitions" />.</value>
          </Documentation>
          <Type>
            <Generic Name="IEnumerable">
              <Identifier Name="ILocalItemTagListItem" />
            </Generic>
          </Type>
          <!--TODO: Need <xsl:template match="Modifiers" mode="Root"></xsl:template>-->
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="SharedVolumeTagListing">
          <Documentation>
            <summary>
Enumerates entites from the shared volume tags listing view that includes volume and tag properties.
</summary>
            <value>Result entities from a view of <see cref="SharedVolumeTags" /> joined with <see cref="Volumes" /> and <see cref="SharedTagDefinitions" />.</value>
          </Documentation>
          <Type>
            <Generic Name="IEnumerable">
              <Identifier Name="ILocalItemTagListItem" />
            </Generic>
          </Type>
          <!--TODO: Need <xsl:template match="Modifiers" mode="Root"></xsl:template>-->
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="PersonalSubdirectoryTagListing">
          <Documentation>
            <summary>
Enumerates entites from the personal subdirectory tags listing view that includes subdirectory and tag properties.
</summary>
            <value>Result entities from a view of <see cref="PersonalSubdirectoryTags" /> joined with <see cref="Subdirectories" /> and <see cref="PersonalTagDefinitions" />.</value>
          </Documentation>
          <Type>
            <Generic Name="IEnumerable">
              <Identifier Name="ILocalItemTagListItem" />
            </Generic>
          </Type>
          <!--TODO: Need <xsl:template match="Modifiers" mode="Root"></xsl:template>-->
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="SharedSubdirectoryTagListing">
          <Documentation>
            <summary>
Enumerates entites from the shared subdirectory tags listing view that includes file and tag properties.
</summary>
            <value>Result entities from a view of <see cref="SharedSubdirectoryTags" /> joined with <see cref="Subdirectories" /> and <see cref="SharedTagDefinitions" />.</value>
          </Documentation>
          <Type>
            <Generic Name="IEnumerable">
              <Identifier Name="ILocalItemTagListItem" />
            </Generic>
          </Type>
          <!--TODO: Need <xsl:template match="Modifiers" mode="Root"></xsl:template>-->
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="PersonalFileTagListing">
          <Documentation>
            <summary>
Enumerates entites from the personal file tags listing view that includes file and tag properties.
</summary>
            <value>Result entities from a view of <see cref="PersonalFileTags" /> joined with <see cref="Files" /> and <see cref="PersonalTagDefinitions" />.</value>
          </Documentation>
          <Type>
            <Generic Name="IEnumerable">
              <Identifier Name="ILocalItemTagListItem" />
            </Generic>
          </Type>
          <!--TODO: Need <xsl:template match="Modifiers" mode="Root"></xsl:template>-->
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="SharedFileTagListing">
          <Documentation>
            <summary>
Enumerates entites from the shared file tag listing view that includes file and tag properties.
</summary>
            <value>Result entities from a view of <see cref="SharedFileTags" /> joined with <see cref="Files" /> and <see cref="SharedTagDefinitions" />.</value>
          </Documentation>
          <Type>
            <Generic Name="IEnumerable">
              <Identifier Name="ILocalItemTagListItem" />
            </Generic>
          </Type>
          <!--TODO: Need <xsl:template match="Modifiers" mode="Root"></xsl:template>-->
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Method Name="FindMatchingAsync" OTHER="TODO: Need translation for Modifier[.='new']">
          <Documentation>
            <summary>
Finds the generic <see cref="ILocalSummaryPropertySet" /> in the local database that matches the specified summary properties.
</summary>
            <param name="properties">The <see cref="ISummaryProperties" /> object containing the property values to match.</param>
            <param name="cancellationToken">The cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
            <returns>The generic <see cref="ILocalSummaryPropertySet" /> for the matching entity or <see langword="null" /> if no match was found.</returns>
          </Documentation>
          <Parameters>
            <Parameter Name="properties">
              <Type>
                <Identifier Name="ISummaryProperties" />
              </Type>
            </Parameter>
            <Parameter Name="cancellationToken">
              <Type>
                <Identifier Name="CancellationToken" />
              </Type>
            </Parameter>
          </Parameters>
          <ReturnType>
            <Generic Name="Task">
              <Identifier Name="ILocalSummaryPropertySet" />
            </Generic>
          </ReturnType>
        </Method>
        <Method Name="FindMatchingAsync" OTHER="TODO: Need translation for Modifier[.='new']">
          <Documentation>
            <summary>
Finds the generic <see cref="ILocalDocumentPropertySet" /> in the local database that matches the specified summary properties.
</summary>
            <param name="properties">The <see cref="IDocumentProperties" /> object containing the property values to match.</param>
            <param name="cancellationToken">The cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
            <returns>The generic <see cref="ILocalDocumentPropertySet" /> for the matching entity or <see langword="null" /> if no match was found.</returns>
          </Documentation>
          <Parameters>
            <Parameter Name="properties">
              <Type>
                <Identifier Name="IDocumentProperties" />
              </Type>
            </Parameter>
            <Parameter Name="cancellationToken">
              <Type>
                <Identifier Name="CancellationToken" />
              </Type>
            </Parameter>
          </Parameters>
          <ReturnType>
            <Generic Name="Task">
              <Identifier Name="ILocalDocumentPropertySet" />
            </Generic>
          </ReturnType>
        </Method>
        <Method Name="FindMatchingAsync" OTHER="TODO: Need translation for Modifier[.='new']">
          <Documentation>
            <summary>
Finds the generic <see cref="ILocalAudioPropertySet" /> in the local database that matches the specified summary properties.
</summary>
            <param name="properties">The <see cref="IAudioProperties" /> object containing the property values to match.</param>
            <param name="cancellationToken">The cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
            <returns>The generic <see cref="ILocalAudioPropertySet" /> for the matching entity or <see langword="null" /> if no match was found.</returns>
          </Documentation>
          <Parameters>
            <Parameter Name="properties">
              <Type>
                <Identifier Name="IAudioProperties" />
              </Type>
            </Parameter>
            <Parameter Name="cancellationToken">
              <Type>
                <Identifier Name="CancellationToken" />
              </Type>
            </Parameter>
          </Parameters>
          <ReturnType>
            <Generic Name="Task">
              <Identifier Name="ILocalAudioPropertySet" />
            </Generic>
          </ReturnType>
        </Method>
        <Method Name="FindMatchingAsync" OTHER="TODO: Need translation for Modifier[.='new']">
          <Documentation>
            <summary>
Finds the generic <see cref="ILocalDRMPropertySet" /> in the local database that matches the specified summary properties.
</summary>
            <param name="properties">The <see cref="IDRMProperties" /> object containing the property values to match.</param>
            <param name="cancellationToken">The cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
            <returns>The generic <see cref="ILocalDRMPropertySet" /> for the matching entity or <see langword="null" /> if no match was found.</returns>
          </Documentation>
          <Parameters>
            <Parameter Name="properties">
              <Type>
                <Identifier Name="IDRMProperties" />
              </Type>
            </Parameter>
            <Parameter Name="cancellationToken">
              <Type>
                <Identifier Name="CancellationToken" />
              </Type>
            </Parameter>
          </Parameters>
          <ReturnType>
            <Generic Name="Task">
              <Identifier Name="ILocalDRMPropertySet" />
            </Generic>
          </ReturnType>
        </Method>
        <Method Name="FindMatchingAsync" OTHER="TODO: Need translation for Modifier[.='new']">
          <Documentation>
            <summary>
Finds the generic <see cref="ILocalGPSPropertySet" /> in the local database that matches the specified summary properties.
</summary>
            <param name="properties">The <see cref="IGPSProperties" /> object containing the property values to match.</param>
            <param name="cancellationToken">The cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
            <returns>The generic <see cref="ILocalGPSPropertySet" /> for the matching entity or <see langword="null" /> if no match was found.</returns>
          </Documentation>
          <Parameters>
            <Parameter Name="properties">
              <Type>
                <Identifier Name="IGPSProperties" />
              </Type>
            </Parameter>
            <Parameter Name="cancellationToken">
              <Type>
                <Identifier Name="CancellationToken" />
              </Type>
            </Parameter>
          </Parameters>
          <ReturnType>
            <Generic Name="Task">
              <Identifier Name="ILocalGPSPropertySet" />
            </Generic>
          </ReturnType>
        </Method>
        <Method Name="FindMatchingAsync" OTHER="TODO: Need translation for Modifier[.='new']">
          <Documentation>
            <summary>
Finds the generic <see cref="ILocalImagePropertySet" /> in the local database that matches the specified summary properties.
</summary>
            <param name="properties">The <see cref="IImageProperties" /> object containing the property values to match.</param>
            <param name="cancellationToken">The cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
            <returns>The generic <see cref="ILocalImagePropertySet" /> for the matching entity or <see langword="null" /> if no match was found.</returns>
          </Documentation>
          <Parameters>
            <Parameter Name="properties">
              <Type>
                <Identifier Name="IImageProperties" />
              </Type>
            </Parameter>
            <Parameter Name="cancellationToken">
              <Type>
                <Identifier Name="CancellationToken" />
              </Type>
            </Parameter>
          </Parameters>
          <ReturnType>
            <Generic Name="Task">
              <Identifier Name="ILocalImagePropertySet" />
            </Generic>
          </ReturnType>
        </Method>
        <Method Name="FindMatchingAsync" OTHER="TODO: Need translation for Modifier[.='new']">
          <Documentation>
            <summary>
Finds the generic <see cref="ILocalMediaPropertySet" /> in the local database that matches the specified summary properties.
</summary>
            <param name="properties">The <see cref="IMediaProperties" /> object containing the property values to match.</param>
            <param name="cancellationToken">The cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
            <returns>The generic <see cref="ILocalMediaPropertySet" /> for the matching entity or <see langword="null" /> if no match was found.</returns>
          </Documentation>
          <Parameters>
            <Parameter Name="properties">
              <Type>
                <Identifier Name="IMediaProperties" />
              </Type>
            </Parameter>
            <Parameter Name="cancellationToken">
              <Type>
                <Identifier Name="CancellationToken" />
              </Type>
            </Parameter>
          </Parameters>
          <ReturnType>
            <Generic Name="Task">
              <Identifier Name="ILocalMediaPropertySet" />
            </Generic>
          </ReturnType>
        </Method>
        <Method Name="FindMatchingAsync" OTHER="TODO: Need translation for Modifier[.='new']">
          <Documentation>
            <summary>
Finds the generic <see cref="ILocalMusicPropertySet" /> in the local database that matches the specified summary properties.
</summary>
            <param name="properties">The <see cref="IMusicProperties" /> object containing the property values to match.</param>
            <param name="cancellationToken">The cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
            <returns>The generic <see cref="ILocalMusicPropertySet" /> for the matching entity or <see langword="null" /> if no match was found.</returns>
          </Documentation>
          <Parameters>
            <Parameter Name="properties">
              <Type>
                <Identifier Name="IMusicProperties" />
              </Type>
            </Parameter>
            <Parameter Name="cancellationToken">
              <Type>
                <Identifier Name="CancellationToken" />
              </Type>
            </Parameter>
          </Parameters>
          <ReturnType>
            <Generic Name="Task">
              <Identifier Name="ILocalMusicPropertySet" />
            </Generic>
          </ReturnType>
        </Method>
        <Method Name="FindMatchingAsync" OTHER="TODO: Need translation for Modifier[.='new']">
          <Documentation>
            <summary>
Finds the generic <see cref="ILocalPhotoPropertySet" /> in the local database that matches the specified summary properties.
</summary>
            <param name="properties">The <see cref="IPhotoProperties" /> object containing the property values to match.</param>
            <param name="cancellationToken">The cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
            <returns>The generic <see cref="ILocalPhotoPropertySet" /> for the matching entity or <see langword="null" /> if no match was found.</returns>
          </Documentation>
          <Parameters>
            <Parameter Name="properties">
              <Type>
                <Identifier Name="IPhotoProperties" />
              </Type>
            </Parameter>
            <Parameter Name="cancellationToken">
              <Type>
                <Identifier Name="CancellationToken" />
              </Type>
            </Parameter>
          </Parameters>
          <ReturnType>
            <Generic Name="Task">
              <Identifier Name="ILocalPhotoPropertySet" />
            </Generic>
          </ReturnType>
        </Method>
        <Method Name="FindMatchingAsync" OTHER="TODO: Need translation for Modifier[.='new']">
          <Documentation>
            <summary>
Finds the generic <see cref="ILocalRecordedTVPropertySet" /> in the local database that matches the specified summary properties.
</summary>
            <param name="properties">The <see cref="IRecordedTVProperties" /> object containing the property values to match.</param>
            <param name="cancellationToken">The cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
            <returns>The generic <see cref="ILocalRecordedTVPropertySet" /> for the matching entity or <see langword="null" /> if no match was found.</returns>
          </Documentation>
          <Parameters>
            <Parameter Name="properties">
              <Type>
                <Identifier Name="IRecordedTVProperties" />
              </Type>
            </Parameter>
            <Parameter Name="cancellationToken">
              <Type>
                <Identifier Name="CancellationToken" />
              </Type>
            </Parameter>
          </Parameters>
          <ReturnType>
            <Generic Name="Task">
              <Identifier Name="ILocalRecordedTVPropertySet" />
            </Generic>
          </ReturnType>
        </Method>
        <Method Name="FindMatchingAsync" OTHER="TODO: Need translation for Modifier[.='new']">
          <Documentation>
            <summary>
Finds the generic <see cref="ILocalVideoPropertySet" /> in the local database that matches the specified summary properties.
</summary>
            <param name="properties">The <see cref="IVideoProperties" /> object containing the property values to match.</param>
            <param name="cancellationToken">The cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
            <returns>The generic <see cref="ILocalVideoPropertySet" /> for the matching entity or <see langword="null" /> if no match was found.</returns>
          </Documentation>
          <Parameters>
            <Parameter Name="properties">
              <Type>
                <Identifier Name="IVideoProperties" />
              </Type>
            </Parameter>
            <Parameter Name="cancellationToken">
              <Type>
                <Identifier Name="CancellationToken" />
              </Type>
            </Parameter>
          </Parameters>
          <ReturnType>
            <Generic Name="Task">
              <Identifier Name="ILocalVideoPropertySet" />
            </Generic>
          </ReturnType>
        </Method>
      </Interface>
    </Namespace>
  </Source>
  <Source Path="Local\Model\ILocalDbEntity.cs" Id="4555b1ab-802d-4b8b-9eb1-61403691640b">
    <Using Name="FsInfoCat.Model" />
    <Using Name="System" />
    <Using Name="System.ComponentModel.DataAnnotations" />
    <Namespace Name="FsInfoCat.Local.Model">
      <Interface Name="ILocalDbEntity" Access="public">
        <Documentation>
          <summary>
Base interface for all database entity objects for the database which is hosted on the local machine.
</summary>
          <seealso cref="ILocalDbContext" />
          <seealso cref="IDbEntity" />
          <seealso cref="ILocalBinaryPropertySet" />
          <seealso cref="ILocalComparison" />
          <seealso cref="ILocalCrawlConfiguration" />
          <seealso cref="ILocalCrawlConfigurationListItem" />
          <seealso cref="ILocalCrawlConfigurationRow" />
          <seealso cref="ILocalCrawlJobLogRow" />
          <seealso cref="ILocalDbFsItemRow" />
          <seealso cref="ILocalFileSystem" />
          <seealso cref="ILocalFileSystemRow" />
          <seealso cref="ILocalItemTagRow" />
          <seealso cref="ILocalPropertiesRow" />
          <seealso cref="ILocalRedundancy" />
          <seealso cref="ILocalRedundantSetRow" />
          <seealso cref="ILocalSymbolicNameRow" />
          <seealso cref="ILocalTagDefinitionRow" />
          <seealso cref="ILocalVolumeRow" />
          <seealso cref="ILocalAccessError.Target" />
          <seealso cref="ILocalItemTag.Tagged" />
          <seealso cref="Upstream.Model.IUpstreamDbEntity" />
        </Documentation>
        <Implements>
          <SimpleBaseType Name="IDbEntity" />
        </Implements>
        <Property Name="UpstreamId">
          <Documentation>
            <summary>
Gets the value of the primary key for the corresponding <see cref="Upstream.Model.IUpstreamDbEntity">upstream (remote) database entity</see>.
</summary>
            <value>
The value of the primary key of the corresponding <see cref="Upstream.Model.IUpstreamDbEntity">upstream (remote) database entity</see>;
otherwise, <see langword="null" /> if there is no corresponding entity.
</value>
            <remarks>
If this value is <see langword="null" />, then <see cref="LastSynchronizedOn" /> should also be <see langword="null" />.
Likewise, if this is not <see langword="null" />, then <see cref="LastSynchronizedOn" /> should not be <see langword="null" />, either.
</remarks>
          </Documentation>
          <Display Name="DisplayName_UpstreamId" ShortName="DisplayName_UpstreamId" Description="DisplayName_UpstreamId" />
          <Type>
            <!--TODO: Need <xsl:template match="NullableType" mode="Types"></xsl:template>-->
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="LastSynchronizedOn">
          <Documentation>
            <summary>
Gets the date and time when the current entity was sychronized with the corresponding <see cref="Upstream.Model.IUpstreamDbEntity">upstream (remote) database entity</see>.
</summary>
            <value>
date and time when the current entity was sychronized with the corresponding <see cref="Upstream.Model.IUpstreamDbEntity">upstream (remote) database entity</see>;
otherwise, <see langword="null" /> if there is no corresponding entity.
</value>
            <remarks>
If this value is <see langword="null" />, then <see cref="UpstreamId" /> should also be <see langword="null" />.
Likewise, if this is not <see langword="null" />, then <see cref="UpstreamId" /> should not be <see langword="null" />, either.
</remarks>
          </Documentation>
          <Display Name="DisplayName_LastSynchronizedOn" ShortName="DisplayName_LastSynchronizedOn" Description="DisplayName_LastSynchronizedOn" />
          <Type>
            <!--TODO: Need <xsl:template match="NullableType" mode="Types"></xsl:template>-->
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
      </Interface>
    </Namespace>
  </Source>
  <Source Path="Local\Model\ILocalDbFsItem.cs" Id="0e917de4-b80a-4ae8-88c0-d0ef15e78c3c">
    <Using Name="FsInfoCat.Model" />
    <Using Name="System.Collections.Generic" />
    <Using Name="System.ComponentModel.DataAnnotations" />
    <Namespace Name="FsInfoCat.Local.Model">
      <Interface Name="ILocalDbFsItem" Access="public">
        <Documentation>
          <summary>
Base interface for a database entity that represents a file system node on the local host machine.
</summary>
          <seealso cref="IDbFsItem" />
          <seealso cref="ILocalDbFsItemRow" />
          <seealso cref="ILocalFile" />
          <seealso cref="ILocalSubdirectory" />
          <seealso cref="Upstream.Model.IUpstreamDbFsItem" />
        </Documentation>
        <Implements>
          <SimpleBaseType Name="ILocalDbFsItemRow" />
          <SimpleBaseType Name="IDbFsItem" />
        </Implements>
        <Property Name="Parent">
          <Documentation>
            <summary>
Gets the parent subdirectory.
</summary>
            <value>The parent <see cref="ILocalSubdirectory" /> or <see langword="null" /> if this is the root <see cref="ILocalSubdirectory" />.</value>
            <remarks>
If the current entity is a <see cref="ILocalSubdirectory" /> and this is <see langword="null" />,
then <see cref="ILocalSubdirectory.Volume" /> should not be <see langword="null" />, and vice-versa;
otherwise, if the current entity is a <see cref="ILocalFile" />, then this should never be <see langword="null" />.
</remarks>
          </Documentation>
          <Display Name="DisplayName_Parent" ShortName="DisplayName_Parent" Description="DisplayName_Parent" />
          <Type>
            <Identifier Name="ILocalSubdirectory" />
          </Type>
          <!--TODO: Need <xsl:template match="Modifiers" mode="Root"></xsl:template>-->
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="AccessErrors">
          <Documentation>
            <summary>
Gets the access errors for the current file system item.
</summary>
            <value>The access errors for the current file system item.</value>
          </Documentation>
          <Display Name="DisplayName_AccessErrors" ShortName="DisplayName_AccessErrors" Description="DisplayName_AccessErrors" />
          <Type>
            <Generic Name="IEnumerable">
              <Identifier Name="ILocalAccessError" />
            </Generic>
          </Type>
          <!--TODO: Need <xsl:template match="Modifiers" mode="Root"></xsl:template>-->
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="PersonalTags">
          <Documentation>
            <summary>
Gets the personal tags associated with the current file system item.
</summary>
            <value>The <see cref="ILocalPersonalTag" /> entities that associate <see cref="ILocalPersonalTagDefinition" /> entities with the current file system item.</value>
          </Documentation>
          <Display Name="DisplayName_PersonalTags" ShortName="DisplayName_PersonalTags" Description="DisplayName_PersonalTags" />
          <Type>
            <Generic Name="IEnumerable">
              <Identifier Name="ILocalPersonalTag" />
            </Generic>
          </Type>
          <!--TODO: Need <xsl:template match="Modifiers" mode="Root"></xsl:template>-->
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="SharedTags">
          <Documentation>
            <summary>
Gets the shared tags associated with the current file system item.
</summary>
            <value>The <see cref="ILocalSharedTag" /> entities that associate <see cref="ILocalSharedTagDefinition" /> entities with the current file system item.</value>
          </Documentation>
          <Display Name="DisplayName_PersonalTags" ShortName="DisplayName_PersonalTags" Description="DisplayName_PersonalTags" />
          <Type>
            <Generic Name="IEnumerable">
              <Identifier Name="ILocalSharedTag" />
            </Generic>
          </Type>
          <!--TODO: Need <xsl:template match="Modifiers" mode="Root"></xsl:template>-->
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
      </Interface>
    </Namespace>
  </Source>
  <Source Path="Local\Model\ILocalDbFsItemListItem.cs" Id="99fa7191-68c5-4a0e-97ef-8e67d7313b4f">
    <Using Name="FsInfoCat.Model" />
    <Namespace Name="FsInfoCat.Local.Model">
      <Interface Name="ILocalDbFsItemListItem" Access="public">
        <Documentation>
          <summary>
Generic interface for database view entities derived from the <see cref="ILocalDbContext.Files" /> or <see cref="ILocalDbContext.Subdirectories" /> table.
</summary>
          <seealso cref="IDbFsItemListItem" />
          <seealso cref="ILocalDbFsItemRow" />
          <seealso cref="Upstream.Model.IUpstreamDbFsItemListItem" />
        </Documentation>
        <Implements>
          <SimpleBaseType Name="IDbFsItemListItem" />
          <SimpleBaseType Name="ILocalDbFsItemRow" />
        </Implements>
      </Interface>
    </Namespace>
  </Source>
  <Source Path="Local\Model\ILocalDbFsItemListItemWithAncestorNames.cs" Id="8924d116-182b-4e61-8e50-a1fa282708b2">
    <Using Name="FsInfoCat.Model" />
    <Namespace Name="FsInfoCat.Local.Model">
      <Interface Name="ILocalDbFsItemListItemWithAncestorNames" Access="public">
        <Documentation>
          <summary>
Generic interface for database view entities derived from the <see cref="ILocalDbContext.Files" /> or <see cref="ILocalDbContext.Subdirectories" /> table
and also contains path names as well as columns from the volume and file system entities.
</summary>
          <seealso cref="IDbFsItemListItemWithAncestorNames" />
          <seealso cref="ILocalDbFsItemListItem" />
          <seealso cref="Upstream.Model.IUpstreamDbFsItemListItemWithAncestorNames" />
        </Documentation>
        <Implements>
          <SimpleBaseType Name="IDbFsItemListItemWithAncestorNames" />
          <SimpleBaseType Name="ILocalDbFsItemListItem" />
        </Implements>
      </Interface>
    </Namespace>
  </Source>
  <Source Path="Local\Model\ILocalDbFsItemRow.cs" Id="1c8f58b6-849a-441d-a2d9-84ea6e79ef76">
    <Using Name="FsInfoCat.Model" />
    <Namespace Name="FsInfoCat.Local.Model">
      <Interface Name="ILocalDbFsItemRow" Access="public">
        <Documentation>
          <summary>
Generic interface for a database entity that represents a file system node.
</summary>
          <seealso cref="IDbFsItemRow" />
          <seealso cref="ILocalDbEntity" />
          <seealso cref="ILocalDbFsItem" />
          <seealso cref="ILocalDbFsItemListItem" />
          <seealso cref="ILocalFileRow" />
          <seealso cref="ILocalSubdirectoryRow" />
          <seealso cref="Upstream.Model.IUpstreamDbFsItemRow" />
        </Documentation>
        <Implements>
          <SimpleBaseType Name="ILocalDbEntity" />
          <SimpleBaseType Name="IDbFsItemRow" />
        </Implements>
      </Interface>
    </Namespace>
  </Source>
  <Source Path="Local\Model\ILocalDocumentPropertiesListItem.cs" Id="8553c2d9-b0c5-4c33-a0b0-2d769e871bbf">
    <Using Name="FsInfoCat.Model" />
    <Namespace Name="FsInfoCat.Local.Model">
      <Interface Name="ILocalDocumentPropertiesListItem" Access="public">
        <Documentation>
          <summary>
Generic interface for list item entities containing extended file properties for document files.
</summary>
          <seealso cref="ILocalDocumentPropertiesRow" />
          <seealso cref="ILocalPropertiesListItem" />
          <seealso cref="IDocumentPropertiesListItem" />
          <seealso cref="Upstream.Model.IUpstreamDocumentPropertiesListItem" />
        </Documentation>
        <Implements>
          <SimpleBaseType Name="ILocalDocumentPropertiesRow" />
          <SimpleBaseType Name="ILocalPropertiesListItem" />
          <SimpleBaseType Name="IDocumentPropertiesListItem" />
        </Implements>
      </Interface>
    </Namespace>
  </Source>
  <Source Path="Local\Model\ILocalDocumentPropertiesRow.cs" Id="465e1ab2-9619-4505-99fe-f212d6b4c344">
    <Using Name="FsInfoCat.Model" />
    <Namespace Name="FsInfoCat.Local.Model">
      <Interface Name="ILocalDocumentPropertiesRow" Access="public">
        <Documentation>
          <summary>
Generic interface for entities containing extended file properties for document files.
</summary>
          <seealso cref="ILocalPropertiesRow" />
          <seealso cref="IDocumentPropertiesRow" />
          <seealso cref="Upstream.Model.IUpstreamDocumentPropertiesRow" />
        </Documentation>
        <Implements>
          <SimpleBaseType Name="ILocalPropertiesRow" />
          <SimpleBaseType Name="IDocumentPropertiesRow" />
        </Implements>
      </Interface>
    </Namespace>
  </Source>
  <Source Path="Local\Model\ILocalDocumentPropertySet.cs" Id="4d239dc9-8e47-4217-b1a3-6fe2071b5f1a">
    <Using Name="FsInfoCat.Model" />
    <Using Name="System" />
    <Namespace Name="FsInfoCat.Local.Model">
      <Interface Name="ILocalDocumentPropertySet" Access="public">
        <Documentation>
          <summary>
Contains extended document file property values.
</summary>
          <seealso cref="ILocalDocumentPropertiesRow" />
          <seealso cref="ILocalPropertySet" />
          <seealso cref="IDocumentPropertySet" />
          <seealso cref="IEquatable{ILocalDocumentPropertySet}" />
          <seealso cref="Upstream.Model.IUpstreamDocumentPropertySet" />
        </Documentation>
        <Implements>
          <SimpleBaseType Name="ILocalDocumentPropertiesRow" />
          <SimpleBaseType Name="ILocalPropertySet" />
          <SimpleBaseType Name="IDocumentPropertySet" />
          <SimpleBaseType>
            <!--TODO: Need <xsl:template match="GenericName" mode="BaseTypes"></xsl:template>-->
          </SimpleBaseType>
        </Implements>
      </Interface>
    </Namespace>
  </Source>
  <Source Path="Local\Model\ILocalDRMPropertiesListItem.cs" Id="75573f39-0647-40a4-974b-af9537b9c069">
    <Using Name="FsInfoCat.Model" />
    <Namespace Name="FsInfoCat.Local.Model">
      <Interface Name="ILocalDRMPropertiesListItem" Access="public">
        <Documentation>
          <summary>
Generic interface for list item entities containing extended file DRM information properties.
</summary>
          <seealso cref="ILocalDRMPropertiesRow" />
          <seealso cref="ILocalPropertiesListItem" />
          <seealso cref="IDRMPropertiesListItem" />
          <seealso cref="Upstream.Model.IUpstreamDRMPropertiesListItem" />
        </Documentation>
        <Implements>
          <SimpleBaseType Name="ILocalDRMPropertiesRow" />
          <SimpleBaseType Name="ILocalPropertiesListItem" />
          <SimpleBaseType Name="IDRMPropertiesListItem" />
        </Implements>
      </Interface>
    </Namespace>
  </Source>
  <Source Path="Local\Model\ILocalDRMPropertiesRow.cs" Id="7e9277f8-adc1-460a-815b-6d599769518f">
    <Using Name="FsInfoCat.Model" />
    <Namespace Name="FsInfoCat.Local.Model">
      <Interface Name="ILocalDRMPropertiesRow" Access="public">
        <Documentation>
          <summary>
Generic interface for entities containing extended file DRM information properties.
</summary>
          <seealso cref="ILocalPropertiesRow" />
          <seealso cref="IDRMPropertiesRow" />
          <seealso cref="Upstream.Model.IUpstreamDRMPropertiesRow" />
        </Documentation>
        <Implements>
          <SimpleBaseType Name="ILocalPropertiesRow" />
          <SimpleBaseType Name="IDRMPropertiesRow" />
        </Implements>
      </Interface>
    </Namespace>
  </Source>
  <Source Path="Local\Model\ILocalDRMPropertySet.cs" Id="9d1d23fd-1f8d-450a-84cc-f0253d3b7e72">
    <Using Name="FsInfoCat.Model" />
    <Using Name="System" />
    <Namespace Name="FsInfoCat.Local.Model">
      <Interface Name="ILocalDRMPropertySet" Access="public">
        <Documentation>
          <summary>
Contains extended DRM property values.
</summary>
          <seealso cref="ILocalDRMPropertiesRow" />
          <seealso cref="ILocalPropertySet" />
          <seealso cref="IDRMPropertySet" />
          <seealso cref="IEquatable{ILocalDRMPropertySet}" />
          <seealso cref="Upstream.Model.IUpstreamDRMPropertySet" />
        </Documentation>
        <Implements>
          <SimpleBaseType Name="ILocalDRMPropertiesRow" />
          <SimpleBaseType Name="ILocalPropertySet" />
          <SimpleBaseType Name="IDRMPropertySet" />
          <SimpleBaseType>
            <!--TODO: Need <xsl:template match="GenericName" mode="BaseTypes"></xsl:template>-->
          </SimpleBaseType>
        </Implements>
      </Interface>
    </Namespace>
  </Source>
  <Source Path="Local\Model\ILocalFile.cs" Id="da4d0aec-b022-4496-b551-a2e6f9763f66">
    <Using Name="FsInfoCat.Model" />
    <Using Name="System" />
    <Using Name="System.Collections.Generic" />
    <Using Name="System.ComponentModel.DataAnnotations" />
    <Namespace Name="FsInfoCat.Local.Model">
      <Interface Name="ILocalFile" Access="public">
        <Documentation>
          <summary>
Represents a structural instance of file on a local host file system.
</summary>
          <seealso cref="ILocalDbFsItem" />
          <seealso cref="IFile" />
          <seealso cref="IEquatable{ILocalFile}" />
          <seealso cref="Upstream.Model.IUpstreamFile" />
        </Documentation>
        <Implements>
          <SimpleBaseType Name="ILocalDbFsItem" />
          <SimpleBaseType Name="IFile" />
          <SimpleBaseType Name="ILocalFileRow" />
          <SimpleBaseType>
            <!--TODO: Need <xsl:template match="GenericName" mode="BaseTypes"></xsl:template>-->
          </SimpleBaseType>
        </Implements>
        <Property Name="BinaryProperties">
          <Documentation>
            <summary>
Gets the binary properties for the current file.
</summary>
            <value>The generic <see cref="ILocalBinaryPropertySet" /> that contains the file size and optionally, the <see cref="MD5Hash">MD5 hash</see> value of its binary
contents.</value>
          </Documentation>
          <Display Name="DisplayName_BinaryProperties" ShortName="DisplayName_BinaryProperties" Description="DisplayName_BinaryProperties" />
          <Type>
            <Identifier Name="ILocalBinaryPropertySet" />
          </Type>
          <!--TODO: Need <xsl:template match="Modifiers" mode="Root"></xsl:template>-->
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="SummaryProperties">
          <Documentation>
            <summary>
Gets the summary properties for the current file.
</summary>
            <value>The generic <see cref="ILocalBinaryPropertySet" /> that contains the summary properties for the current file or <see langword="null" /> if no summary properties
are defined on the current file.</value>
          </Documentation>
          <Display Name="DisplayName_SummaryProperties" ShortName="DisplayName_SummaryProperties" Description="DisplayName_SummaryProperties" />
          <Type>
            <Identifier Name="ILocalSummaryPropertySet" />
          </Type>
          <!--TODO: Need <xsl:template match="Modifiers" mode="Root"></xsl:template>-->
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="DocumentProperties">
          <Documentation>
            <summary>
Gets the document properties for the current file.
</summary>
            <value>The generic <see cref="ILocalDocumentPropertySet" /> that contains the document properties for the current file or <see langword="null" /> if no document
properties are defined on the current file.</value>
          </Documentation>
          <Display Name="DisplayName_DocumentProperties" ShortName="DisplayName_DocumentProperties" Description="DisplayName_DocumentProperties" />
          <Type>
            <Identifier Name="ILocalDocumentPropertySet" />
          </Type>
          <!--TODO: Need <xsl:template match="Modifiers" mode="Root"></xsl:template>-->
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="AudioProperties">
          <Documentation>
            <summary>
Gets the audio properties for the current file.
</summary>
            <value>The generic <see cref="ILocalAudioPropertySet" /> that contains the audio properties for the current file or <see langword="null" /> if no audio properties are
defined on the current file.</value>
          </Documentation>
          <Display Name="DisplayName_AudioProperties" ShortName="DisplayName_AudioProperties" Description="DisplayName_AudioProperties" />
          <Type>
            <Identifier Name="ILocalAudioPropertySet" />
          </Type>
          <!--TODO: Need <xsl:template match="Modifiers" mode="Root"></xsl:template>-->
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="DRMProperties">
          <Documentation>
            <summary>
Gets the DRM properties for the current file.
</summary>
            <value>The generic <see cref="ILocalDRMPropertySet" /> that contains the DRM properties for the current file or <see langword="null" /> if no DRM properties are defined
on the current file.</value>
          </Documentation>
          <Display Name="DisplayName_DRMProperties" ShortName="DisplayName_DRMProperties" Description="DisplayName_DRMProperties" />
          <Type>
            <Identifier Name="ILocalDRMPropertySet" />
          </Type>
          <!--TODO: Need <xsl:template match="Modifiers" mode="Root"></xsl:template>-->
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="GPSProperties">
          <Documentation>
            <summary>
Gets the GPS properties for the current file.
</summary>
            <value>The generic <see cref="ILocalGPSPropertySet" /> that contains the GPS properties for the current file or <see langword="null" /> if no GPS properties are defined
on the current file.</value>
          </Documentation>
          <Display Name="DisplayName_GPSProperties" ShortName="DisplayName_GPSProperties" Description="DisplayName_GPSProperties" />
          <Type>
            <Identifier Name="ILocalGPSPropertySet" />
          </Type>
          <!--TODO: Need <xsl:template match="Modifiers" mode="Root"></xsl:template>-->
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="ImageProperties">
          <Documentation>
            <summary>
Gets the image properties for the current file.
</summary>
            <value>The generic <see cref="ILocalImagePropertySet" /> that contains the image properties for the current file or <see langword="null" /> if no image properties are
defined on the current file.</value>
          </Documentation>
          <Display Name="DisplayName_ImageProperties" ShortName="DisplayName_ImageProperties" Description="DisplayName_ImageProperties" />
          <Type>
            <Identifier Name="ILocalImagePropertySet" />
          </Type>
          <!--TODO: Need <xsl:template match="Modifiers" mode="Root"></xsl:template>-->
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="MediaProperties">
          <Documentation>
            <summary>
Gets the media properties for the current file.
</summary>
            <value>The generic <see cref="ILocalMediaPropertySet" /> that contains the media properties for the current file or <see langword="null" /> if no media properties are
defined on the current file.</value>
          </Documentation>
          <Display Name="DisplayName_MediaProperties" ShortName="DisplayName_MediaProperties" Description="DisplayName_MediaProperties" />
          <Type>
            <Identifier Name="ILocalMediaPropertySet" />
          </Type>
          <!--TODO: Need <xsl:template match="Modifiers" mode="Root"></xsl:template>-->
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="MusicProperties">
          <Documentation>
            <summary>
Gets the music properties for the current file.
</summary>
            <value>The generic <see cref="ILocalMusicPropertySet" /> that contains the music properties for the current file or <see langword="null" /> if no music properties are
defined on the current file.</value>
          </Documentation>
          <Display Name="DisplayName_MusicProperties" ShortName="DisplayName_MusicProperties" Description="DisplayName_MusicProperties" />
          <Type>
            <Identifier Name="ILocalMusicPropertySet" />
          </Type>
          <!--TODO: Need <xsl:template match="Modifiers" mode="Root"></xsl:template>-->
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="PhotoProperties">
          <Documentation>
            <summary>
Gets the photo properties for the current file.
</summary>
            <value>The generic <see cref="ILocalPhotoPropertySet" /> that contains the photo properties for the current file or <see langword="null" /> if no photo properties are
defined on the current file.</value>
          </Documentation>
          <Display Name="DisplayName_PhotoProperties" ShortName="DisplayName_PhotoProperties" Description="DisplayName_PhotoProperties" />
          <Type>
            <Identifier Name="ILocalPhotoPropertySet" />
          </Type>
          <!--TODO: Need <xsl:template match="Modifiers" mode="Root"></xsl:template>-->
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="RecordedTVProperties">
          <Documentation>
            <summary>
Gets the recorded tv properties for the current file.
</summary>
            <value>The generic <see cref="ILocalRecordedTVPropertySet" /> that contains the recorded TV properties for the current file or <see langword="null" /> if no recorded
TV properties are defined on the current file.</value>
          </Documentation>
          <Display Name="DisplayName_RecordedTVProperties" ShortName="DisplayName_RecordedTVProperties" Description="DisplayName_RecordedTVProperties" />
          <Type>
            <Identifier Name="ILocalRecordedTVPropertySet" />
          </Type>
          <!--TODO: Need <xsl:template match="Modifiers" mode="Root"></xsl:template>-->
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="VideoProperties">
          <Documentation>
            <summary>
Gets the video properties for the current file.
</summary>
            <value>The generic <see cref="ILocalVideoPropertySet" /> that contains the video properties for the current file or <see langword="null" /> if no video properties are
defined on the current file.</value>
          </Documentation>
          <Display Name="DisplayName_VideoProperties" ShortName="DisplayName_VideoProperties" Description="DisplayName_VideoProperties" />
          <Type>
            <Identifier Name="ILocalVideoPropertySet" />
          </Type>
          <!--TODO: Need <xsl:template match="Modifiers" mode="Root"></xsl:template>-->
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="Redundancy">
          <Documentation>
            <summary>
Gets the redundancy item that indicates the membership of a collection of redundant files.
</summary>
            <value>
An <see cref="ILocalRedundancy" /> object that indicates the current file is an exact copy of other files that belong to the
same <see cref="IRedundancy.RedundantSet" />
or <see langword="null" /> if this file has not been identified as being redundant with any other.
</value>
          </Documentation>
          <Display Name="DisplayName_Redundancy" ShortName="DisplayName_Redundancy" Description="DisplayName_Redundancy" />
          <Type>
            <Identifier Name="ILocalRedundancy" />
          </Type>
          <!--TODO: Need <xsl:template match="Modifiers" mode="Root"></xsl:template>-->
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="BaselineComparisons">
          <Documentation>
            <summary>
Gets the comparisons where the current file was the <see cref="IComparison.Baseline" />.
</summary>
            <value>The <see cref="ILocalComparison" /> entities where the current file is the <see cref="IComparison.Baseline" />.</value>
          </Documentation>
          <Display Name="DisplayName_BaselineComparisons" ShortName="DisplayName_BaselineComparisons" Description="DisplayName_BaselineComparisons" />
          <Type>
            <Generic Name="IEnumerable">
              <Identifier Name="ILocalComparison" />
            </Generic>
          </Type>
          <!--TODO: Need <xsl:template match="Modifiers" mode="Root"></xsl:template>-->
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="CorrelativeComparisons">
          <Documentation>
            <summary>
Gets the comparisons where the current file was the <see cref="IComparison.Correlative" /> being compared to a separate <see cref="IComparison.Baseline" /> file.
</summary>
            <value>The <see cref="ILocalComparison" /> entities where the current file is the <see cref="IComparison.Correlative" />.</value>
          </Documentation>
          <Display Name="DisplayName_CorrelativeComparisons" ShortName="DisplayName_CorrelativeComparisons" Description="DisplayName_CorrelativeComparisons" />
          <Type>
            <Generic Name="IEnumerable">
              <Identifier Name="ILocalComparison" />
            </Generic>
          </Type>
          <!--TODO: Need <xsl:template match="Modifiers" mode="Root"></xsl:template>-->
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="AccessErrors">
          <Documentation>
            <summary>
Gets the access errors for the current file system item.
</summary>
            <value>The access errors for the current file system item.</value>
          </Documentation>
          <Display Name="DisplayName_AccessErrors" ShortName="DisplayName_AccessErrors" Description="DisplayName_AccessErrors" />
          <Type>
            <Generic Name="IEnumerable">
              <Identifier Name="ILocalFileAccessError" />
            </Generic>
          </Type>
          <!--TODO: Need <xsl:template match="Modifiers" mode="Root"></xsl:template>-->
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="PersonalTags">
          <Documentation>
            <summary>
Gets the personal tags associated with the current file.
</summary>
            <value>The <see cref="ILocalPersonalFileTag" /> entities that associate <see cref="ILocalPersonalTagDefinition" /> entities with the current file.</value>
          </Documentation>
          <Display Name="DisplayName_PersonalTags" ShortName="DisplayName_PersonalTags" Description="DisplayName_PersonalTags" />
          <Type>
            <Generic Name="IEnumerable">
              <Identifier Name="ILocalPersonalFileTag" />
            </Generic>
          </Type>
          <!--TODO: Need <xsl:template match="Modifiers" mode="Root"></xsl:template>-->
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="SharedTags">
          <Documentation>
            <summary>
Gets the shared tags associated with the current file.
</summary>
            <value>The <see cref="ILocalSharedFileTag" /> entities that associate <see cref="ILocalSharedTagDefinition" /> entities with the current file.</value>
          </Documentation>
          <Display Name="DisplayName_SharedTags" ShortName="DisplayName_SharedTags" Description="DisplayName_SharedTags" />
          <Type>
            <Generic Name="IEnumerable">
              <Identifier Name="ILocalSharedFileTag" />
            </Generic>
          </Type>
          <!--TODO: Need <xsl:template match="Modifiers" mode="Root"></xsl:template>-->
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
      </Interface>
    </Namespace>
  </Source>
  <Source Path="Local\Model\ILocalFileAccessError.cs" Id="daf6046d-5882-4c75-9e3b-c977787db361">
    <Using Name="FsInfoCat.Model" />
    <Using Name="System" />
    <Using Name="System.ComponentModel.DataAnnotations" />
    <Namespace Name="FsInfoCat.Local.Model">
      <Interface Name="ILocalFileAccessError" Access="public">
        <Documentation>
          <summary>
Generic interface for file access error entities.
</summary>
          <seealso cref="IEquatable{ILocalFileAccessError}" />
          <seealso cref="IFileAccessError" />
          <seealso cref="ILocalAccessError" />
          <seealso cref="ILocalDbContext.FileAccessErrors" />
          <seealso cref="ILocalFile.AccessErrors" />
          <seealso cref="Upstream.Model.IUpstreamFileAccessError" />
        </Documentation>
        <Implements>
          <SimpleBaseType Name="ILocalAccessError" />
          <SimpleBaseType Name="IFileAccessError" />
          <SimpleBaseType>
            <!--TODO: Need <xsl:template match="GenericName" mode="BaseTypes"></xsl:template>-->
          </SimpleBaseType>
        </Implements>
        <Property Name="Target">
          <Documentation>
            <summary>
Gets the target file to which the access error applies.
</summary>
            <value>The <see cref="ILocalFile" /> entity that this error applies to.</value>
          </Documentation>
          <Display Name="DisplayName_Target" ShortName="DisplayName_Target" Description="DisplayName_Target" />
          <Type>
            <Identifier Name="ILocalFile" />
          </Type>
          <!--TODO: Need <xsl:template match="Modifiers" mode="Root"></xsl:template>-->
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
      </Interface>
    </Namespace>
  </Source>
  <Source Path="Local\Model\ILocalFileListItemWithAncestorNames.cs" Id="14dbd2d6-24b6-4420-a36c-56499baa8793">
    <Using Name="FsInfoCat.Model" />
    <Namespace Name="FsInfoCat.Local.Model">
      <Interface Name="ILocalFileListItemWithAncestorNames" Access="public">
        <Documentation>
          <summary>
Generic interface for file list item entities which also includes the ancestor subdirectory names.
</summary>
          <seealso cref="ILocalDbFsItemListItem" />
          <seealso cref="IFileListItemWithAncestorNames" />
          <seealso cref="ILocalFileRow" />
          <seealso cref="Upstream.Model.IUpstreamFileListItemWithAncestorNames" />
        </Documentation>
        <Implements>
          <SimpleBaseType Name="ILocalDbFsItemListItem" />
          <SimpleBaseType Name="IFileListItemWithAncestorNames" />
          <SimpleBaseType Name="ILocalFileRow" />
        </Implements>
      </Interface>
    </Namespace>
  </Source>
  <Source Path="Local\Model\ILocalFileListItemWithBinaryProperties.cs" Id="fa38750d-d5a4-49d4-ae58-3705590dd930">
    <Using Name="FsInfoCat.Model" />
    <Namespace Name="FsInfoCat.Local.Model">
      <Interface Name="ILocalFileListItemWithBinaryProperties" Access="public">
        <Documentation>
          <summary>
Generic interface for file list item entities which also includes length and hash information.
</summary>
          <seealso cref="ILocalDbFsItemListItem" />
          <seealso cref="IFileListItemWithBinaryProperties" />
          <seealso cref="ILocalFileRow" />
          <seealso cref="Upstream.Model.IUpstreamFileListItemWithBinaryProperties" />
        </Documentation>
        <Implements>
          <SimpleBaseType Name="ILocalDbFsItemListItem" />
          <SimpleBaseType Name="IFileListItemWithBinaryProperties" />
          <SimpleBaseType Name="ILocalFileRow" />
        </Implements>
      </Interface>
    </Namespace>
  </Source>
  <Source Path="Local\Model\ILocalFileListItemWithBinaryPropertiesAndAncestorNames.cs" Id="088b7c1e-ded5-4ddd-bc64-734df99dc7ee">
    <Using Name="FsInfoCat.Model" />
    <Namespace Name="FsInfoCat.Local.Model">
      <Interface Name="ILocalFileListItemWithBinaryPropertiesAndAncestorNames" Access="public">
        <Documentation>
          <summary>
Generic interface for file list item entities which also includes length and hash information as well as a delimited listing of parent subdirectory names.
</summary>
          <seealso cref="IFileListItemWithBinaryPropertiesAndAncestorNames" />
          <seealso cref="ILocalFileListItemWithAncestorNames" />
          <seealso cref="Upstream.Model.IUpstreamFileListItemWithBinaryPropertiesAndAncestorNames" />
        </Documentation>
        <Implements>
          <SimpleBaseType Name="IFileListItemWithBinaryPropertiesAndAncestorNames" />
          <SimpleBaseType Name="ILocalFileListItemWithAncestorNames" />
        </Implements>
      </Interface>
    </Namespace>
  </Source>
  <Source Path="Local\Model\ILocalFileRow.cs" Id="2a69cade-d2e3-4e80-9983-722c4ed86e45">
    <Using Name="FsInfoCat.Model" />
    <Namespace Name="FsInfoCat.Local.Model">
      <Interface Name="ILocalFileRow" Access="public">
        <Documentation>
          <summary>
Represents a structural instance of file.
</summary>
          <seealso cref="ILocalDbFsItemRow" />
          <seealso cref="IFileRow" />
          <seealso cref="Upstream.Model.IUpstreamFileRow" />
        </Documentation>
        <Implements>
          <SimpleBaseType Name="ILocalDbFsItemRow" />
          <SimpleBaseType Name="IFileRow" />
        </Implements>
      </Interface>
    </Namespace>
  </Source>
  <Source Path="Local\Model\ILocalFileSystem.cs" Id="b9e1624e-b27e-47be-bd1d-24dfd866f63c">
    <Using Name="FsInfoCat.Model" />
    <Using Name="System" />
    <Using Name="System.Collections.Generic" />
    <Using Name="System.ComponentModel.DataAnnotations" />
    <Namespace Name="FsInfoCat.Local.Model">
      <Interface Name="ILocalFileSystem" Access="public">
        <Documentation>
          <summary>
Interface for entities which represent a specific file system type.
</summary>
          <seealso cref="ILocalDbEntity" />
          <seealso cref="IFileSystem" />
          <seealso cref="IEquatable{ILocalFileSystem}" />
          <seealso cref="Upstream.Model.IUpstreamFileSystem" />
        </Documentation>
        <Implements>
          <SimpleBaseType Name="ILocalDbEntity" />
          <SimpleBaseType Name="IFileSystem" />
          <SimpleBaseType>
            <!--TODO: Need <xsl:template match="GenericName" mode="BaseTypes"></xsl:template>-->
          </SimpleBaseType>
        </Implements>
        <Property Name="Volumes">
          <Documentation>
            <summary>
Gets the volumes that share this file system type.
</summary>
            <value>The volumes that share this file system type.</value>
          </Documentation>
          <Display Name="DisplayName_Volumes" ShortName="DisplayName_Volumes" Description="DisplayName_Volumes" />
          <Type>
            <Generic Name="IEnumerable">
              <Identifier Name="ILocalVolume" />
            </Generic>
          </Type>
          <!--TODO: Need <xsl:template match="Modifiers" mode="Root"></xsl:template>-->
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="SymbolicNames">
          <Documentation>
            <summary>
Gets the symbolic names for the current file system type.
</summary>
            <value>The symbolic names that are used to identify the current file system type.</value>
          </Documentation>
          <Display Name="DisplayName_SymbolicNames" ShortName="DisplayName_SymbolicNames" Description="DisplayName_SymbolicNames" />
          <Type>
            <Generic Name="IEnumerable">
              <Identifier Name="ILocalSymbolicName" />
            </Generic>
          </Type>
          <!--TODO: Need <xsl:template match="Modifiers" mode="Root"></xsl:template>-->
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
      </Interface>
    </Namespace>
  </Source>
  <Source Path="Local\Model\ILocalFileSystemListItem.cs" Id="69b819e7-27ac-4ca5-9ca0-ccb6a67c64ca">
    <Using Name="FsInfoCat.Model" />
    <Namespace Name="FsInfoCat.Local.Model">
      <Interface Name="ILocalFileSystemListItem" Access="public">
        <Documentation>
          <summary>
Generic interface for file system list item entities.
</summary>
          <seealso cref="ILocalFileSystemRow" />
          <seealso cref="IFileSystemListItem" />
          <seealso cref="Upstream.Model.IUpstreamFileSystemListItem" />
        </Documentation>
        <Implements>
          <SimpleBaseType Name="ILocalFileSystemRow" />
          <SimpleBaseType Name="IFileSystemListItem" />
        </Implements>
      </Interface>
    </Namespace>
  </Source>
  <Source Path="Local\Model\ILocalFileSystemRow.cs" Id="9f126aab-c92c-4b6c-ab3f-497c60d832f5">
    <Using Name="FsInfoCat.Model" />
    <Namespace Name="FsInfoCat.Local.Model">
      <Interface Name="ILocalFileSystemRow" Access="public">
        <Documentation>
          <summary>
Generic interface for file system entities.
</summary>
          <seealso cref="ILocalDbEntity" />
          <seealso cref="IFileSystemRow" />
          <seealso cref="Upstream.Model.IUpstreamFileSystemRow" />
        </Documentation>
        <Implements>
          <SimpleBaseType Name="ILocalDbEntity" />
          <SimpleBaseType Name="IFileSystemRow" />
        </Implements>
      </Interface>
    </Namespace>
  </Source>
  <Source Path="Local\Model\ILocalFileTag.cs" Id="3c32da36-e4ee-472a-a159-59f24cd16198">
    <Using Name="FsInfoCat.Model" />
    <Using Name="System" />
    <Namespace Name="FsInfoCat.Local.Model">
      <Interface Name="ILocalFileTag" Access="public">
        <Documentation>
          <summary>
Generic interface for an <see cref="ILocalTagDefinition" /> that is associated with an <see cref="ILocalFile" />.
</summary>
          <seealso cref="ILocalItemTag" />
          <seealso cref="IFileTag" />
          <seealso cref="IHasMembershipKeyReference{ILocalFile, ILocalTagDefinition}" />
          <seealso cref="IEquatable{ILocalFileTag}" />
          <seealso cref="Upstream.Model.IUpstreamFileTag" />
        </Documentation>
        <Implements>
          <SimpleBaseType Name="ILocalItemTag" />
          <SimpleBaseType Name="IFileTag" />
          <SimpleBaseType>
            <!--TODO: Need <xsl:template match="GenericName" mode="BaseTypes"></xsl:template>-->
          </SimpleBaseType>
          <SimpleBaseType>
            <!--TODO: Need <xsl:template match="GenericName" mode="BaseTypes"></xsl:template>-->
          </SimpleBaseType>
        </Implements>
        <Property Name="Tagged">
          <Documentation>
            <summary>
Gets the tagged file.
</summary>
            <value>The tagged <see cref="ILocalFile" />.</value>
          </Documentation>
          <Type>
            <Identifier Name="ILocalFile" />
          </Type>
          <!--TODO: Need <xsl:template match="Modifiers" mode="Root"></xsl:template>-->
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
      </Interface>
    </Namespace>
  </Source>
  <Source Path="Local\Model\ILocalGPSPropertiesListItem.cs" Id="269b1039-6380-445e-920e-48c8dbdd93ec">
    <Using Name="FsInfoCat.Model" />
    <Namespace Name="FsInfoCat.Local.Model">
      <Interface Name="ILocalGPSPropertiesListItem" Access="public">
        <Documentation>
          <summary>
Generic interface for list item entities containing extended file GPS information properties.
</summary>
          <seealso cref="ILocalGPSPropertiesRow" />
          <seealso cref="ILocalPropertiesListItem" />
          <seealso cref="IGPSPropertiesListItem" />
          <seealso cref="Upstream.Model.IUpstreamGPSPropertiesListItem" />
        </Documentation>
        <Implements>
          <SimpleBaseType Name="ILocalGPSPropertiesRow" />
          <SimpleBaseType Name="ILocalPropertiesListItem" />
          <SimpleBaseType Name="IGPSPropertiesListItem" />
        </Implements>
      </Interface>
    </Namespace>
  </Source>
  <Source Path="Local\Model\ILocalGPSPropertiesRow.cs" Id="e80ed213-3614-4be7-8dca-e2c66138f489">
    <Using Name="FsInfoCat.Model" />
    <Namespace Name="FsInfoCat.Local.Model">
      <Interface Name="ILocalGPSPropertiesRow" Access="public">
        <Documentation>
          <summary>
Generic interface for entities containing extended file GPS information properties.
</summary>
          <seealso cref="ILocalPropertiesRow" />
          <seealso cref="IGPSPropertiesRow" />
          <seealso cref="Upstream.Model.IUpstreamGPSPropertiesRow" />
        </Documentation>
        <Implements>
          <SimpleBaseType Name="ILocalPropertiesRow" />
          <SimpleBaseType Name="IGPSPropertiesRow" />
        </Implements>
      </Interface>
    </Namespace>
  </Source>
  <Source Path="Local\Model\ILocalGPSPropertySet.cs" Id="c9fa55b4-bccf-435d-9c2d-8f1a9524aec8">
    <Using Name="FsInfoCat.Model" />
    <Using Name="System" />
    <Namespace Name="FsInfoCat.Local.Model">
      <Interface Name="ILocalGPSPropertySet" Access="public">
        <Documentation>
          <summary>
Contains extended GPS property values.
</summary>
          <seealso cref="ILocalGPSPropertiesRow" />
          <seealso cref="ILocalPropertySet" />
          <seealso cref="IGPSPropertySet" />
          <seealso cref="IEquatable{ILocalGPSPropertySet}" />
          <seealso cref="Upstream.Model.IUpstreamGPSPropertySet" />
        </Documentation>
        <Implements>
          <SimpleBaseType Name="ILocalGPSPropertiesRow" />
          <SimpleBaseType Name="ILocalPropertySet" />
          <SimpleBaseType Name="IGPSPropertySet" />
          <SimpleBaseType>
            <!--TODO: Need <xsl:template match="GenericName" mode="BaseTypes"></xsl:template>-->
          </SimpleBaseType>
        </Implements>
      </Interface>
    </Namespace>
  </Source>
  <Source Path="Local\Model\ILocalImagePropertiesListItem.cs" Id="355aa04f-f9d5-4651-b94f-3eba0cee01e8">
    <Using Name="FsInfoCat.Model" />
    <Namespace Name="FsInfoCat.Local.Model">
      <Interface Name="ILocalImagePropertiesListItem" Access="public">
        <Documentation>
          <summary>
Generic interface for list item entities containing extended file properties for image files.
</summary>
          <seealso cref="ILocalImagePropertiesRow" />
          <seealso cref="ILocalPropertiesListItem" />
          <seealso cref="IImagePropertiesListItem" />
          <seealso cref="Upstream.Model.IUpstreamImagePropertiesListItem" />
        </Documentation>
        <Implements>
          <SimpleBaseType Name="ILocalImagePropertiesRow" />
          <SimpleBaseType Name="ILocalPropertiesListItem" />
          <SimpleBaseType Name="IImagePropertiesListItem" />
        </Implements>
      </Interface>
    </Namespace>
  </Source>
  <Source Path="Local\Model\ILocalImagePropertiesRow.cs" Id="918f693d-08e1-46cf-a16b-7e9de880daf4">
    <Using Name="FsInfoCat.Model" />
    <Namespace Name="FsInfoCat.Local.Model">
      <Interface Name="ILocalImagePropertiesRow" Access="public">
        <Documentation>
          <summary>
Generic interface for entities containing extended file properties for image files.
</summary>
          <seealso cref="ILocalPropertiesRow" />
          <seealso cref="IImagePropertiesRow" />
          <seealso cref="Upstream.Model.IUpstreamImagePropertiesRow" />
        </Documentation>
        <Implements>
          <SimpleBaseType Name="ILocalPropertiesRow" />
          <SimpleBaseType Name="IImagePropertiesRow" />
        </Implements>
      </Interface>
    </Namespace>
  </Source>
  <Source Path="Local\Model\ILocalImagePropertySet.cs" Id="e1935a3c-a9f3-4989-83ed-d21580fc46e4">
    <Using Name="FsInfoCat.Model" />
    <Using Name="System" />
    <Namespace Name="FsInfoCat.Local.Model">
      <Interface Name="ILocalImagePropertySet" Access="public">
        <Documentation>
          <summary>
Contains extended image file property values.
</summary>
          <seealso cref="ILocalImagePropertiesRow" />
          <seealso cref="ILocalPropertySet" />
          <seealso cref="IImagePropertySet" />
          <seealso cref="IEquatable{ILocalImagePropertySet}" />
          <seealso cref="Upstream.Model.IUpstreamImagePropertySet" />
        </Documentation>
        <Implements>
          <SimpleBaseType Name="ILocalImagePropertiesRow" />
          <SimpleBaseType Name="ILocalPropertySet" />
          <SimpleBaseType Name="IImagePropertySet" />
          <SimpleBaseType>
            <!--TODO: Need <xsl:template match="GenericName" mode="BaseTypes"></xsl:template>-->
          </SimpleBaseType>
        </Implements>
      </Interface>
    </Namespace>
  </Source>
  <Source Path="Local\Model\ILocalItemTag.cs" Id="7b35d9dd-9577-44c4-bf5f-de91ffee7f6a">
    <Using Name="FsInfoCat.Model" />
    <Namespace Name="FsInfoCat.Local.Model">
      <Interface Name="ILocalItemTag" Access="public">
        <Documentation>
          <summary>
Generic interface for an entity that associates an <see cref="ILocalTagDefinition" /> with an <see cref="ILocalFile" />, <see cref="ILocalSubdirectory" />
or <see cref="ILocalVolume" />.
</summary>
          <seealso cref="ILocalItemTagRow" />
          <seealso cref="IItemTag" />
          <seealso cref="Upstream.Model.IUpstreamItemTag" />
        </Documentation>
        <Implements>
          <SimpleBaseType Name="ILocalItemTagRow" />
          <SimpleBaseType Name="IItemTag" />
        </Implements>
        <Property Name="Tagged">
          <Documentation>
            <summary>
Gets the tagged entity.
</summary>
            <value>The entity that is associated with the <see cref="ILocalTagDefinition" />.</value>
          </Documentation>
          <Type>
            <Identifier Name="ILocalDbEntity" />
          </Type>
          <!--TODO: Need <xsl:template match="Modifiers" mode="Root"></xsl:template>-->
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="Definition">
          <Documentation>
            <summary>
Gets the tag definition.
</summary>
            <value>The tag definition that is associated with the <see cref="ILocalDbEntity" />.</value>
          </Documentation>
          <Type>
            <Identifier Name="ILocalTagDefinition" />
          </Type>
          <!--TODO: Need <xsl:template match="Modifiers" mode="Root"></xsl:template>-->
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
      </Interface>
    </Namespace>
  </Source>
  <Source Path="Local\Model\ILocalItemTagListItem.cs" Id="199c6f66-279d-4f0e-9f95-28e51830c4ec">
    <Using Name="FsInfoCat.Model" />
    <Namespace Name="FsInfoCat.Local.Model">
      <Interface Name="ILocalItemTagListItem" Access="public">
        <Documentation>
          <summary>
Generic interface for a list item entity that associates an <see cref="ILocalTagDefinition" /> with an <see cref="ILocalFile" />, <see cref="ILocalSubdirectory" />
or <see cref="ILocalVolume" />.
</summary>
          <seealso cref="IItemTagListItem" />
          <seealso cref="ILocalItemTagRow" />
          <seealso cref="Upstream.Model.IUpstreamItemTagListItem" />
        </Documentation>
        <Implements>
          <SimpleBaseType Name="IItemTagListItem" />
          <SimpleBaseType Name="ILocalItemTagRow" />
        </Implements>
      </Interface>
    </Namespace>
  </Source>
  <Source Path="Local\Model\ILocalItemTagRow.cs" Id="a8e87348-81ab-49e9-8bfc-32cf5fc5c7db">
    <Using Name="FsInfoCat.Model" />
    <Namespace Name="FsInfoCat.Local.Model">
      <Interface Name="ILocalItemTagRow" Access="public">
        <Documentation>
          <summary>
Generic interface for an entity that associates a <see cref="ILocalTagDefinition" /> with an <see cref="ILocalFile" />, <see cref="ILocalSubdirectory" />
or <see cref="ILocalVolume" />.
</summary>
          <seealso cref="ILocalDbEntity" />
          <seealso cref="IItemTagRow" />
          <seealso cref="Upstream.Model.IUpstreamItemTagRow" />
        </Documentation>
        <Implements>
          <SimpleBaseType Name="ILocalDbEntity" />
          <SimpleBaseType Name="IItemTagRow" />
        </Implements>
      </Interface>
    </Namespace>
  </Source>
  <Source Path="Local\Model\ILocalMediaPropertiesListItem.cs" Id="f28306e4-41d6-4ddf-a9e0-db5abac257fb">
    <Using Name="FsInfoCat.Model" />
    <Namespace Name="FsInfoCat.Local.Model">
      <Interface Name="ILocalMediaPropertiesListItem" Access="public">
        <Documentation>
          <summary>
Generic interface for list item entities containing extended file properties for media files.
</summary>
          <seealso cref="ILocalMediaPropertiesRow" />
          <seealso cref="ILocalPropertiesListItem" />
          <seealso cref="IMediaPropertiesListItem" />
          <seealso cref="Upstream.Model.IUpstreamMediaPropertiesListItem" />
        </Documentation>
        <Implements>
          <SimpleBaseType Name="ILocalMediaPropertiesRow" />
          <SimpleBaseType Name="ILocalPropertiesListItem" />
          <SimpleBaseType Name="IMediaPropertiesListItem" />
        </Implements>
      </Interface>
    </Namespace>
  </Source>
  <Source Path="Local\Model\ILocalMediaPropertiesRow.cs" Id="10a37f40-e466-4503-953f-45a4f7f54ed6">
    <Using Name="FsInfoCat.Model" />
    <Namespace Name="FsInfoCat.Local.Model">
      <Interface Name="ILocalMediaPropertiesRow" Access="public">
        <Documentation>
          <summary>
Generic interface for entities containing extended file properties for media files.
</summary>
          <seealso cref="ILocalPropertiesRow" />
          <seealso cref="IMediaPropertiesRow" />
          <seealso cref="Upstream.Model.IUpstreamMediaPropertiesRow" />
        </Documentation>
        <Implements>
          <SimpleBaseType Name="ILocalPropertiesRow" />
          <SimpleBaseType Name="IMediaPropertiesRow" />
        </Implements>
      </Interface>
    </Namespace>
  </Source>
  <Source Path="Local\Model\ILocalMediaPropertySet.cs" Id="551948e6-d9ec-490c-be53-2819671990b3">
    <Using Name="FsInfoCat.Model" />
    <Using Name="System" />
    <Namespace Name="FsInfoCat.Local.Model">
      <Interface Name="ILocalMediaPropertySet" Access="public">
        <Documentation>
          <summary>
Contains extended media file property values.
</summary>
          <seealso cref="ILocalMediaPropertiesRow" />
          <seealso cref="ILocalPropertySet" />
          <seealso cref="IMediaPropertySet" />
          <seealso cref="IEquatable{ILocalMediaPropertySet}" />
          <seealso cref="Upstream.Model.IUpstreamMediaPropertySet" />
        </Documentation>
        <Implements>
          <SimpleBaseType Name="ILocalMediaPropertiesRow" />
          <SimpleBaseType Name="ILocalPropertySet" />
          <SimpleBaseType Name="IMediaPropertySet" />
          <SimpleBaseType>
            <!--TODO: Need <xsl:template match="GenericName" mode="BaseTypes"></xsl:template>-->
          </SimpleBaseType>
        </Implements>
      </Interface>
    </Namespace>
  </Source>
  <Source Path="Local\Model\ILocalMusicPropertiesListItem.cs" Id="109aec64-df9d-4e0e-8e81-e059d1ae5646">
    <Using Name="FsInfoCat.Model" />
    <Namespace Name="FsInfoCat.Local.Model">
      <Interface Name="ILocalMusicPropertiesListItem" Access="public">
        <Documentation>
          <summary>
Generic interface for list item entities containing extended file properties for music files.
</summary>
          <seealso cref="ILocalMusicPropertiesRow" />
          <seealso cref="ILocalPropertiesListItem" />
          <seealso cref="IMusicPropertiesListItem" />
          <seealso cref="Upstream.Model.IUpstreamMusicPropertiesListItem" />
        </Documentation>
        <Implements>
          <SimpleBaseType Name="ILocalMusicPropertiesRow" />
          <SimpleBaseType Name="ILocalPropertiesListItem" />
          <SimpleBaseType Name="IMusicPropertiesListItem" />
        </Implements>
      </Interface>
    </Namespace>
  </Source>
  <Source Path="Local\Model\ILocalMusicPropertiesRow.cs" Id="623645c4-83ea-4ecc-a7d0-fc87f6997968">
    <Using Name="FsInfoCat.Model" />
    <Namespace Name="FsInfoCat.Local.Model">
      <Interface Name="ILocalMusicPropertiesRow" Access="public">
        <Documentation>
          <summary>
Generic interface for entities containing extended file properties for music files.
</summary>
          <seealso cref="ILocalPropertiesRow" />
          <seealso cref="IMusicPropertiesRow" />
          <seealso cref="Upstream.Model.IUpstreamMusicPropertiesRow" />
        </Documentation>
        <Implements>
          <SimpleBaseType Name="ILocalPropertiesRow" />
          <SimpleBaseType Name="IMusicPropertiesRow" />
        </Implements>
      </Interface>
    </Namespace>
  </Source>
  <Source Path="Local\Model\ILocalMusicPropertySet.cs" Id="4e34a71b-daeb-4b30-b1ff-ab32a0439a90">
    <Using Name="FsInfoCat.Model" />
    <Using Name="System" />
    <Namespace Name="FsInfoCat.Local.Model">
      <Interface Name="ILocalMusicPropertySet" Access="public">
        <Documentation>
          <summary>
Contains extended music file property values.
</summary>
          <seealso cref="ILocalMusicPropertiesRow" />
          <seealso cref="ILocalPropertySet" />
          <seealso cref="IMusicPropertySet" />
          <seealso cref="IEquatable{ILocalMusicPropertySet}" />
          <seealso cref="Upstream.Model.IUpstreamMusicPropertySet" />
        </Documentation>
        <Implements>
          <SimpleBaseType Name="ILocalMusicPropertiesRow" />
          <SimpleBaseType Name="ILocalPropertySet" />
          <SimpleBaseType Name="IMusicPropertySet" />
          <SimpleBaseType>
            <!--TODO: Need <xsl:template match="GenericName" mode="BaseTypes"></xsl:template>-->
          </SimpleBaseType>
        </Implements>
      </Interface>
    </Namespace>
  </Source>
  <Source Path="Local\Model\ILocalPersonalFileTag.cs" Id="8ddf538b-9645-450f-a7a7-c0253551b4a1">
    <Using Name="FsInfoCat.Model" />
    <Using Name="System" />
    <Namespace Name="FsInfoCat.Local.Model">
      <Interface Name="ILocalPersonalFileTag" Access="public">
        <Documentation>
          <summary>
Generic interface for an <see cref="ILocalPersonalTagDefinition" /> that is associated with an <see cref="ILocalFile" />.
</summary>
          <seealso cref="ILocalPersonalTag" />
          <seealso cref="IPersonalFileTag" />
          <seealso cref="ILocalFileTag" />
          <seealso cref="IHasMembershipKeyReference{ILocalFile, ILocalPersonalTagDefinition}" />
          <seealso cref="IEquatable{ILocalPersonalFileTag}" />
          <seealso cref="Upstream.Model.IUpstreamPersonalFileTag" />
        </Documentation>
        <Implements>
          <SimpleBaseType Name="ILocalPersonalTag" />
          <SimpleBaseType Name="IPersonalFileTag" />
          <SimpleBaseType Name="ILocalFileTag" />
          <SimpleBaseType>
            <!--TODO: Need <xsl:template match="GenericName" mode="BaseTypes"></xsl:template>-->
          </SimpleBaseType>
          <SimpleBaseType>
            <!--TODO: Need <xsl:template match="GenericName" mode="BaseTypes"></xsl:template>-->
          </SimpleBaseType>
        </Implements>
      </Interface>
    </Namespace>
  </Source>
  <Source Path="Local\Model\ILocalPersonalSubdirectoryTag.cs" Id="5f202b43-4f77-4fd2-b4c3-5b06cb9e2900">
    <Using Name="FsInfoCat.Model" />
    <Using Name="System" />
    <Namespace Name="FsInfoCat.Local.Model">
      <Interface Name="ILocalPersonalSubdirectoryTag" Access="public">
        <Documentation>
          <summary>
Generic interface for an <see cref="ILocalPersonalTagDefinition" /> that is associated with an <see cref="ILocalSubdirectory" />.
</summary>
          <seealso cref="ILocalPersonalTag" />
          <seealso cref="IPersonalSubdirectoryTag" />
          <seealso cref="ILocalSubdirectoryTag" />
          <seealso cref="IHasMembershipKeyReference{ILocalSubdirectory, ILocalPersonalTagDefinition}" />
          <seealso cref="IEquatable{ILocalPersonalSubdirectoryTag}" />
          <seealso cref="Upstream.Model.IUpstreamPersonalSubdirectoryTag" />
        </Documentation>
        <Implements>
          <SimpleBaseType Name="ILocalPersonalTag" />
          <SimpleBaseType Name="IPersonalSubdirectoryTag" />
          <SimpleBaseType Name="ILocalSubdirectoryTag" />
          <SimpleBaseType>
            <!--TODO: Need <xsl:template match="GenericName" mode="BaseTypes"></xsl:template>-->
          </SimpleBaseType>
          <SimpleBaseType>
            <!--TODO: Need <xsl:template match="GenericName" mode="BaseTypes"></xsl:template>-->
          </SimpleBaseType>
        </Implements>
      </Interface>
    </Namespace>
  </Source>
  <Source Path="Local\Model\ILocalPersonalTag.cs" Id="b882d6d3-c5c8-4b94-a68e-7cf6df0db7ea">
    <Using Name="FsInfoCat.Model" />
    <Namespace Name="FsInfoCat.Local.Model">
      <Interface Name="ILocalPersonalTag" Access="public">
        <Documentation>
          <summary>
Generic interface for an entity that associates an <see cref="ILocalPersonalTagDefinition" /> with an <see cref="ILocalFile" />, <see cref="ILocalSubdirectory" />
or <see cref="ILocalVolume" />.
</summary>
          <seealso cref="ILocalItemTag" />
          <seealso cref="IPersonalTag" />
          <seealso cref="Upstream.Model.IUpstreamPersonalTag" />
        </Documentation>
        <Implements>
          <SimpleBaseType Name="ILocalItemTag" />
          <SimpleBaseType Name="IPersonalTag" />
        </Implements>
        <Property Name="Definition">
          <Documentation>
            <summary>
Gets the personal tag definition.
</summary>
            <value>The personal tag definition that is associated with the <see cref="ILocalDbEntity" />.</value>
          </Documentation>
          <Type>
            <Identifier Name="ILocalPersonalTagDefinition" />
          </Type>
          <!--TODO: Need <xsl:template match="Modifiers" mode="Root"></xsl:template>-->
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
      </Interface>
    </Namespace>
  </Source>
  <Source Path="Local\Model\ILocalPersonalTagDefinition.cs" Id="9001ad58-6d74-40b2-b45c-2309ec0f69e0">
    <Using Name="FsInfoCat.Model" />
    <Using Name="System" />
    <Using Name="System.Collections.Generic" />
    <Namespace Name="FsInfoCat.Local.Model">
      <Interface Name="ILocalPersonalTagDefinition" Access="public">
        <Documentation>
          <summary>
Generic interface for a personal (private) tag list item entity that can be associated with <see cref="ILocalFile" />, <see cref="ILocalSubdirectory" />
or <see cref="ILocalVolume" /> entities.
</summary>
          <seealso cref="ILocalTagDefinition" />
          <seealso cref="IPersonalTagDefinition" />
          <seealso cref="IEquatable{ILocalPersonalTagDefinition}" />
          <seealso cref="Upstream.Model.IUpstreamPersonalTagDefinition" />
        </Documentation>
        <Implements>
          <SimpleBaseType Name="ILocalTagDefinition" />
          <SimpleBaseType Name="IPersonalTagDefinition" />
          <SimpleBaseType>
            <!--TODO: Need <xsl:template match="GenericName" mode="BaseTypes"></xsl:template>-->
          </SimpleBaseType>
        </Implements>
        <Property Name="FileTags">
          <Documentation>
            <summary>
Gets the file tags.
</summary>
            <value>The <see cref="ILocalPersonalFileTag" /> entities that associate <see cref="ILocalFile" /> entities with the current entity.</value>
          </Documentation>
          <Type>
            <Generic Name="IEnumerable">
              <Identifier Name="ILocalPersonalFileTag" />
            </Generic>
          </Type>
          <!--TODO: Need <xsl:template match="Modifiers" mode="Root"></xsl:template>-->
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="SubdirectoryTags">
          <Documentation>
            <summary>
Gets the subdirectory tags.
</summary>
            <value>The <see cref="ILocalPersonalSubdirectoryTag" /> entities that associate <see cref="ILocalSubdirectory" /> entities with the current entity.</value>
          </Documentation>
          <Type>
            <Generic Name="IEnumerable">
              <Identifier Name="ILocalPersonalSubdirectoryTag" />
            </Generic>
          </Type>
          <!--TODO: Need <xsl:template match="Modifiers" mode="Root"></xsl:template>-->
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="VolumeTags">
          <Documentation>
            <summary>
Gets the volume tags.
</summary>
            <value>The <see cref="ILocalPersonalVolumeTag" /> entities that associate <see cref="ILocalVolume" /> entities with the current entity.</value>
          </Documentation>
          <Type>
            <Generic Name="IEnumerable">
              <Identifier Name="ILocalPersonalVolumeTag" />
            </Generic>
          </Type>
          <!--TODO: Need <xsl:template match="Modifiers" mode="Root"></xsl:template>-->
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
      </Interface>
    </Namespace>
  </Source>
  <Source Path="Local\Model\ILocalPersonalVolumeTag.cs" Id="79953182-a75f-4736-b676-99bce090b489">
    <Using Name="FsInfoCat.Model" />
    <Using Name="System" />
    <Namespace Name="FsInfoCat.Local.Model">
      <Interface Name="ILocalPersonalVolumeTag" Access="public">
        <Documentation>
          <summary>
Generic interface for an <see cref="ILocalPersonalTagDefinition" /> that is associated with an <see cref="ILocalVolume" />.
</summary>
          <seealso cref="ILocalPersonalTag" />
          <seealso cref="IPersonalVolumeTag" />
          <seealso cref="ILocalVolumeTag" />
          <seealso cref="IHasMembershipKeyReference{ILocalVolume, ILocalPersonalTagDefinition}" />
          <seealso cref="IEquatable{ILocalPersonalVolumeTag}" />
          <seealso cref="Upstream.Model.IUpstreamPersonalVolumeTag" />
        </Documentation>
        <Implements>
          <SimpleBaseType Name="ILocalPersonalTag" />
          <SimpleBaseType Name="IPersonalVolumeTag" />
          <SimpleBaseType Name="ILocalVolumeTag" />
          <SimpleBaseType>
            <!--TODO: Need <xsl:template match="GenericName" mode="BaseTypes"></xsl:template>-->
          </SimpleBaseType>
          <SimpleBaseType>
            <!--TODO: Need <xsl:template match="GenericName" mode="BaseTypes"></xsl:template>-->
          </SimpleBaseType>
        </Implements>
      </Interface>
    </Namespace>
  </Source>
  <Source Path="Local\Model\ILocalPhotoPropertiesListItem.cs" Id="cf688d21-677b-45f5-8786-ac0cb27500f5">
    <Using Name="FsInfoCat.Model" />
    <Namespace Name="FsInfoCat.Local.Model">
      <Interface Name="ILocalPhotoPropertiesListItem" Access="public">
        <Documentation>
          <summary>
Generic interface for list item entities containing extended file properties for photo files.
Implements the <see cref="IPhotoPropertiesListItem" /></summary>
          <seealso cref="ILocalPhotoPropertiesRow" />
          <seealso cref="ILocalPropertiesListItem" />
          <seealso cref="IPhotoPropertiesListItem" />
          <seealso cref="Upstream.Model.IUpstreamPhotoPropertiesListItem" />
        </Documentation>
        <Implements>
          <SimpleBaseType Name="ILocalPhotoPropertiesRow" />
          <SimpleBaseType Name="ILocalPropertiesListItem" />
          <SimpleBaseType Name="IPhotoPropertiesListItem" />
        </Implements>
      </Interface>
    </Namespace>
  </Source>
  <Source Path="Local\Model\ILocalPhotoPropertiesRow.cs" Id="ac293180-6fe0-4817-864b-047082d6118f">
    <Using Name="FsInfoCat.Model" />
    <Namespace Name="FsInfoCat.Local.Model">
      <Interface Name="ILocalPhotoPropertiesRow" Access="public">
        <Documentation>
          <summary>
Generic interface for entities containing extended file properties for photo files.
</summary>
          <seealso cref="ILocalPropertiesRow" />
          <seealso cref="IPhotoPropertiesRow" />
          <seealso cref="Upstream.Model.IUpstreamPhotoPropertiesRow" />
        </Documentation>
        <Implements>
          <SimpleBaseType Name="ILocalPropertiesRow" />
          <SimpleBaseType Name="IPhotoPropertiesRow" />
        </Implements>
      </Interface>
    </Namespace>
  </Source>
  <Source Path="Local\Model\ILocalPhotoPropertySet.cs" Id="c1b0701c-d69a-43be-8874-58a4db1325f1">
    <Using Name="FsInfoCat.Model" />
    <Using Name="System" />
    <Namespace Name="FsInfoCat.Local.Model">
      <Interface Name="ILocalPhotoPropertySet" Access="public">
        <Documentation>
          <summary>
Contains extended photo file property values.
</summary>
          <seealso cref="ILocalPhotoPropertiesRow" />
          <seealso cref="ILocalPropertySet" />
          <seealso cref="IPhotoPropertySet" />
          <seealso cref="IEquatable{ILocalPhotoPropertySet}" />
          <seealso cref="Upstream.Model.IUpstreamPhotoPropertySet" />
        </Documentation>
        <Implements>
          <SimpleBaseType Name="ILocalPhotoPropertiesRow" />
          <SimpleBaseType Name="ILocalPropertySet" />
          <SimpleBaseType Name="IPhotoPropertySet" />
          <SimpleBaseType>
            <!--TODO: Need <xsl:template match="GenericName" mode="BaseTypes"></xsl:template>-->
          </SimpleBaseType>
        </Implements>
      </Interface>
    </Namespace>
  </Source>
  <Source Path="Local\Model\ILocalPropertiesListItem.cs" Id="9054a9c4-e464-4a44-9dfa-779965abb396">
    <Using Name="FsInfoCat.Model" />
    <Namespace Name="FsInfoCat.Local.Model">
      <Interface Name="ILocalPropertiesListItem" Access="public">
        <Documentation>
          <summary>
Generic interface for list item entities containing extended file properties.
</summary>
          <seealso cref="ILocalPropertiesRow" />
          <seealso cref="IPropertiesListItem" />
          <seealso cref="Upstream.Model.IUpstreamPropertiesListItem" />
          <seealso cref="ILocalAudioPropertiesListItem" />
          <seealso cref="ILocalDocumentPropertiesListItem" />
          <seealso cref="ILocalDRMPropertiesListItem" />
          <seealso cref="ILocalGPSPropertiesListItem" />
          <seealso cref="ILocalImagePropertiesListItem" />
          <seealso cref="ILocalMediaPropertiesListItem" />
          <seealso cref="ILocalMusicPropertiesListItem" />
          <seealso cref="ILocalPhotoPropertiesListItem" />
          <seealso cref="ILocalRecordedTVPropertiesListItem" />
          <seealso cref="ILocalSummaryPropertiesListItem" />
          <seealso cref="ILocalVideoPropertiesListItem" />
        </Documentation>
        <Implements>
          <SimpleBaseType Name="ILocalPropertiesRow" />
          <SimpleBaseType Name="IPropertiesListItem" />
        </Implements>
      </Interface>
    </Namespace>
  </Source>
  <Source Path="Local\Model\ILocalPropertiesRow.cs" Id="ad2afc8d-811c-41fa-942c-e70f2da6415b">
    <Using Name="FsInfoCat.Model" />
    <Namespace Name="FsInfoCat.Local.Model">
      <Interface Name="ILocalPropertiesRow" Access="public">
        <Documentation>
          <summary>
Generic interface for entities containing extended file properties.
</summary>
          <seealso cref="ILocalDbEntity" />
          <seealso cref="IPropertiesRow" />
          <seealso cref="Upstream.Model.IUpstreamPropertiesRow" />
        </Documentation>
        <Implements>
          <SimpleBaseType Name="ILocalDbEntity" />
          <SimpleBaseType Name="IPropertiesRow" />
        </Implements>
      </Interface>
    </Namespace>
  </Source>
  <Source Path="Local\Model\ILocalPropertySet.cs" Id="f3ba3ae8-f6e1-4893-9440-1ee0774ed7da">
    <Using Name="FsInfoCat.Model" />
    <Using Name="System.Collections.Generic" />
    <Using Name="System.ComponentModel.DataAnnotations" />
    <Namespace Name="FsInfoCat.Local.Model">
      <Interface Name="ILocalPropertySet" Access="public">
        <Documentation>
          <summary>
Base interface for entities that represent a grouping of extended file properties.
</summary>
          <seealso cref="ILocalDbEntity" />
          <seealso cref="IPropertySet" />
          <seealso cref="Upstream.Model.IUpstreamPropertySet" />
        </Documentation>
        <Implements>
          <SimpleBaseType Name="ILocalPropertiesRow" />
          <SimpleBaseType Name="IPropertySet" />
        </Implements>
        <Property Name="Files">
          <Documentation>
            <summary>
Gets the files that share the same property values as this property set.
</summary>
            <value>The <see cref="ILocalFile">files</see> that share the same property values as this property set.</value>
          </Documentation>
          <Display Name="DisplayName_Files" ShortName="DisplayName_Files" Description="DisplayName_Files" />
          <Type>
            <Generic Name="IEnumerable">
              <Identifier Name="ILocalFile" />
            </Generic>
          </Type>
          <!--TODO: Need <xsl:template match="Modifiers" mode="Root"></xsl:template>-->
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
      </Interface>
    </Namespace>
  </Source>
  <Source Path="Local\Model\ILocalRecordedTVPropertiesListItem.cs" Id="108119b2-b09a-4d2e-a1ce-152899d2d004">
    <Using Name="FsInfoCat.Model" />
    <Namespace Name="FsInfoCat.Local.Model">
      <Interface Name="ILocalRecordedTVPropertiesListItem" Access="public">
        <Documentation>
          <summary>
Generic interface for list item entities containing extended file properties for recorded TV files.
</summary>
          <seealso cref="ILocalRecordedTVPropertiesRow" />
          <seealso cref="ILocalPropertiesListItem" />
          <seealso cref="IRecordedTVPropertiesListItem" />
          <seealso cref="Upstream.Model.IUpstreamRecordedTVPropertiesListItem" />
        </Documentation>
        <Implements>
          <SimpleBaseType Name="ILocalRecordedTVPropertiesRow" />
          <SimpleBaseType Name="ILocalPropertiesListItem" />
          <SimpleBaseType Name="IRecordedTVPropertiesListItem" />
        </Implements>
      </Interface>
    </Namespace>
  </Source>
  <Source Path="Local\Model\ILocalRecordedTVPropertiesRow.cs" Id="3ee1f416-b104-4126-9d78-737f0ca9f32f">
    <Using Name="FsInfoCat.Model" />
    <Namespace Name="FsInfoCat.Local.Model">
      <Interface Name="ILocalRecordedTVPropertiesRow" Access="public">
        <Documentation>
          <summary>
Generic interface for entities containing extended file properties for recorded TV files.
</summary>
          <seealso cref="ILocalPropertiesRow" />
          <seealso cref="IRecordedTVPropertiesRow" />
          <seealso cref="Upstream.Model.IUpstreamRecordedTVPropertiesRow" />
        </Documentation>
        <Implements>
          <SimpleBaseType Name="ILocalPropertiesRow" />
          <SimpleBaseType Name="IRecordedTVPropertiesRow" />
        </Implements>
      </Interface>
    </Namespace>
  </Source>
  <Source Path="Local\Model\ILocalRecordedTVPropertySet.cs" Id="88c4a4c8-1f28-4beb-9093-96b45167b474">
    <Using Name="FsInfoCat.Model" />
    <Using Name="System" />
    <Namespace Name="FsInfoCat.Local.Model">
      <Interface Name="ILocalRecordedTVPropertySet" Access="public">
        <Documentation>
          <summary>
Contains extended recorded TV file property values.
</summary>
          <seealso cref="ILocalRecordedTVPropertiesRow" />
          <seealso cref="ILocalPropertySet" />
          <seealso cref="IRecordedTVPropertySet" />
          <seealso cref="IEquatable{ILocalRecordedTVPropertySet}" />
          <seealso cref="Upstream.Model.IUpstreamRecordedTVPropertySet" />
        </Documentation>
        <Implements>
          <SimpleBaseType Name="ILocalRecordedTVPropertiesRow" />
          <SimpleBaseType Name="ILocalPropertySet" />
          <SimpleBaseType Name="IRecordedTVPropertySet" />
          <SimpleBaseType>
            <!--TODO: Need <xsl:template match="GenericName" mode="BaseTypes"></xsl:template>-->
          </SimpleBaseType>
        </Implements>
      </Interface>
    </Namespace>
  </Source>
  <Source Path="Local\Model\ILocalRedundancy.cs" Id="37dc8d23-ded8-41de-9091-3ccb93b0686b">
    <Using Name="FsInfoCat.Model" />
    <Using Name="System" />
    <Using Name="System.ComponentModel.DataAnnotations" />
    <Namespace Name="FsInfoCat.Local.Model">
      <Interface Name="ILocalRedundancy" Access="public">
        <Documentation>
          <summary>
Associates a file with a redundancy set.
</summary>
          <seealso cref="ILocalDbEntity" />
          <seealso cref="IRedundancy" />
          <seealso cref="IHasMembershipKeyReference{ILocalRedundantSet, ILocalFile}" />
          <seealso cref="IEquatable{ILocalRedundancy}" />
          <seealso cref="Upstream.Model.IUpstreamRedundancy" />
        </Documentation>
        <Implements>
          <SimpleBaseType Name="ILocalDbEntity" />
          <SimpleBaseType Name="IRedundancy" />
          <SimpleBaseType>
            <!--TODO: Need <xsl:template match="GenericName" mode="BaseTypes"></xsl:template>-->
          </SimpleBaseType>
          <SimpleBaseType>
            <!--TODO: Need <xsl:template match="GenericName" mode="BaseTypes"></xsl:template>-->
          </SimpleBaseType>
        </Implements>
        <Property Name="File">
          <Documentation>
            <summary>
Gets the file that belongs to the redundancy set.
</summary>
            <value>The file that belongs to the redundancy set.</value>
          </Documentation>
          <Display Name="DisplayName_File" ShortName="DisplayName_File" Description="DisplayName_File" />
          <Type>
            <Identifier Name="ILocalFile" />
          </Type>
          <!--TODO: Need <xsl:template match="Modifiers" mode="Root"></xsl:template>-->
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="RedundantSet">
          <Documentation>
            <summary>
Gets the redundancy set.
</summary>
            <value>The redundancy set.</value>
          </Documentation>
          <Display Name="DisplayName_RedundantSet" ShortName="DisplayName_RedundantSet" Description="DisplayName_RedundantSet" />
          <Type>
            <Identifier Name="ILocalRedundantSet" />
          </Type>
          <!--TODO: Need <xsl:template match="Modifiers" mode="Root"></xsl:template>-->
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
      </Interface>
    </Namespace>
  </Source>
  <Source Path="Local\Model\ILocalRedundantSet.cs" Id="bfc746da-bd51-4a78-8c4d-547b72f259a6">
    <Using Name="FsInfoCat.Model" />
    <Using Name="System" />
    <Using Name="System.Collections.Generic" />
    <Using Name="System.ComponentModel.DataAnnotations" />
    <Namespace Name="FsInfoCat.Local.Model">
      <Interface Name="ILocalRedundantSet" Access="public">
        <Documentation>
          <summary>
Represents a set of files that have the same size, Hash and remediation status.
</summary>
          <seealso cref="ILocalRedundantSetRow" />
          <seealso cref="IRedundantSet" />
          <seealso cref="IEquatable{ILocalRedundantSet}" />
          <seealso cref="Upstream.Model.IUpstreamRedundantSet" />
        </Documentation>
        <Implements>
          <SimpleBaseType Name="ILocalRedundantSetRow" />
          <SimpleBaseType Name="IRedundantSet" />
          <SimpleBaseType>
            <!--TODO: Need <xsl:template match="GenericName" mode="BaseTypes"></xsl:template>-->
          </SimpleBaseType>
        </Implements>
        <Property Name="BinaryProperties">
          <Documentation>
            <summary>
Gets the binary properties in common with all files in the current redundant set.
</summary>
            <value>The binary properties in common with all files in the current redundant set.</value>
          </Documentation>
          <Display Name="DisplayName_BinaryProperties" ShortName="DisplayName_BinaryProperties" Description="DisplayName_BinaryProperties" />
          <Type>
            <Identifier Name="ILocalBinaryPropertySet" />
          </Type>
          <!--TODO: Need <xsl:template match="Modifiers" mode="Root"></xsl:template>-->
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="Redundancies">
          <Documentation>
            <summary>
Gets the redundancy entities which represent links to redundant files.
</summary>
            <value>The redundancy entities which represent links to redundant files.</value>
          </Documentation>
          <Display Name="DisplayName_Redundancies" ShortName="DisplayName_Redundancies" Description="DisplayName_Redundancies" />
          <Type>
            <Generic Name="IEnumerable">
              <Identifier Name="ILocalRedundancy" />
            </Generic>
          </Type>
          <!--TODO: Need <xsl:template match="Modifiers" mode="Root"></xsl:template>-->
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
      </Interface>
    </Namespace>
  </Source>
  <Source Path="Local\Model\ILocalRedundantSetListItem.cs" Id="862ea60a-09c9-4173-9956-7f809bc7173c">
    <Using Name="FsInfoCat.Model" />
    <Namespace Name="FsInfoCat.Local.Model">
      <Interface Name="ILocalRedundantSetListItem" Access="public">
        <Documentation>
          <summary>
Represents a listing item for set of files that have the same size, Hash and remediation status.
</summary>
          <seealso cref="IRedundantSetListItem" />
          <seealso cref="ILocalRedundantSetRow" />
          <seealso cref="Upstream.Model.IUpstreamRedundantSetListItem" />
        </Documentation>
        <Implements>
          <SimpleBaseType Name="IRedundantSetListItem" />
          <SimpleBaseType Name="ILocalRedundantSetRow" />
        </Implements>
      </Interface>
    </Namespace>
  </Source>
  <Source Path="Local\Model\ILocalRedundantSetRow.cs" Id="ff536165-18ee-4af3-99b1-3057faf556f1">
    <Using Name="FsInfoCat.Model" />
    <Namespace Name="FsInfoCat.Local.Model">
      <Interface Name="ILocalRedundantSetRow" Access="public">
        <Documentation>
          <summary>
Generic interface for an entity representing set of files that have the same size, Hash and remediation status.
</summary>
          <seealso cref="ILocalDbEntity" />
          <seealso cref="IRedundantSetRow" />
          <seealso cref="Upstream.Model.IUpstreamRedundantSetRow" />
        </Documentation>
        <Implements>
          <SimpleBaseType Name="ILocalDbEntity" />
          <SimpleBaseType Name="IRedundantSetRow" />
        </Implements>
      </Interface>
    </Namespace>
  </Source>
  <Source Path="Local\Model\ILocalSharedFileTag.cs" Id="2a086e77-0782-4bf2-9aaf-58fbba11b89a">
    <Using Name="FsInfoCat.Model" />
    <Using Name="System" />
    <Namespace Name="FsInfoCat.Local.Model">
      <Interface Name="ILocalSharedFileTag" Access="public">
        <Documentation>
          <summary>
Generic interface for an <see cref="ILocalSharedTagDefinition" /> that is associated with an <see cref="ILocalFile" />.
</summary>
          <seealso cref="ILocalSharedTag" />
          <seealso cref="ISharedFileTag" />
          <seealso cref="ILocalFileTag" />
          <seealso cref="IHasMembershipKeyReference{ILocalFile, ILocalSharedTagDefinition}" />
          <seealso cref="IEquatable{ILocalSharedFileTag}" />
          <seealso cref="Upstream.Model.IUpstreamSharedFileTag" />
        </Documentation>
        <Implements>
          <SimpleBaseType Name="ILocalSharedTag" />
          <SimpleBaseType Name="ISharedFileTag" />
          <SimpleBaseType Name="ILocalFileTag" />
          <SimpleBaseType>
            <!--TODO: Need <xsl:template match="GenericName" mode="BaseTypes"></xsl:template>-->
          </SimpleBaseType>
          <SimpleBaseType>
            <!--TODO: Need <xsl:template match="GenericName" mode="BaseTypes"></xsl:template>-->
          </SimpleBaseType>
        </Implements>
      </Interface>
    </Namespace>
  </Source>
  <Source Path="Local\Model\ILocalSharedSubdirectoryTag.cs" Id="2033d8ff-f07e-40e5-93f6-8e4703827981">
    <Using Name="FsInfoCat.Model" />
    <Using Name="System" />
    <Namespace Name="FsInfoCat.Local.Model">
      <Interface Name="ILocalSharedSubdirectoryTag" Access="public">
        <Documentation>
          <summary>
Generic interface for an <see cref="ILocalSharedTagDefinition" /> that is associated with an <see cref="ILocalSubdirectory" />.
</summary>
          <seealso cref="ILocalSharedTag" />
          <seealso cref="ISharedSubdirectoryTag" />
          <seealso cref="ILocalSubdirectoryTag" />
          <seealso cref="IHasMembershipKeyReference{ILocalSubdirectory, ILocalSharedTagDefinition}" />
          <seealso cref="IEquatable{ILocalSharedSubdirectoryTag}" />
          <seealso cref="Upstream.Model.IUpstreamSharedSubdirectoryTag" />
        </Documentation>
        <Implements>
          <SimpleBaseType Name="ILocalSharedTag" />
          <SimpleBaseType Name="ISharedSubdirectoryTag" />
          <SimpleBaseType Name="ILocalSubdirectoryTag" />
          <SimpleBaseType>
            <!--TODO: Need <xsl:template match="GenericName" mode="BaseTypes"></xsl:template>-->
          </SimpleBaseType>
          <SimpleBaseType>
            <!--TODO: Need <xsl:template match="GenericName" mode="BaseTypes"></xsl:template>-->
          </SimpleBaseType>
        </Implements>
      </Interface>
    </Namespace>
  </Source>
  <Source Path="Local\Model\ILocalSharedTag.cs" Id="bfa17dad-281b-4de0-b7b9-64fe72733af9">
    <Using Name="FsInfoCat.Model" />
    <Namespace Name="FsInfoCat.Local.Model">
      <Interface Name="ILocalSharedTag" Access="public">
        <Documentation>
          <summary>
Generic interface for an entity that associates an <see cref="ILocalSharedTagDefinition" /> with an <see cref="ILocalFile" />, <see cref="ILocalSubdirectory" />
or <see cref="ILocalVolume" />.
</summary>
          <seealso cref="ILocalItemTag" />
          <seealso cref="ISharedTag" />
          <seealso cref="Upstream.Model.IUpstreamSharedTag" />
        </Documentation>
        <Implements>
          <SimpleBaseType Name="ILocalItemTag" />
          <SimpleBaseType Name="ISharedTag" />
        </Implements>
        <Property Name="Definition">
          <Documentation>
            <summary>
Gets the tag definition.
</summary>
            <value>The tag definition that is associated with the <see cref="ILocalDbEntity" />.</value>
          </Documentation>
          <Type>
            <Identifier Name="ILocalSharedTagDefinition" />
          </Type>
          <!--TODO: Need <xsl:template match="Modifiers" mode="Root"></xsl:template>-->
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
      </Interface>
    </Namespace>
  </Source>
  <Source Path="Local\Model\ILocalSharedTagDefinition.cs" Id="3a359623-3724-4b9e-a7bb-37a4727f8916">
    <Using Name="FsInfoCat.Model" />
    <Using Name="System" />
    <Using Name="System.Collections.Generic" />
    <Namespace Name="FsInfoCat.Local.Model">
      <Interface Name="ILocalSharedTagDefinition" Access="public">
        <Documentation>
          <summary>
Generic interface for a shared tag list item entity that can be associated with <see cref="ILocalFile" />, <see cref="ILocalSubdirectory" />
or <see cref="ILocalVolume" /> entities.
</summary>
          <seealso cref="ILocalTagDefinition" />
          <seealso cref="ISharedTagDefinition" />
          <seealso cref="IEquatable{ILocalSharedTagDefinition}" />
          <seealso cref="Upstream.Model.IUpstreamSharedTagDefinition" />
        </Documentation>
        <Implements>
          <SimpleBaseType Name="ILocalTagDefinition" />
          <SimpleBaseType Name="ISharedTagDefinition" />
          <SimpleBaseType>
            <!--TODO: Need <xsl:template match="GenericName" mode="BaseTypes"></xsl:template>-->
          </SimpleBaseType>
        </Implements>
        <Property Name="FileTags">
          <Documentation>
            <summary>
Gets the file tags.
</summary>
            <value>The <see cref="ILocalSharedFileTag" /> entities that associate <see cref="ILocalFile" /> entities with the current entity.</value>
          </Documentation>
          <Type>
            <Generic Name="IEnumerable">
              <Identifier Name="ILocalSharedFileTag" />
            </Generic>
          </Type>
          <!--TODO: Need <xsl:template match="Modifiers" mode="Root"></xsl:template>-->
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="SubdirectoryTags">
          <Documentation>
            <summary>
Gets the subdirectory tags.
</summary>
            <value>The <see cref="ILocalSharedSubdirectoryTag" /> entities that associate <see cref="ILocalSubdirectory" /> entities with the current entity.</value>
          </Documentation>
          <Type>
            <Generic Name="IEnumerable">
              <Identifier Name="ILocalSharedSubdirectoryTag" />
            </Generic>
          </Type>
          <!--TODO: Need <xsl:template match="Modifiers" mode="Root"></xsl:template>-->
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="VolumeTags">
          <Documentation>
            <summary>
Gets the volume tags.
</summary>
            <value>The <see cref="ILocalSharedVolumeTag" /> entities that associate <see cref="ILocalVolume" /> entities with the current entity.</value>
          </Documentation>
          <Type>
            <Generic Name="IEnumerable">
              <Identifier Name="ILocalSharedVolumeTag" />
            </Generic>
          </Type>
          <!--TODO: Need <xsl:template match="Modifiers" mode="Root"></xsl:template>-->
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
      </Interface>
    </Namespace>
  </Source>
  <Source Path="Local\Model\ILocalSharedVolumeTag.cs" Id="2078bd64-1a80-420d-8a3f-4738bd6da593">
    <Using Name="FsInfoCat.Model" />
    <Using Name="System" />
    <Namespace Name="FsInfoCat.Local.Model">
      <Interface Name="ILocalSharedVolumeTag" Access="public">
        <Documentation>
          <summary>
Generic interface for an <see cref="ILocalSharedTagDefinition" /> that is associated with an <see cref="ILocalVolume" />.
</summary>
          <seealso cref="ILocalSharedTag" />
          <seealso cref="ISharedVolumeTag" />
          <seealso cref="ILocalVolumeTag" />
          <seealso cref="IHasMembershipKeyReference{ILocalVolume, ILocalSharedTagDefinition}" />
          <seealso cref="IEquatable{ILocalSharedVolumeTag}" />
          <seealso cref="Upstream.Model.IUpstreamSharedVolumeTag" />
        </Documentation>
        <Implements>
          <SimpleBaseType Name="ILocalSharedTag" />
          <SimpleBaseType Name="ISharedVolumeTag" />
          <SimpleBaseType Name="ILocalVolumeTag" />
          <SimpleBaseType>
            <!--TODO: Need <xsl:template match="GenericName" mode="BaseTypes"></xsl:template>-->
          </SimpleBaseType>
          <SimpleBaseType>
            <!--TODO: Need <xsl:template match="GenericName" mode="BaseTypes"></xsl:template>-->
          </SimpleBaseType>
        </Implements>
      </Interface>
    </Namespace>
  </Source>
  <Source Path="Local\Model\ILocalSubdirectory.cs" Id="a6f451d4-b39a-49da-97ee-89486f34f479">
    <Using Name="FsInfoCat.Model" />
    <Using Name="System" />
    <Using Name="System.Collections.Generic" />
    <Using Name="System.ComponentModel.DataAnnotations" />
    <Namespace Name="FsInfoCat.Local.Model">
      <Interface Name="ILocalSubdirectory" Access="public">
        <Documentation>
          <summary>
Interface for entities that represent a subdirectory node within a file system on the local host machine.
</summary>
          <seealso cref="ILocalDbFsItem" />
          <seealso cref="ISubdirectory" />
          <seealso cref="IEquatable{ILocalSubdirectory}" />
          <seealso cref="Upstream.Model.IUpstreamSubdirectory" />
        </Documentation>
        <Implements>
          <SimpleBaseType Name="ILocalDbFsItem" />
          <SimpleBaseType Name="ISubdirectory" />
          <SimpleBaseType Name="ILocalSubdirectoryRow" />
          <SimpleBaseType>
            <!--TODO: Need <xsl:template match="GenericName" mode="BaseTypes"></xsl:template>-->
          </SimpleBaseType>
        </Implements>
        <Property Name="Parent">
          <Documentation>
            <summary>
Gets the parent subdirectory of the current file system item.
</summary>
            <value>The parent <see cref="ILocalSubdirectory" /> of the current file system item or <see langword="null" /> if this is the root subdirectory.</value>
          </Documentation>
          <Display Name="DisplayName_Parent" ShortName="DisplayName_Parent" Description="DisplayName_Parent" />
          <Type>
            <Identifier Name="ILocalSubdirectory" />
          </Type>
          <!--TODO: Need <xsl:template match="Modifiers" mode="Root"></xsl:template>-->
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="Volume">
          <Documentation>
            <summary>
Gets the parent volume.
</summary>
            <value>The parent volume (if this is the root subdirectory or <see langword="null" /> if this is a subdirectory.</value>
            <remarks>If this is <see langword="null" />, then <see cref="Parent" /> should not be null, and vice-versa.</remarks>
          </Documentation>
          <Display Name="DisplayName_Volume" ShortName="DisplayName_Volume" Description="DisplayName_Volume" />
          <Type>
            <Identifier Name="ILocalVolume" />
          </Type>
          <!--TODO: Need <xsl:template match="Modifiers" mode="Root"></xsl:template>-->
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="CrawlConfiguration">
          <Documentation>
            <summary>
Gets the crawl configuration that starts with the current subdirectory.
</summary>
            <value>The crawl configuration that starts with the current subdirectory.</value>
          </Documentation>
          <Display Name="DisplayName_CrawlConfiguration" ShortName="DisplayName_CrawlConfiguration" Description="DisplayName_CrawlConfiguration" />
          <Type>
            <Identifier Name="ILocalCrawlConfiguration" />
          </Type>
          <!--TODO: Need <xsl:template match="Modifiers" mode="Root"></xsl:template>-->
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="Files">
          <Documentation>
            <summary>
Gets the files directly contained within this subdirectory.
</summary>
            <value>The files directly contained within this subdirectory.</value>
          </Documentation>
          <Display Name="DisplayName_Files" ShortName="DisplayName_Files" Description="DisplayName_Files" />
          <Type>
            <Generic Name="IEnumerable">
              <Identifier Name="ILocalFile" />
            </Generic>
          </Type>
          <!--TODO: Need <xsl:template match="Modifiers" mode="Root"></xsl:template>-->
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="SubDirectories">
          <Documentation>
            <summary>
Gets the nested subdirectories directly contained within this subdirectory.
</summary>
            <value>The nested subdirectories directly contained within this subdirectory.</value>
          </Documentation>
          <Display Name="DisplayName_SubDirectories" ShortName="DisplayName_SubDirectories" Description="DisplayName_SubDirectories" />
          <Type>
            <Generic Name="IEnumerable">
              <Identifier Name="ILocalSubdirectory" />
            </Generic>
          </Type>
          <!--TODO: Need <xsl:template match="Modifiers" mode="Root"></xsl:template>-->
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="AccessErrors">
          <Documentation>
            <summary>
Gets the access errors for the current subdirectory.
</summary>
            <value>The access errors for the current subdirectory.</value>
          </Documentation>
          <Display Name="DisplayName_AccessErrors" ShortName="DisplayName_AccessErrors" Description="DisplayName_AccessErrors" />
          <Type>
            <Generic Name="IEnumerable">
              <Identifier Name="ILocalSubdirectoryAccessError" />
            </Generic>
          </Type>
          <!--TODO: Need <xsl:template match="Modifiers" mode="Root"></xsl:template>-->
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="PersonalTags">
          <Documentation>
            <summary>
Gets the personal tags associated with the current subdirectory.
</summary>
            <value>The <see cref="ILocalPersonalSubdirectoryTag" /> entities that associate <see cref="ILocalPersonalTagDefinition" /> entities with the current subdirectory.</value>
          </Documentation>
          <Display Name="DisplayName_PersonalTags" ShortName="DisplayName_PersonalTags" Description="DisplayName_PersonalTags" />
          <Type>
            <Generic Name="IEnumerable">
              <Identifier Name="ILocalPersonalSubdirectoryTag" />
            </Generic>
          </Type>
          <!--TODO: Need <xsl:template match="Modifiers" mode="Root"></xsl:template>-->
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="SharedTags">
          <Documentation>
            <summary>
Gets the shared tags associated with the current subdirectory.
</summary>
            <value>The <see cref="ILocalSharedSubdirectoryTag" /> entities that associate <see cref="ILocalSharedTagDefinition" /> entities with the current subdirectory.</value>
          </Documentation>
          <Display Name="DisplayName_SharedTags" ShortName="DisplayName_SharedTags" Description="DisplayName_SharedTags" />
          <Type>
            <Generic Name="IEnumerable">
              <Identifier Name="ILocalSharedSubdirectoryTag" />
            </Generic>
          </Type>
          <!--TODO: Need <xsl:template match="Modifiers" mode="Root"></xsl:template>-->
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
      </Interface>
    </Namespace>
  </Source>
  <Source Path="Local\Model\ILocalSubdirectoryAccessError.cs" Id="2cdf73ba-334e-4b81-a14b-8ae834cb90d2">
    <Using Name="FsInfoCat.Model" />
    <Using Name="System" />
    <Using Name="System.ComponentModel.DataAnnotations" />
    <Namespace Name="FsInfoCat.Local.Model">
      <Interface Name="ILocalSubdirectoryAccessError" Access="public">
        <Documentation>
          <summary>
Generic interface for subdirectory access error entities that occurred on the local host machine.
</summary>
          <seealso cref="IEquatable{ILocalSubdirectoryAccessError}" />
          <seealso cref="ILocalAccessError" />
          <seealso cref="ISubdirectoryAccessError" />
          <seealso cref="ILocalDbContext.SubdirectoryAccessErrors" />
          <seealso cref="ILocalSubdirectory.AccessErrors" />
          <seealso cref="Upstream.Model.IUpstreamSubdirectoryAccessError" />
        </Documentation>
        <Implements>
          <SimpleBaseType Name="ILocalAccessError" />
          <SimpleBaseType Name="ISubdirectoryAccessError" />
          <SimpleBaseType>
            <!--TODO: Need <xsl:template match="GenericName" mode="BaseTypes"></xsl:template>-->
          </SimpleBaseType>
        </Implements>
        <Property Name="Target">
          <Documentation>
            <summary>
Gets the target subdirectory to which the access error applies.
</summary>
            <value>The <see cref="ILocalSubdirectory" /> entity that this error applies to.</value>
          </Documentation>
          <Display Name="DisplayName_Target" ShortName="DisplayName_Target" Description="DisplayName_Target" />
          <Type>
            <Identifier Name="ILocalSubdirectory" />
          </Type>
          <!--TODO: Need <xsl:template match="Modifiers" mode="Root"></xsl:template>-->
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
      </Interface>
    </Namespace>
  </Source>
  <Source Path="Local\Model\ILocalSubdirectoryListItem.cs" Id="60664b5b-23a6-442f-bb9a-1af7a5d85497">
    <Using Name="FsInfoCat.Model" />
    <Namespace Name="FsInfoCat.Local.Model">
      <Interface Name="ILocalSubdirectoryListItem" Access="public">
        <Documentation>
          <summary>
Generic interface for a database list item entity that represents a subdirectory.
</summary>
          <seealso cref="ISubdirectoryListItem" />
          <seealso cref="ILocalSubdirectoryRow" />
          <seealso cref="Upstream.Model.IUpstreamSubdirectoryListItem" />
        </Documentation>
        <Implements>
          <SimpleBaseType Name="ISubdirectoryListItem" />
          <SimpleBaseType Name="ILocalSubdirectoryRow" />
        </Implements>
      </Interface>
    </Namespace>
  </Source>
  <Source Path="Local\Model\ILocalSubdirectoryListItemWithAncestorNames.cs" Id="a774e34b-5d84-40f7-8bdc-7b7193bd74d2">
    <Using Name="FsInfoCat.Model" />
    <Namespace Name="FsInfoCat.Local.Model">
      <Interface Name="ILocalSubdirectoryListItemWithAncestorNames" Access="public">
        <Documentation>
          <summary>
Generic interface for a database list item entity that represents a subdirectory and contains the names of the ancestor subdirectories.
</summary>
          <seealso cref="ISubdirectoryListItemWithAncestorNames" />
          <seealso cref="ILocalSubdirectoryRow" />
          <seealso cref="Upstream.Model.IUpstreamSubdirectoryListItemWithAncestorNames" />
        </Documentation>
        <Implements>
          <SimpleBaseType Name="ISubdirectoryListItemWithAncestorNames" />
          <SimpleBaseType Name="ILocalSubdirectoryRow" />
        </Implements>
      </Interface>
    </Namespace>
  </Source>
  <Source Path="Local\Model\ILocalSubdirectoryRow.cs" Id="718120f1-edc4-4561-bc63-d6b395ecbd2d">
    <Using Name="FsInfoCat.Model" />
    <Namespace Name="FsInfoCat.Local.Model">
      <Interface Name="ILocalSubdirectoryRow" Access="public">
        <Documentation>
          <summary>
Generic interface for a database entity that represents a subdirectory.
</summary>
          <seealso cref="ILocalDbFsItemRow" />
          <seealso cref="ISubdirectoryRow" />
          <seealso cref="Upstream.Model.IUpstreamSubdirectoryRow" />
        </Documentation>
        <Implements>
          <SimpleBaseType Name="ILocalDbFsItemRow" />
          <SimpleBaseType Name="ISubdirectoryRow" />
        </Implements>
      </Interface>
    </Namespace>
  </Source>
  <Source Path="Local\Model\ILocalSubdirectoryTag.cs" Id="e4624882-534d-4e07-aef1-766b467cf604">
    <Using Name="FsInfoCat.Model" />
    <Using Name="System" />
    <Namespace Name="FsInfoCat.Local.Model">
      <Interface Name="ILocalSubdirectoryTag" Access="public">
        <Documentation>
          <summary>
Interface ILocalSubdirectoryTag
</summary>
          <seealso cref="ILocalItemTag" />
          <seealso cref="ISubdirectoryTag" />
          <seealso cref="IHasMembershipKeyReference{ILocalSubdirectory, ILocalTagDefinition}" />
          <seealso cref="IEquatable{ILocalSubdirectoryTag}" />
          <seealso cref="Upstream.Model.IUpstreamSubdirectoryTag" />
        </Documentation>
        <Implements>
          <SimpleBaseType Name="ILocalItemTag" />
          <SimpleBaseType Name="ISubdirectoryTag" />
          <SimpleBaseType>
            <!--TODO: Need <xsl:template match="GenericName" mode="BaseTypes"></xsl:template>-->
          </SimpleBaseType>
          <SimpleBaseType>
            <!--TODO: Need <xsl:template match="GenericName" mode="BaseTypes"></xsl:template>-->
          </SimpleBaseType>
        </Implements>
        <Property Name="Tagged">
          <Documentation>
            <summary>
Gets the tagged subdirectory.
</summary>
            <value>The tagged <see cref="ILocalSubdirectory" />.</value>
          </Documentation>
          <Type>
            <Identifier Name="ILocalSubdirectory" />
          </Type>
          <!--TODO: Need <xsl:template match="Modifiers" mode="Root"></xsl:template>-->
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
      </Interface>
    </Namespace>
  </Source>
  <Source Path="Local\Model\ILocalSummaryPropertiesListItem.cs" Id="10f8a83e-10bf-4647-8d4a-8c3dd846d538">
    <Using Name="FsInfoCat.Model" />
    <Namespace Name="FsInfoCat.Local.Model">
      <Interface Name="ILocalSummaryPropertiesListItem" Access="public">
        <Documentation>
          <summary>
Generic interface for entities containing extended file summary properties.
</summary>
          <seealso cref="ILocalSummaryPropertiesRow" />
          <seealso cref="ILocalPropertiesListItem" />
          <seealso cref="ISummaryPropertiesListItem" />
          <seealso cref="Upstream.Model.IUpstreamSummaryPropertiesListItem" />
        </Documentation>
        <Implements>
          <SimpleBaseType Name="ILocalSummaryPropertiesRow" />
          <SimpleBaseType Name="ILocalPropertiesListItem" />
          <SimpleBaseType Name="ISummaryPropertiesListItem" />
        </Implements>
      </Interface>
    </Namespace>
  </Source>
  <Source Path="Local\Model\ILocalSummaryPropertiesRow.cs" Id="85cbfc30-2907-4dd9-a97a-8d4d52f1966a">
    <Using Name="FsInfoCat.Model" />
    <Namespace Name="FsInfoCat.Local.Model">
      <Interface Name="ILocalSummaryPropertiesRow" Access="public">
        <Documentation>
          <summary>
Generic interface for entities containing extended file summary properties.
</summary>
          <seealso cref="ILocalPropertiesRow" />
          <seealso cref="ISummaryPropertiesRow" />
          <seealso cref="Upstream.Model.IUpstreamSummaryPropertiesRow" />
        </Documentation>
        <Implements>
          <SimpleBaseType Name="ILocalPropertiesRow" />
          <SimpleBaseType Name="ISummaryPropertiesRow" />
        </Implements>
      </Interface>
    </Namespace>
  </Source>
  <Source Path="Local\Model\ILocalSummaryPropertySet.cs" Id="685a98d5-d08b-4c58-9a51-e985f3f7575a">
    <Using Name="FsInfoCat.Model" />
    <Using Name="System" />
    <Namespace Name="FsInfoCat.Local.Model">
      <Interface Name="ILocalSummaryPropertySet" Access="public">
        <Documentation>
          <summary>
Contains extended summary file property values.
</summary>
          <seealso cref="ILocalSummaryPropertiesRow" />
          <seealso cref="ILocalPropertySet" />
          <seealso cref="ISummaryPropertySet" />
          <seealso cref="IEquatable{ILocalSummaryPropertySet}" />
          <seealso cref="Upstream.Model.IUpstreamSummaryPropertySet" />
        </Documentation>
        <Implements>
          <SimpleBaseType Name="ILocalSummaryPropertiesRow" />
          <SimpleBaseType Name="ILocalPropertySet" />
          <SimpleBaseType Name="ISummaryPropertySet" />
          <SimpleBaseType>
            <!--TODO: Need <xsl:template match="GenericName" mode="BaseTypes"></xsl:template>-->
          </SimpleBaseType>
        </Implements>
      </Interface>
    </Namespace>
  </Source>
  <Source Path="Local\Model\ILocalSymbolicName.cs" Id="d40e5705-730f-468f-b9d3-76adf4e9005c">
    <Using Name="FsInfoCat.Model" />
    <Using Name="System" />
    <Using Name="System.ComponentModel.DataAnnotations" />
    <Namespace Name="FsInfoCat.Local.Model">
      <Interface Name="ILocalSymbolicName" Access="public">
        <Documentation>
          <summary>
Interface for entities that represent a symbolic name for a file system type.
</summary>
          <seealso cref="ILocalDbEntity" />
          <seealso cref="ISymbolicName" />
          <seealso cref="IEquatable{ILocalSymbolicName}" />
          <seealso cref="Upstream.Model.IUpstreamSymbolicName" />
        </Documentation>
        <Implements>
          <SimpleBaseType Name="ILocalSymbolicNameRow" />
          <SimpleBaseType Name="ISymbolicName" />
          <SimpleBaseType>
            <!--TODO: Need <xsl:template match="GenericName" mode="BaseTypes"></xsl:template>-->
          </SimpleBaseType>
        </Implements>
        <Property Name="FileSystem">
          <Documentation>
            <summary>
Gets the file system that this symbolic name refers to.
</summary>
            <value>The file system entity that represents the file system type that this symbolic name refers to.</value>
          </Documentation>
          <Display Name="DisplayName_FileSystem" ShortName="DisplayName_FileSystem" Description="DisplayName_FileSystem" />
          <Type>
            <Identifier Name="ILocalFileSystem" />
          </Type>
          <!--TODO: Need <xsl:template match="Modifiers" mode="Root"></xsl:template>-->
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
      </Interface>
    </Namespace>
  </Source>
  <Source Path="Local\Model\ILocalSymbolicNameListItem.cs" Id="011790b6-1bf9-48ba-960f-459e7fa09bfe">
    <Using Name="FsInfoCat.Model" />
    <Namespace Name="FsInfoCat.Local.Model">
      <Interface Name="ILocalSymbolicNameListItem" Access="public">
        <Documentation>
          <summary>
Interface for list item entities that represent a symbolic name for a file system type.
</summary>
          <seealso cref="ILocalSymbolicNameRow" />
          <seealso cref="ISymbolicNameListItem" />
          <seealso cref="Upstream.Model.IUpstreamSymbolicNameListItem" />
        </Documentation>
        <Implements>
          <SimpleBaseType Name="ILocalSymbolicNameRow" />
          <SimpleBaseType Name="ISymbolicNameListItem" />
        </Implements>
      </Interface>
    </Namespace>
  </Source>
  <Source Path="Local\Model\ILocalSymbolicNameRow.cs" Id="5617cf1c-7b1c-43b1-a6c2-252b81103227">
    <Using Name="FsInfoCat.Model" />
    <Namespace Name="FsInfoCat.Local.Model">
      <Interface Name="ILocalSymbolicNameRow" Access="public">
        <Documentation>
          <summary>
Generic interface for entities that represent a symbolic name for a file system type.
</summary>
          <seealso cref="ILocalDbEntity" />
          <seealso cref="ISymbolicNameRow" />
          <seealso cref="Upstream.Model.IUpstreamSymbolicNameRow" />
        </Documentation>
        <Implements>
          <SimpleBaseType Name="ILocalDbEntity" />
          <SimpleBaseType Name="ISymbolicNameRow" />
        </Implements>
      </Interface>
    </Namespace>
  </Source>
  <Source Path="Local\Model\ILocalTagDefinition.cs" Id="ae08cf91-a564-442c-aa8f-4f31327f53ca">
    <Using Name="FsInfoCat.Model" />
    <Using Name="System" />
    <Using Name="System.Collections.Generic" />
    <Namespace Name="FsInfoCat.Local.Model">
      <Interface Name="ILocalTagDefinition" Access="public">
        <Documentation>
          <summary>
Generic interface for a tag entity that can be associated with <see cref="ILocalFile" />, <see cref="ILocalSubdirectory" /> or <see cref="ILocalVolume" /> entities.
</summary>
          <seealso cref="ILocalTagDefinitionRow" />
          <seealso cref="ITagDefinition" />
          <seealso cref="IEquatable{ILocalTagDefinition}" />
          <seealso cref="Upstream.Model.IUpstreamTagDefinition" />
        </Documentation>
        <Implements>
          <SimpleBaseType Name="ILocalTagDefinitionRow" />
          <SimpleBaseType Name="ITagDefinition" />
          <SimpleBaseType>
            <!--TODO: Need <xsl:template match="GenericName" mode="BaseTypes"></xsl:template>-->
          </SimpleBaseType>
        </Implements>
        <Property Name="FileTags">
          <Documentation>
            <summary>
Gets the file tags.
</summary>
            <value>The <see cref="ILocalFileTag" /> entities that associate <see cref="ILocalFile" /> entities with the current entity.</value>
          </Documentation>
          <Type>
            <Generic Name="IEnumerable">
              <Identifier Name="ILocalFileTag" />
            </Generic>
          </Type>
          <!--TODO: Need <xsl:template match="Modifiers" mode="Root"></xsl:template>-->
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="SubdirectoryTags">
          <Documentation>
            <summary>
Gets the subdirectory tags.
</summary>
            <value>The <see cref="ILocalSubdirectoryTag" /> entities that associate <see cref="ILocalSubdirectory" /> entities with the current entity.</value>
          </Documentation>
          <Type>
            <Generic Name="IEnumerable">
              <Identifier Name="ILocalSubdirectoryTag" />
            </Generic>
          </Type>
          <!--TODO: Need <xsl:template match="Modifiers" mode="Root"></xsl:template>-->
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="VolumeTags">
          <Documentation>
            <summary>
Gets the volume tags.
</summary>
            <value>The <see cref="ILocalVolumeTag" /> entities that associate <see cref="ILocalVolume" /> entities with the current entity.</value>
          </Documentation>
          <Type>
            <Generic Name="IEnumerable">
              <Identifier Name="ILocalVolumeTag" />
            </Generic>
          </Type>
          <!--TODO: Need <xsl:template match="Modifiers" mode="Root"></xsl:template>-->
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
      </Interface>
    </Namespace>
  </Source>
  <Source Path="Local\Model\ILocalTagDefinitionListItem.cs" Id="774c70b5-efae-428a-9eef-2478f8683049">
    <Using Name="FsInfoCat.Model" />
    <Namespace Name="FsInfoCat.Local.Model">
      <Interface Name="ILocalTagDefinitionListItem" Access="public">
        <Documentation>
          <summary>
Generic interface for a tag list item entity that can be associated with <see cref="ILocalFile" />, <see cref="ILocalSubdirectory" /> or <see cref="ILocalVolume" /> entities.
</summary>
          <seealso cref="ITagDefinitionListItem" />
          <seealso cref="ILocalTagDefinitionRow" />
          <seealso cref="Upstream.Model.IUpstreamTagDefinitionListItem" />
        </Documentation>
        <Implements>
          <SimpleBaseType Name="ITagDefinitionListItem" />
          <SimpleBaseType Name="ILocalTagDefinitionRow" />
        </Implements>
      </Interface>
    </Namespace>
  </Source>
  <Source Path="Local\Model\ILocalTagDefinitionRow.cs" Id="cac40da1-a888-42dd-84ec-5f0e17efb950">
    <Using Name="FsInfoCat.Model" />
    <Namespace Name="FsInfoCat.Local.Model">
      <Interface Name="ILocalTagDefinitionRow" Access="public">
        <Documentation>
          <summary>
Generic interface for a tag entity that can be associated with <see cref="ILocalFile" />, <see cref="ILocalSubdirectory" /> or <see cref="ILocalVolume" /> entities.
</summary>
          <seealso cref="ILocalDbEntity" />
          <seealso cref="ITagDefinitionRow" />
          <seealso cref="Upstream.Model.IUpstreamTagDefinitionRow" />
        </Documentation>
        <Implements>
          <SimpleBaseType Name="ILocalDbEntity" />
          <SimpleBaseType Name="ITagDefinitionRow" />
        </Implements>
      </Interface>
    </Namespace>
  </Source>
  <Source Path="Local\Model\ILocalVideoPropertiesListItem.cs" Id="f243c867-0cf5-465b-9b63-a25628ad668b">
    <Using Name="FsInfoCat.Model" />
    <Namespace Name="FsInfoCat.Local.Model">
      <Interface Name="ILocalVideoPropertiesListItem" Access="public">
        <Documentation>
          <summary>
Generic interface for list item entities containing extended file properties for video files.
</summary>
          <seealso cref="ILocalVideoPropertiesRow" />
          <seealso cref="ILocalPropertiesListItem" />
          <seealso cref="IVideoPropertiesListItem" />
          <seealso cref="Upstream.Model.IUpstreamVideoPropertiesListItem" />
        </Documentation>
        <Implements>
          <SimpleBaseType Name="ILocalVideoPropertiesRow" />
          <SimpleBaseType Name="ILocalPropertiesListItem" />
          <SimpleBaseType Name="IVideoPropertiesListItem" />
        </Implements>
      </Interface>
    </Namespace>
  </Source>
  <Source Path="Local\Model\ILocalVideoPropertiesRow.cs" Id="fcd9d865-abd9-4dbd-b0e1-716f12d9bfe2">
    <Using Name="FsInfoCat.Model" />
    <Namespace Name="FsInfoCat.Local.Model">
      <Interface Name="ILocalVideoPropertiesRow" Access="public">
        <Documentation>
          <summary>
Generic interface for entities containing extended file properties for video files.
</summary>
          <seealso cref="ILocalPropertiesRow" />
          <seealso cref="IVideoPropertiesRow" />
          <seealso cref="Upstream.Model.IUpstreamVideoPropertiesRow" />
        </Documentation>
        <Implements>
          <SimpleBaseType Name="ILocalPropertiesRow" />
          <SimpleBaseType Name="IVideoPropertiesRow" />
        </Implements>
      </Interface>
    </Namespace>
  </Source>
  <Source Path="Local\Model\ILocalVideoPropertySet.cs" Id="67bb629f-1345-4813-9dfe-5598d074fe14">
    <Using Name="FsInfoCat.Model" />
    <Using Name="System" />
    <Namespace Name="FsInfoCat.Local.Model">
      <Interface Name="ILocalVideoPropertySet" Access="public">
        <Documentation>
          <summary>
Contains extended video file property values.
</summary>
          <seealso cref="ILocalVideoPropertiesRow" />
          <seealso cref="ILocalPropertySet" />
          <seealso cref="IVideoPropertySet" />
          <seealso cref="IEquatable{ILocalVideoPropertySet}" />
          <seealso cref="Upstream.Model.IUpstreamVideoPropertySet" />
        </Documentation>
        <Implements>
          <SimpleBaseType Name="ILocalVideoPropertiesRow" />
          <SimpleBaseType Name="ILocalPropertySet" />
          <SimpleBaseType Name="IVideoPropertySet" />
          <SimpleBaseType>
            <!--TODO: Need <xsl:template match="GenericName" mode="BaseTypes"></xsl:template>-->
          </SimpleBaseType>
        </Implements>
      </Interface>
    </Namespace>
  </Source>
  <Source Path="Local\Model\ILocalVolume.cs" Id="3bb7f9af-ead9-4654-b85b-3eea65d1970a">
    <Using Name="FsInfoCat.Model" />
    <Using Name="System" />
    <Using Name="System.Collections.Generic" />
    <Using Name="System.ComponentModel.DataAnnotations" />
    <Namespace Name="FsInfoCat.Local.Model">
      <Interface Name="ILocalVolume" Access="public">
        <Documentation>
          <summary>
Interface for entities which represent a logical file system volume on the local host machine.
</summary>
          <seealso cref="ILocalDbEntity" />
          <seealso cref="IVolume" />
          <seealso cref="Upstream.Model.IUpstreamVolume" />
          <seealso cref="IEquatable{ILocalVolume}" />
        </Documentation>
        <Implements>
          <SimpleBaseType Name="ILocalVolumeRow" />
          <SimpleBaseType Name="IVolume" />
          <SimpleBaseType>
            <!--TODO: Need <xsl:template match="GenericName" mode="BaseTypes"></xsl:template>-->
          </SimpleBaseType>
        </Implements>
        <Property Name="RootDirectory">
          <Documentation>
            <summary>
Gets the root directory of this volume.
</summary>
            <value>The root directory of this volume.</value>
          </Documentation>
          <Display Name="DisplayName_RootDirectory" ShortName="DisplayName_RootDirectory" Description="DisplayName_RootDirectory" />
          <Type>
            <Identifier Name="ILocalSubdirectory" />
          </Type>
          <!--TODO: Need <xsl:template match="Modifiers" mode="Root"></xsl:template>-->
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="FileSystem">
          <Documentation>
            <summary>
Gets the file system type.
</summary>
            <value>The file system type for this volume.</value>
          </Documentation>
          <Display Name="DisplayName_FileSystem" ShortName="DisplayName_FileSystem" Description="DisplayName_FileSystem" />
          <Type>
            <Identifier Name="ILocalFileSystem" />
          </Type>
          <!--TODO: Need <xsl:template match="Modifiers" mode="Root"></xsl:template>-->
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="AccessErrors">
          <Documentation>
            <summary>
Gets the access errors for the current file system item.
</summary>
            <value>The access errors for the current file system item.</value>
          </Documentation>
          <Display Name="DisplayName_AccessErrors" ShortName="DisplayName_AccessErrors" Description="DisplayName_AccessErrors" />
          <Type>
            <Generic Name="IEnumerable">
              <Identifier Name="ILocalVolumeAccessError" />
            </Generic>
          </Type>
          <!--TODO: Need <xsl:template match="Modifiers" mode="Root"></xsl:template>-->
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="PersonalTags">
          <Documentation>
            <summary>
Gets the personal tags associated with the current volume.
</summary>
            <value>The <see cref="ILocalPersonalVolumeTag" /> entities that associate <see cref="ILocalPersonalTagDefinition" /> entities with the current volume.</value>
          </Documentation>
          <Type>
            <Generic Name="IEnumerable">
              <Identifier Name="ILocalPersonalVolumeTag" />
            </Generic>
          </Type>
          <!--TODO: Need <xsl:template match="Modifiers" mode="Root"></xsl:template>-->
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="SharedTags">
          <Documentation>
            <summary>
Gets the shared tags associated with the current volume.
</summary>
            <value>The <see cref="ILocalSharedVolumeTag" /> entities that associate <see cref="ILocalSharedTagDefinition" /> entities with the current volume.</value>
          </Documentation>
          <Type>
            <Generic Name="IEnumerable">
              <Identifier Name="ILocalSharedVolumeTag" />
            </Generic>
          </Type>
          <!--TODO: Need <xsl:template match="Modifiers" mode="Root"></xsl:template>-->
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
      </Interface>
    </Namespace>
  </Source>
  <Source Path="Local\Model\ILocalVolumeAccessError.cs" Id="386fdf95-63b2-43f4-948a-efe26733e2b6">
    <Using Name="FsInfoCat.Model" />
    <Using Name="System" />
    <Using Name="System.ComponentModel.DataAnnotations" />
    <Namespace Name="FsInfoCat.Local.Model">
      <Interface Name="ILocalVolumeAccessError" Access="public">
        <Documentation>
          <summary>
Generic interface for volume access error entities.
</summary>
          <seealso cref="IEquatable{ILocalVolumeAccessError}" />
          <seealso cref="ILocalAccessError" />
          <seealso cref="IVolumeAccessError" />
          <seealso cref="ILocalDbContext.VolumeAccessErrors" />
          <seealso cref="ILocalVolume.AccessErrors" />
          <seealso cref="Upstream.Model.IUpstreamVolumeAccessError" />
        </Documentation>
        <Implements>
          <SimpleBaseType Name="ILocalAccessError" />
          <SimpleBaseType Name="IVolumeAccessError" />
          <SimpleBaseType>
            <!--TODO: Need <xsl:template match="GenericName" mode="BaseTypes"></xsl:template>-->
          </SimpleBaseType>
        </Implements>
        <Property Name="Target">
          <Documentation>
            <summary>
Gets the target entity to which the access error applies.
</summary>
            <value>The <see cref="ILocalDbEntity" /> object that this error applies to.</value>
          </Documentation>
          <Display Name="DisplayName_Target" ShortName="DisplayName_Target" Description="DisplayName_Target" />
          <Type>
            <Identifier Name="ILocalVolume" />
          </Type>
          <!--TODO: Need <xsl:template match="Modifiers" mode="Root"></xsl:template>-->
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
      </Interface>
    </Namespace>
  </Source>
  <Source Path="Local\Model\ILocalVolumeListItem.cs" Id="767ca236-e564-42e6-bf03-df0d1a98277b">
    <Using Name="FsInfoCat.Model" />
    <Namespace Name="FsInfoCat.Local.Model">
      <Interface Name="ILocalVolumeListItem" Access="public">
        <Documentation>
          <summary>
Generic interface for list item entities which represent a logical file system volume.
</summary>
          <seealso cref="ILocalVolumeRow" />
          <seealso cref="IVolumeListItem" />
          <seealso cref="Upstream.Model.IUpstreamVolumeListItem" />
        </Documentation>
        <Implements>
          <SimpleBaseType Name="ILocalVolumeRow" />
          <SimpleBaseType Name="IVolumeListItem" />
        </Implements>
      </Interface>
    </Namespace>
  </Source>
  <Source Path="Local\Model\ILocalVolumeListItemWithFileSystem.cs" Id="3249ffb0-5be5-4e14-a707-e72e340ccda0">
    <Using Name="FsInfoCat.Model" />
    <Namespace Name="FsInfoCat.Local.Model">
      <Interface Name="ILocalVolumeListItemWithFileSystem" Access="public">
        <Documentation>
          <summary>
Generic interface for list item entities which represent a logical file system volume and contains associated file system properties.
</summary>
          <seealso cref="ILocalVolumeListItem" />
          <seealso cref="IVolumeListItemWithFileSystem" />
          <seealso cref="Upstream.Model.IUpstreamVolumeListItemWithFileSystem" />
        </Documentation>
        <Implements>
          <SimpleBaseType Name="ILocalVolumeListItem" />
          <SimpleBaseType Name="IVolumeListItemWithFileSystem" />
        </Implements>
      </Interface>
    </Namespace>
  </Source>
  <Source Path="Local\Model\ILocalVolumeRow.cs" Id="eaec4932-36c9-41cc-93d3-d8c301313e6e">
    <Using Name="FsInfoCat.Model" />
    <Namespace Name="FsInfoCat.Local.Model">
      <Interface Name="ILocalVolumeRow" Access="public">
        <Documentation>
          <summary>
Generic interface for entities which represent a logical file system volume.
</summary>
          <seealso cref="ILocalDbEntity" />
          <seealso cref="IVolumeRow" />
          <seealso cref="Upstream.Model.IUpstreamVolumeRow" />
        </Documentation>
        <Implements>
          <SimpleBaseType Name="ILocalDbEntity" />
          <SimpleBaseType Name="IVolumeRow" />
        </Implements>
      </Interface>
    </Namespace>
  </Source>
  <Source Path="Local\Model\ILocalVolumeTag.cs" Id="dcbf9300-3ad5-444d-9a80-5e24910b376a">
    <Using Name="FsInfoCat.Model" />
    <Using Name="System" />
    <Namespace Name="FsInfoCat.Local.Model">
      <Interface Name="ILocalVolumeTag" Access="public">
        <Documentation>
          <summary>
Generic interface for an <see cref="ILocalTagDefinition" /> that is associated with an <see cref="ILocalVolume" />.
</summary>
          <seealso cref="ILocalItemTag" />
          <seealso cref="IVolumeTag" />
          <seealso cref="IHasMembershipKeyReference{ILocalVolume, ILocalTagDefinition}" />
          <seealso cref="Upstream.Model.IUpstreamVolumeTag" />
          <seealso cref="IEquatable{ILocalVolumeTag}" />
        </Documentation>
        <Implements>
          <SimpleBaseType Name="ILocalItemTag" />
          <SimpleBaseType Name="IVolumeTag" />
          <SimpleBaseType>
            <!--TODO: Need <xsl:template match="GenericName" mode="BaseTypes"></xsl:template>-->
          </SimpleBaseType>
          <SimpleBaseType>
            <!--TODO: Need <xsl:template match="GenericName" mode="BaseTypes"></xsl:template>-->
          </SimpleBaseType>
        </Implements>
        <Property Name="Tagged">
          <Documentation>
            <summary>
Gets the tagged volume.
</summary>
            <value>The tagged <see cref="ILocalVolume" />.</value>
          </Documentation>
          <Type>
            <Identifier Name="ILocalVolume" />
          </Type>
          <!--TODO: Need <xsl:template match="Modifiers" mode="Root"></xsl:template>-->
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
      </Interface>
    </Namespace>
  </Source>
  <Source Path="Upstream\Model\IFileAction.cs" Id="fb00a5bb-b7c0-45f5-aa61-74160fca2afb">
    <Using Name="FsInfoCat.Model" />
    <Using Name="System" />
    <Using Name="System.ComponentModel.DataAnnotations" />
    <Namespace Name="FsInfoCat.Upstream.Model">
      <Interface Name="IFileAction" Access="public">
        <Documentation>
          <summary>
Describes an action to be taken on a file.
</summary>
          <seealso cref="IUpstreamDbEntity" />
          <seealso cref="IEquatable{IFileAction}" />
        </Documentation>
        <Implements>
          <SimpleBaseType Name="IUpstreamDbEntity" />
          <SimpleBaseType>
            <!--TODO: Need <xsl:template match="GenericName" mode="BaseTypes"></xsl:template>-->
          </SimpleBaseType>
        </Implements>
        <Property Name="Task">
          <Documentation>
            <summary>
Gets the parent mitigation task.
</summary>
            <value>The parent <see cref="IMitigationTask">mitigation task</see>.</value>
          </Documentation>
          <Display Name="DisplayName_FileAction_Task" ShortName="DisplayName_Task" Description="Description_FileAction_Task" />
          <Type>
            <Identifier Name="IMitigationTask" />
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="Source">
          <Documentation>
            <summary>
Gets the source file.
</summary>
            <value>The source file that needs to be deleted, moved or copied.</value>
          </Documentation>
          <Display Name="DisplayName_FileAction_Source" ShortName="DisplayName_Source" Description="Description_FileAction_Source" />
          <Type>
            <Identifier Name="IUpstreamFile" />
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="Destination">
          <Documentation>
            <summary>
Gets the destination subdirectory.
</summary>
            <value>
The destination <see cref="IUpstreamSubdirectory" /> or <see langword="null" /> if the file does not get copied or moved.
</value>
            <remarks>
The <see cref="FileCrawlOptions.FlaggedForDeletion" /><see cref="IFileRow.Options">file options flag</see> and the <see cref="IFileRow.Status">file status</see> combined
with the value of this field
determines whether a file should be deleted, moved or copied, as follows:
<!--TODO: Need <xsl:template match="list" mode="Root"></xsl:template>--></remarks>
          </Documentation>
          <Display Name="DisplayName_FileAction_Destination" ShortName="DisplayName_Destination" Description="Description_FileAction_Destination" />
          <Type>
            <Identifier Name="IUpstreamSubdirectory" />
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
      </Interface>
    </Namespace>
  </Source>
  <Source Path="Upstream\Model\IGroupMemberListItem.cs" Id="5e3404c2-0825-4ca1-8588-a12fa38dd159">
    <Using Name="FsInfoCat.Collections" />
    <Using Name="System" />
    <Namespace Name="FsInfoCat.Upstream.Model">
      <Interface Name="IGroupMemberListItem" Access="public">
        <Documentation>
          <summary>
Generic interface for a list item entity that associated an <see cref="IUserGroup" /> with an <see cref="IUserProfile" /> entity.
</summary>
          <seealso cref="IGroupMembershipRow" />
        </Documentation>
        <Implements>
          <SimpleBaseType Name="IGroupMembershipRow" />
        </Implements>
        <Property Name="UserId">
          <Documentation>
            <summary>
Gets primary key of the associated user profile.
</summary>
            <value>The <see cref="IHasSimpleIdentifier.Id" /> of the associated <see cref="IUserProfile" />.</value>
          </Documentation>
          <Type>
            <Identifier Name="Guid" />
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="GroupId">
          <Documentation>
            <summary>
Gets primary key of the associated user group.
</summary>
            <value>The <see cref="IHasSimpleIdentifier.Id" /> of the associated <see cref="IUserGroup" />.</value>
          </Documentation>
          <Type>
            <Identifier Name="Guid" />
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="DisplayName">
          <Documentation>
            <summary>
Gets the display name of the associated user profile.
</summary>
            <value>The <see cref="IUserProfileRow.DisplayName" /> of the associated <see cref="IUserProfile" />.</value>
          </Documentation>
          <Type>
            <PredefinedType Keyword="string" />
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="FirstName">
          <Documentation>
            <summary>
Gets the first name of the associated user profile.
</summary>
            <value>The <see cref="IUserProfileRow.FirstName" /> of the associated <see cref="IUserProfile" />.</value>
          </Documentation>
          <Type>
            <PredefinedType Keyword="string" />
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="LastName">
          <Documentation>
            <summary>
Gets the last name of the associated user profile.
</summary>
            <value>The <see cref="IUserProfileRow.LastName" /> of the associated <see cref="IUserProfile" />.</value>
          </Documentation>
          <Type>
            <PredefinedType Keyword="string" />
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="DbPrincipalId">
          <Documentation>
            <summary>
Gets the database principal ID of the associated user profile.
</summary>
            <value>The <see cref="IUserProfileRow.DbPrincipalId" /> of the associated <see cref="IUserProfile" />.</value>
          </Documentation>
          <Type>
            <!--TODO: Need <xsl:template match="NullableType" mode="Types"></xsl:template>-->
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="SID">
          <Documentation>
            <summary>
Gets the SID of the associated user profile.
</summary>
            <value>The <see cref="IUserProfileRow.SID" /> of the associated <see cref="IUserProfile" />.</value>
          </Documentation>
          <Type>
            <Identifier Name="ByteValues" />
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
      </Interface>
    </Namespace>
  </Source>
  <Source Path="Upstream\Model\IGroupMemberOfListItem.cs" Id="0de4b5f5-8fb2-4636-b517-ffbfd30fc7c0">
    <Using Name="System" />
    <Namespace Name="FsInfoCat.Upstream.Model">
      <Interface Name="IGroupMemberOfListItem" Access="public">
        <Documentation>
          <summary>
Generic interface for a list item entity that associated an <see cref="IUserProfile" /> with an <see cref="IUserGroup" /> entity.
</summary>
          <seealso cref="IGroupMembershipRow" />
        </Documentation>
        <Implements>
          <SimpleBaseType Name="IGroupMembershipRow" />
        </Implements>
        <Property Name="UserId">
          <Documentation>
            <summary>
Gets primary key of the associated user profile.
</summary>
            <value>The <see cref="IHasSimpleIdentifier.Id" /> of the associated <see cref="IUserProfile" />.</value>
          </Documentation>
          <Type>
            <Identifier Name="Guid" />
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="GroupId">
          <Documentation>
            <summary>
Gets primary key of the associated user group.
</summary>
            <value>The <see cref="IHasSimpleIdentifier.Id" /> of the associated <see cref="IUserGroup" />.</value>
          </Documentation>
          <Type>
            <Identifier Name="Guid" />
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="Name">
          <Documentation>
            <summary>
Gets name of the associated user group.
</summary>
            <value>The <see cref="IUserGroupRow.Name" /> of the associated <see cref="IUserGroup" />.</value>
          </Documentation>
          <Type>
            <PredefinedType Keyword="string" />
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="Roles">
          <Documentation>
            <summary>
Gets roles for the associated user group.
</summary>
            <value>The <see cref="IUserGroupRow.Roles" /> for the associated <see cref="IUserGroup" />.</value>
          </Documentation>
          <Type>
            <Identifier Name="UserRole" />
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="IsInactive">
          <Documentation>
            <summary>
Gets a value indicating whether the associated is user group inactive.
</summary>
            <value>
                      <see langword="true" /> if the associated <see cref="IUserGroup" /> is inactive (archived); otherwise, <see langword="false" /> if it is active.</value>
          </Documentation>
          <Type>
            <PredefinedType Keyword="bool" />
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
      </Interface>
    </Namespace>
  </Source>
  <Source Path="Upstream\Model\IGroupMembership.cs" Id="cdf93426-1e4f-4727-9136-84c1a75f4aee">
    <Using Name="System" />
    <Using Name="System.ComponentModel.DataAnnotations" />
    <Namespace Name="FsInfoCat.Upstream.Model">
      <Interface Name="IGroupMembership" Access="public">
        <Documentation>
          <summary>
Defines a user's membership into a group.
</summary>
          <seealso cref="IGroupMembershipRow" />
          <seealso cref="IEquatable{IGroupMembership}" />
        </Documentation>
        <Implements>
          <SimpleBaseType Name="IGroupMembershipRow" />
          <SimpleBaseType>
            <!--TODO: Need <xsl:template match="GenericName" mode="BaseTypes"></xsl:template>-->
          </SimpleBaseType>
        </Implements>
        <Property Name="Group">
          <Documentation>
            <summary>
Gets the target group.
</summary>
            <value>The target <see cref="IUserGroup" /> that this specifies the member of.</value>
          </Documentation>
          <Display Name="DisplayName_Group" ShortName="DisplayName_Group" Description="Description_GroupMembership_Group" />
          <Type>
            <Identifier Name="IUserGroup" />
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="User">
          <Documentation>
            <summary>
Gets group member.
</summary>
            <value>The <see cref="IUserProfile" /> of the group member.</value>
          </Documentation>
          <Display Name="DisplayName_User" ShortName="DisplayName_User" Description="Description_GroupMembership_User" />
          <Type>
            <Identifier Name="IUserProfile" />
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
      </Interface>
    </Namespace>
  </Source>
  <Source Path="Upstream\Model\IGroupMembershipRow.cs" Id="ddd227ab-0517-42d1-adc3-1365c827bcb9">
    <Using Name="System.ComponentModel.DataAnnotations" />
    <Namespace Name="FsInfoCat.Upstream.Model">
      <Interface Name="IGroupMembershipRow" Access="public">
        <Documentation>
          <summary>
Generic interface for an entity that associated an <see cref="IUserGroup" /> with an <see cref="IUserProfile" /> entity.
</summary>
          <seealso cref="IUpstreamDbEntity" />
        </Documentation>
        <Implements>
          <SimpleBaseType Name="IUpstreamDbEntity" />
        </Implements>
        <Property Name="IsGroupAdmin">
          <Documentation>
            <summary>
Indicates whether the user is a group administrator.
</summary>
            <value>
                      <see langword="true" /> if the <see cref="IUserProfile" /> can edit group membership or <see langword="false" /> if the <see cref="IUserProfile" /> is a regular group
member.</value>
          </Documentation>
          <Display Name="DisplayName_IsGroupAdmin" ShortName="DisplayName_Admin" Description="Description_GroupMembership_IsGroupAdmin" />
          <Type>
            <PredefinedType Keyword="bool" />
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
      </Interface>
    </Namespace>
  </Source>
  <Source Path="Upstream\Model\IHostDevice.cs" Id="5a07442c-24b0-441f-8f0b-9ac9ff70b9d8">
    <Using Name="System" />
    <Using Name="System.Collections.Generic" />
    <Using Name="System.ComponentModel.DataAnnotations" />
    <Namespace Name="FsInfoCat.Upstream.Model">
      <Interface Name="IHostDevice" Access="public">
        <Documentation>
          <summary>
Identifies a device that hosts one or more <see cref="IUpstreamVolume">volumes</see>.
</summary>
          <seealso cref="IHostDeviceRow" />
          <seealso cref="IEquatable{IHostDevice}" />
        </Documentation>
        <Implements>
          <SimpleBaseType Name="IHostDeviceRow" />
          <SimpleBaseType>
            <!--TODO: Need <xsl:template match="GenericName" mode="BaseTypes"></xsl:template>-->
          </SimpleBaseType>
        </Implements>
        <Property Name="Platform">
          <Documentation>
            <summary>
Gets the host platform type.
</summary>
            <value>The <see cref="IHostPlatform" /> that describes the host's platform type.</value>
          </Documentation>
          <Display Name="DisplayName_Platform" ShortName="DisplayName_Platform" Description="Description_HostDevice_Platform" />
          <Type>
            <Identifier Name="IHostPlatform" />
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="Volumes">
          <Documentation>
            <summary>
Gets the volumes for the host.
</summary>
            <value>The <see cref="IUpstreamVolume">volumes</see> that were crawled on the current host platform.</value>
          </Documentation>
          <Display Name="DisplayName_Volumes" ShortName="DisplayName_Volumes" Description="Description_HostDevice_Volumes" />
          <Type>
            <Generic Name="IEnumerable">
              <Identifier Name="IUpstreamVolume" />
            </Generic>
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
      </Interface>
    </Namespace>
  </Source>
  <Source Path="Upstream\Model\IHostDeviceListItem.cs" Id="fd48af29-80f8-466c-b31a-c523df645e08">
    <Namespace Name="FsInfoCat.Upstream.Model">
      <Interface Name="IHostDeviceListItem" Access="public">
        <Documentation>
          <summary>
List item entity for a device that hosts one or more <see cref="IUpstreamVolume">volumes</see>.
</summary>
          <seealso cref="IHostDeviceRow" />
        </Documentation>
        <Implements>
          <SimpleBaseType Name="IHostDeviceRow" />
        </Implements>
        <Property Name="PlatformDisplayName">
          <Documentation>
            <summary>
Gets the display name of the associated platform.
</summary>
            <value>The <see cref="IHostPlatformRow.DisplayName" /> of the associated <see cref="IHostPlatformRow" />.</value>
          </Documentation>
          <Type>
            <PredefinedType Keyword="string" />
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="PlatformType">
          <Documentation>
            <summary>
Gets the type of the associated platform.
</summary>
            <value>The <see cref="IHostPlatformRow.Type" /> of the associated <see cref="IHostPlatformRow" />.</value>
          </Documentation>
          <Type>
            <Identifier Name="PlatformType" />
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="VolumeCount">
          <Documentation>
            <summary>
Gets the volume count.
</summary>
            <value>The number of <see cref="IUpstreamVolume" /> entities associated with the current host.</value>
          </Documentation>
          <Type>
            <PredefinedType Keyword="long" />
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
      </Interface>
    </Namespace>
  </Source>
  <Source Path="Upstream\Model\IHostDeviceRow.cs" Id="77344c26-66e3-4642-a5a4-edbfbdd4eefc">
    <Using Name="System.ComponentModel.DataAnnotations" />
    <Namespace Name="FsInfoCat.Upstream.Model">
      <Interface Name="IHostDeviceRow" Access="public">
        <Implements>
          <SimpleBaseType Name="IUpstreamDbEntity" />
        </Implements>
        <Property Name="DisplayName">
          <Documentation>
            <summary>
Gets the display name of the host device.
</summary>
            <value>The user-friendly display name of the host device.</value>
          </Documentation>
          <Display Name="DisplayName_DisplayName" ShortName="DisplayName_Display" Description="Description_HostDevice_DisplayName" />
          <Type>
            <PredefinedType Keyword="string" />
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="MachineIdentifer">
          <Documentation>
            <summary>
Gets the machine identifier.
</summary>
            <value>The programmatic host machine identifier string.</value>
          </Documentation>
          <Display Name="DisplayName_MachineIdentifer" ShortName="DisplayName_Identifier" Description="Description_HostDevice_MachineIdentifer" />
          <Type>
            <PredefinedType Keyword="string" />
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="MachineName">
          <Documentation>
            <summary>
Gets the machine name.
</summary>
            <value>The machine's host name or IP address.</value>
          </Documentation>
          <Display Name="DisplayName_MachineName" ShortName="DisplayName_Name" Description="Description_HostDevice_MachineName" />
          <Type>
            <PredefinedType Keyword="string" />
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="Notes">
          <Documentation>
            <summary>
Gets the notest for the current host device.
</summary>
            <value>The custom notes to associate with the current host device.</value>
          </Documentation>
          <Display Name="DisplayName_Notes" ShortName="DisplayName_Notes" Description="DisplayName_Notes" />
          <Type>
            <PredefinedType Keyword="string" />
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="IsInactive">
          <Documentation>
            <summary>
Indicates whether the current host device record is inactive.
</summary>
            <value>
                      <see langword="true" /> if the current host device record is inactive (archived); otherwise, <see langword="false" /> if it is active.</value>
          </Documentation>
          <Display Name="DisplayName_IsInactive" ShortName="DisplayName_Inactive" Description="Description_HostDevice_IsInactive" />
          <Type>
            <PredefinedType Keyword="bool" />
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
      </Interface>
    </Namespace>
  </Source>
  <Source Path="Upstream\Model\IHostPlatform.cs" Id="1034bc5b-9442-4263-b338-f83f00aca39d">
    <Using Name="System" />
    <Using Name="System.Collections.Generic" />
    <Using Name="System.ComponentModel.DataAnnotations" />
    <Namespace Name="FsInfoCat.Upstream.Model">
      <Interface Name="IHostPlatform" Access="public">
        <Documentation>
          <summary>
Describes a host platform.
</summary>
          <seealso cref="IHostPlatformRow" />
          <seealso cref="IEquatable{IHostPlatform}" />
        </Documentation>
        <Implements>
          <SimpleBaseType Name="IHostPlatformRow" />
          <SimpleBaseType>
            <!--TODO: Need <xsl:template match="GenericName" mode="BaseTypes"></xsl:template>-->
          </SimpleBaseType>
        </Implements>
        <Property Name="DefaultFsType">
          <Documentation>
            <summary>
Gets teh default file system type.
</summary>
            <value>The default file system type for the current platform or <see langword="null" /> if there is no clear default fie system type.</value>
          </Documentation>
          <Display Name="DisplayName_HostPlatform_DefaultFsType" ShortName="DisplayName_DefaultFsType" Description="Description_HostPlatform_DefaultFsType" />
          <Type>
            <Identifier Name="IUpstreamFileSystem" />
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="HostDevices">
          <Documentation>
            <summary>
Gets the host devices for this platform.
</summary>
            <value>The host devices for this platform.</value>
          </Documentation>
          <Display Name="DisplayName_HostDevices" ShortName="DisplayName_HostDevices" Description="Description_HostPlatform_HostDevices" />
          <Type>
            <Generic Name="IEnumerable">
              <Identifier Name="IHostDevice" />
            </Generic>
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
      </Interface>
    </Namespace>
  </Source>
  <Source Path="Upstream\Model\IHostPlatformListItem.cs" Id="a417162d-5de2-44fc-ba3e-0c0718e12e05">
    <Namespace Name="FsInfoCat.Upstream.Model">
      <Interface Name="IHostPlatformListItem" Access="public">
        <Implements>
          <SimpleBaseType Name="IHostPlatformRow" />
        </Implements>
        <Property Name="FileSystemDisplayName">
          <Type>
            <PredefinedType Keyword="string" />
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="HostDeviceCount">
          <Type>
            <PredefinedType Keyword="long" />
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
      </Interface>
    </Namespace>
  </Source>
  <Source Path="Upstream\Model\IHostPlatformRow.cs" Id="f7c0d734-10c7-4550-b4e6-4042ae88487b">
    <Using Name="System.ComponentModel.DataAnnotations" />
    <Namespace Name="FsInfoCat.Upstream.Model">
      <Interface Name="IHostPlatformRow" Access="public">
        <Implements>
          <SimpleBaseType Name="IUpstreamDbEntity" />
        </Implements>
        <Property Name="DisplayName">
          <Documentation>
            <summary>
Gets the display name of the platform.
</summary>
            <value>The user-friendly display name of the platform.</value>
          </Documentation>
          <Display Name="DisplayName_DisplayName" ShortName="DisplayName_Name" Description="Description_HostPlatform_DisplayName" />
          <Type>
            <PredefinedType Keyword="string" />
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="Type">
          <Documentation>
            <summary>
Gets the generalized host platform type.
</summary>
            <value>The <see cref="PlatformType" /> that indicates the generalized platform type.</value>
          </Documentation>
          <Display Name="DisplayName_PlatformType" ShortName="DisplayName_Type" Description="Description_HostPlatform_PlatformType" />
          <Type>
            <Identifier Name="PlatformType" />
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="Notes">
          <Documentation>
            <summary>
Gets the notes for the platform.
</summary>
            <value>The custom notes to associate with the current platform.</value>
          </Documentation>
          <Display Name="DisplayName_Notes" ShortName="DisplayName_Notes" Description="DisplayName_Notes" />
          <Type>
            <PredefinedType Keyword="string" />
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="IsInactive">
          <Documentation>
            <summary>
Indicates whether the current platform record is inactive.
</summary>
            <value>
                      <see langword="true" /> if the current platform record is inactive (archived); otherwise, <see langword="false" /> if it is active.</value>
          </Documentation>
          <Display Name="DisplayName_IsInactive" ShortName="DisplayName_Inactive" Description="Description_HostPlatform_IsInactive" />
          <Type>
            <PredefinedType Keyword="bool" />
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
      </Interface>
    </Namespace>
  </Source>
  <Source Path="Upstream\Model\IMitigationTask.cs" Id="73381b44-3134-4ef1-9ef7-16cf13fb8750">
    <Using Name="System" />
    <Using Name="System.Collections.Generic" />
    <Using Name="System.ComponentModel.DataAnnotations" />
    <Namespace Name="FsInfoCat.Upstream.Model">
      <Interface Name="IMitigationTask" Access="public">
        <Documentation>
          <summary>
Compliance/Redundancy mitigation task.
</summary>
          <seealso cref="IMitigationTaskRow" />
          <seealso cref="IEquatable{IMitigationTask}" />
        </Documentation>
        <Implements>
          <SimpleBaseType Name="IMitigationTaskRow" />
          <SimpleBaseType>
            <!--TODO: Need <xsl:template match="GenericName" mode="BaseTypes"></xsl:template>-->
          </SimpleBaseType>
        </Implements>
        <Property Name="AssignmentGroup">
          <Documentation>
            <summary>
Gets the task's assignment group.
</summary>
            <value>The <see cref="IUserGroup" /> responsible for task mitigation.</value>
          </Documentation>
          <Display Name="DisplayName_AssignmentGroup" ShortName="DisplayName_AssignmentGroup" Description="DisplayName_AssignmentGroup" />
          <Type>
            <Identifier Name="IUserGroup" />
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="AssignedTo">
          <Documentation>
            <summary>
Gets the user that the task is assigned to.
</summary>
            <value>The <see cref="IUserProfile" /> of the person accountable for task mitigation.</value>
          </Documentation>
          <Display Name="DisplayName_AssignedTo" ShortName="DisplayName_AssignedTo" Description="DisplayName_AssignedTo" />
          <Type>
            <Identifier Name="IUserProfile" />
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="FileActions">
          <Documentation>
            <summary>
Gets the actions to be taken on files.
</summary>
            <value>The list of actions to be carried out on specific files.</value>
          </Documentation>
          <Display Name="DisplayName_FileActions" ShortName="DisplayName_FileActions" Description="DisplayName_FileActions" />
          <Type>
            <Generic Name="IEnumerable">
              <Identifier Name="IFileAction" />
            </Generic>
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="SubdirectoryActions">
          <Documentation>
            <summary>
Gets the actions to be taken on subdirectories.
</summary>
            <value>The list of actions to be carried out on entire subdirectories.</value>
          </Documentation>
          <Display Name="DisplayName_SubdirectoryActions" ShortName="DisplayName_SubdirectoryActions" Description="DisplayName_SubdirectoryActions" />
          <Type>
            <Generic Name="IEnumerable">
              <Identifier Name="ISubdirectoryAction" />
            </Generic>
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
      </Interface>
    </Namespace>
  </Source>
  <Source Path="Upstream\Model\IMitigationTaskListItem.cs" Id="89ad6b15-9230-4c46-b6bb-de9514c0ed75">
    <Using Name="FsInfoCat.Collections" />
    <Using Name="System" />
    <Namespace Name="FsInfoCat.Upstream.Model">
      <Interface Name="IMitigationTaskListItem" Access="public">
        <Implements>
          <SimpleBaseType Name="IMitigationTaskRow" />
        </Implements>
        <Property Name="AssignmentGroupId">
          <Type>
            <!--TODO: Need <xsl:template match="NullableType" mode="Types"></xsl:template>-->
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="AssignmentGroupName">
          <Type>
            <PredefinedType Keyword="string" />
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="AssignedToId">
          <Type>
            <!--TODO: Need <xsl:template match="NullableType" mode="Types"></xsl:template>-->
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="AssignedToDisplayName">
          <Type>
            <PredefinedType Keyword="string" />
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="AssignedToFirstName">
          <Type>
            <PredefinedType Keyword="string" />
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="AssignedToLastName">
          <Type>
            <PredefinedType Keyword="string" />
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="AssignedToDbPrincipalId">
          <Type>
            <!--TODO: Need <xsl:template match="NullableType" mode="Types"></xsl:template>-->
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="AssignedToSID">
          <Type>
            <Identifier Name="ByteValues" />
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="FileActionCount">
          <Type>
            <PredefinedType Keyword="long" />
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="SubdirectoryActionCount">
          <Type>
            <PredefinedType Keyword="long" />
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
      </Interface>
    </Namespace>
  </Source>
  <Source Path="Upstream\Model\IMitigationTaskRow.cs" Id="2b385a4d-ca98-4976-89df-53e638523404">
    <Using Name="System.ComponentModel.DataAnnotations" />
    <Namespace Name="FsInfoCat.Upstream.Model">
      <Interface Name="IMitigationTaskRow" Access="public">
        <Implements>
          <SimpleBaseType Name="IUpstreamDbEntity" />
        </Implements>
        <Property Name="ShortDescription">
          <Documentation>
            <summary>
Gets the task's short description.
</summary>
            <value>The short description of task.</value>
          </Documentation>
          <Display Name="DisplayName_ShortDescription" ShortName="DisplayName_ShortDescription" Description="DisplayName_ShortDescription" />
          <Type>
            <PredefinedType Keyword="string" />
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="Notes">
          <Documentation>
            <summary>
Gets the task notes.
</summary>
            <value>The custom notes for the task.</value>
          </Documentation>
          <Display Name="DisplayName_Notes" ShortName="DisplayName_Notes" Description="DisplayName_Notes" />
          <Type>
            <PredefinedType Keyword="string" />
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="Status">
          <Documentation>
            <summary>
Gets the task status.
</summary>
            <value>The status value for the current task.</value>
          </Documentation>
          <Display Name="DisplayName_Status" ShortName="DisplayName_Status" Description="DisplayName_Status" />
          <Type>
            <Identifier Name="TaskStatus" />
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="Priority">
          <Documentation>
            <summary>
Gets the task priority.
</summary>
            <value>The priority value for the current task.</value>
          </Documentation>
          <Display Name="DisplayName_Priority" ShortName="DisplayName_Priority" Description="DisplayName_Priority" />
          <Type>
            <Identifier Name="PriorityLevel" />
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
      </Interface>
    </Namespace>
  </Source>
  <Source Path="Upstream\Model\ISubdirectoryAction.cs" Id="94460943-7b5b-4bbe-9810-0d49e63d5b35">
    <Using Name="FsInfoCat.Model" />
    <Using Name="System" />
    <Using Name="System.ComponentModel.DataAnnotations" />
    <Namespace Name="FsInfoCat.Upstream.Model">
      <Interface Name="ISubdirectoryAction" Access="public">
        <Documentation>
          <summary>
Describes an action to be taken on a sub-directory.
</summary>
          <seealso cref="ISubdirectoryActionRow" />
          <seealso cref="IEquatable{ISubdirectoryAction}" />
        </Documentation>
        <Implements>
          <SimpleBaseType Name="ISubdirectoryActionRow" />
          <SimpleBaseType>
            <!--TODO: Need <xsl:template match="GenericName" mode="BaseTypes"></xsl:template>-->
          </SimpleBaseType>
        </Implements>
        <Property Name="Task">
          <Documentation>
            <summary>
Gets the parent mitigation task.
</summary>
            <value>The parent <see cref="IMitigationTask">mitigation task</see>.</value>
          </Documentation>
          <Display Name="DisplayName_SubdirectoryAction_Task" ShortName="DisplayName_Task" Description="Description_SubdirectoryAction_Task" />
          <Type>
            <Identifier Name="IMitigationTask" />
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="Source">
          <Documentation>
            <summary>
Gets the source sub-directory.
</summary>
            <value>The source subdirectory to be deleted, moved or copied.</value>
          </Documentation>
          <Display Name="DisplayName_SubdirectoryAction_Source" ShortName="DisplayName_Source" Description="Description_SubdirectoryAction_Source" />
          <Type>
            <Identifier Name="IUpstreamSubdirectory" />
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="Destination">
          <Documentation>
            <summary>
Gets the destination subdirectory.
</summary>
            <value>The destination <see cref="IUpstreamSubdirectory" /> or <see langword="null" /> if the subdirectory does not get copied or moved.</value>
            <remarks>
The <see cref="DirectoryCrawlOptions.FlaggedForDeletion" /><see cref="ISubdirectoryRow.Options">file options flag</see> combined with the value of this field determines
whether a file should be deleted, moved or copied, as follows:
<!--TODO: Need <xsl:template match="list" mode="Root"></xsl:template>--></remarks>
          </Documentation>
          <Display Name="DisplayName_SubdirectoryAction_Destination" ShortName="DisplayName_Destination" Description="Description_SubdirectoryAction_Destination" />
          <Type>
            <Identifier Name="IUpstreamSubdirectory" />
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
      </Interface>
    </Namespace>
  </Source>
  <Source Path="Upstream\Model\ISubdirectoryActionRow.cs" Id="04009c58-891c-458f-aa7e-58e2496d6648">
    <Namespace Name="FsInfoCat.Upstream.Model">
      <Interface Name="ISubdirectoryActionRow" Access="public">
        <Implements>
          <SimpleBaseType Name="IUpstreamDbEntity" />
        </Implements>
      </Interface>
    </Namespace>
  </Source>
  <Source Path="Upstream\Model\IUpstreamAccessError.cs" Id="f53935ac-63e7-4383-883c-4647f2501988">
    <Using Name="FsInfoCat.Model" />
    <Using Name="System.ComponentModel.DataAnnotations" />
    <Namespace Name="FsInfoCat.Upstream.Model">
      <Interface Name="IUpstreamAccessError" Access="public">
        <Documentation>
          <summary>
Generic interface for access error entities that from the remote host system database.
</summary>
          <seealso cref="IUpstreamDbEntity" />
          <seealso cref="IUpstreamFileAccessError" />
          <seealso cref="IUpstreamSubdirectoryAccessError" />
          <seealso cref="IUpstreamVolumeAccessError" />
          <seealso cref="IAccessError" />
          <seealso cref="Local.Model.ILocalAccessError" />
          <seealso cref="IUpstreamDbFsItem.AccessErrors" />
        </Documentation>
        <Implements>
          <SimpleBaseType Name="IAccessError" />
        </Implements>
        <Property Name="Target">
          <Documentation>
            <summary>
Gets the target entity to which the access error applies.
</summary>
            <value>The <see cref="IUpstreamDbEntity" /> object that this error applies to.</value>
          </Documentation>
          <Display Name="DisplayName_Target" ShortName="DisplayName_Target" Description="DisplayName_Target" />
          <Type>
            <Identifier Name="IUpstreamDbEntity" />
          </Type>
          <!--TODO: Need <xsl:template match="Modifiers" mode="Root"></xsl:template>-->
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
      </Interface>
    </Namespace>
  </Source>
  <Source Path="Upstream\Model\IUpstreamAudioPropertiesListItem.cs" Id="c18623d4-6e51-4026-86f4-4281ca14d2f9">
    <Using Name="FsInfoCat.Model" />
    <Namespace Name="FsInfoCat.Upstream.Model">
      <Interface Name="IUpstreamAudioPropertiesListItem" Access="public">
        <Documentation>
          <summary>
Generic interface for list item entities containing extended file properties for audio files.
</summary>
          <seealso cref="IUpstreamAudioPropertiesRow" />
          <seealso cref="IUpstreamPropertiesListItem" />
          <seealso cref="IAudioPropertiesListItem" />
          <seealso cref="Local.Model.ILocalAudioPropertiesListItem" />
        </Documentation>
        <Implements>
          <SimpleBaseType Name="IUpstreamAudioPropertiesRow" />
          <SimpleBaseType Name="IUpstreamPropertiesListItem" />
          <SimpleBaseType Name="IAudioPropertiesListItem" />
        </Implements>
      </Interface>
    </Namespace>
  </Source>
  <Source Path="Upstream\Model\IUpstreamAudioPropertiesRow.cs" Id="ace02580-0f83-4cf9-96d0-4dd17c07610c">
    <Using Name="FsInfoCat.Model" />
    <Namespace Name="FsInfoCat.Upstream.Model">
      <Interface Name="IUpstreamAudioPropertiesRow" Access="public">
        <Documentation>
          <summary>
Generic interface for entities containing extended file properties for audio files.
</summary>
          <seealso cref="IUpstreamPropertiesRow" />
          <seealso cref="IAudioPropertiesRow" />
          <seealso cref="Local.Model.ILocalAudioPropertiesRow" />
        </Documentation>
        <Implements>
          <SimpleBaseType Name="IUpstreamPropertiesRow" />
          <SimpleBaseType Name="IAudioPropertiesRow" />
        </Implements>
      </Interface>
    </Namespace>
  </Source>
  <Source Path="Upstream\Model\IUpstreamAudioPropertySet.cs" Id="99232ce0-9916-43f8-957e-6541cb333dc0">
    <Using Name="FsInfoCat.Model" />
    <Using Name="System" />
    <Namespace Name="FsInfoCat.Upstream.Model">
      <Interface Name="IUpstreamAudioPropertySet" Access="public">
        <Documentation>
          <summary>
Contains extended audio file property values.
</summary>
          <seealso cref="IUpstreamAudioPropertiesRow" />
          <seealso cref="IUpstreamPropertySet" />
          <seealso cref="IAudioPropertySet" />
          <seealso cref="IEquatable{IUpstreamAudioPropertySet}" />
          <seealso cref="Local.Model.ILocalAudioPropertySet" />
        </Documentation>
        <Implements>
          <SimpleBaseType Name="IUpstreamAudioPropertiesRow" />
          <SimpleBaseType Name="IUpstreamPropertySet" />
          <SimpleBaseType Name="IAudioPropertySet" />
          <SimpleBaseType>
            <!--TODO: Need <xsl:template match="GenericName" mode="BaseTypes"></xsl:template>-->
          </SimpleBaseType>
        </Implements>
      </Interface>
    </Namespace>
  </Source>
  <Source Path="Upstream\Model\IUpstreamBinaryPropertySet.cs" Id="89de7e1b-0eea-4eb0-a4fd-4baf2930cc9b">
    <Using Name="FsInfoCat.Model" />
    <Using Name="System" />
    <Using Name="System.Collections.Generic" />
    <Using Name="System.ComponentModel.DataAnnotations" />
    <Namespace Name="FsInfoCat.Upstream.Model">
      <Interface Name="IUpstreamBinaryPropertySet" Access="public">
        <Documentation>
          <summary>
Represents a set of files that have the same file size and cryptographic hash.
</summary>
          <seealso cref="IUpstreamDbEntity" />
          <seealso cref="IBinaryPropertySet" />
          <seealso cref="IEquatable{IUpstreamBinaryPropertySet}" />
          <seealso cref="Local.Model.ILocalBinaryPropertySet" />
        </Documentation>
        <Implements>
          <SimpleBaseType Name="IUpstreamDbEntity" />
          <SimpleBaseType Name="IBinaryPropertySet" />
          <SimpleBaseType>
            <!--TODO: Need <xsl:template match="GenericName" mode="BaseTypes"></xsl:template>-->
          </SimpleBaseType>
        </Implements>
        <Property Name="Files">
          <Documentation>
            <summary>
Gets the files which have the same length and cryptographic hash.
</summary>
            <value>The files which have the same length and cryptographic hash..</value>
          </Documentation>
          <Display Name="DisplayName_Files" ShortName="DisplayName_Files" Description="DisplayName_Files" />
          <Type>
            <Generic Name="IEnumerable">
              <Identifier Name="IUpstreamFile" />
            </Generic>
          </Type>
          <!--TODO: Need <xsl:template match="Modifiers" mode="Root"></xsl:template>-->
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="RedundantSets">
          <Documentation>
            <summary>
Gets the sets of files which were determined to be duplicates.
</summary>
            <value>The sets of files which were determined to be duplicates.</value>
          </Documentation>
          <Display Name="DisplayName_RedundantSets" ShortName="ShortName_RedundantSets" Description="DisplayName_RedundantSets" />
          <Type>
            <Generic Name="IEnumerable">
              <Identifier Name="IUpstreamRedundantSet" />
            </Generic>
          </Type>
          <!--TODO: Need <xsl:template match="Modifiers" mode="Root"></xsl:template>-->
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
      </Interface>
    </Namespace>
  </Source>
  <Source Path="Upstream\Model\IUpstreamComparison.cs" Id="6f9d437a-df21-41d1-9eb4-02539118b857">
    <Using Name="FsInfoCat.Model" />
    <Using Name="System" />
    <Using Name="System.ComponentModel.DataAnnotations" />
    <Namespace Name="FsInfoCat.Upstream.Model">
      <Interface Name="IUpstreamComparison" Access="public">
        <Documentation>
          <summary>
The results of a byte-for-byte comparison of 2 files.
</summary>
          <seealso cref="IUpstreamDbEntity" />
          <seealso cref="IComparison" />
          <seealso cref="IEquatable{IUpstreamComparison}" />
          <seealso cref="Local.Model.ILocalComparison" />
        </Documentation>
        <Implements>
          <SimpleBaseType Name="IUpstreamDbEntity" />
          <SimpleBaseType Name="IComparison" />
          <SimpleBaseType>
            <!--TODO: Need <xsl:template match="GenericName" mode="BaseTypes"></xsl:template>-->
          </SimpleBaseType>
          <SimpleBaseType>
            <!--TODO: Need <xsl:template match="GenericName" mode="BaseTypes"></xsl:template>-->
          </SimpleBaseType>
        </Implements>
        <Property Name="Baseline">
          <Documentation>
            <summary>
Gets the baseline file in the comparison.
</summary>
            <value>The generic <see cref="IUpstreamFile" /> that represents the baseline file in the comparison.</value>
          </Documentation>
          <Display Name="DisplayName_Baseline" ShortName="DisplayName_Baseline" Description="DisplayName_Baseline" />
          <Type>
            <Identifier Name="IUpstreamFile" />
          </Type>
          <!--TODO: Need <xsl:template match="Modifiers" mode="Root"></xsl:template>-->
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="Correlative">
          <Documentation>
            <summary>
Gets the correlative file in the comparison.
</summary>
            <value>The generic <see cref="IUpstreamFile" /> that represents the correlative file, which is the new or changed file in the comparison.</value>
          </Documentation>
          <Display Name="DisplayName_Correlative" ShortName="DisplayName_Correlative" Description="DisplayName_Correlative" />
          <Type>
            <Identifier Name="IUpstreamFile" />
          </Type>
          <!--TODO: Need <xsl:template match="Modifiers" mode="Root"></xsl:template>-->
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
      </Interface>
    </Namespace>
  </Source>
  <Source Path="Upstream\Model\IUpstreamCrawlConfigReportItem.cs" Id="7d1b7956-42c5-4377-be63-cba4c65048ac">
    <Using Name="FsInfoCat.Model" />
    <Namespace Name="FsInfoCat.Upstream.Model">
      <Interface Name="IUpstreamCrawlConfigReportItem" Access="public">
        <Documentation>
          <summary>
Represents a crawl configuration report entity associated with the <see cref="IUpstreamDbContext" />.
</summary>
          <seealso cref="IUpstreamCrawlConfigurationListItem" />
          <seealso cref="ICrawlConfigReportItem" />
          <seealso cref="Local.Model.ILocalCrawlConfigReportItem" />
        </Documentation>
        <Implements>
          <SimpleBaseType Name="IUpstreamCrawlConfigurationListItem" />
          <SimpleBaseType Name="ICrawlConfigReportItem" />
        </Implements>
      </Interface>
    </Namespace>
  </Source>
  <Source Path="Upstream\Model\IUpstreamCrawlConfiguration.cs" Id="68512d87-bd98-4588-8bc4-6c20bdd44655">
    <Using Name="FsInfoCat.Model" />
    <Using Name="System" />
    <Using Name="System.Collections.Generic" />
    <Using Name="System.ComponentModel.DataAnnotations" />
    <Namespace Name="FsInfoCat.Upstream.Model">
      <Interface Name="IUpstreamCrawlConfiguration" Access="public">
        <Documentation>
          <summary>
Specifies the configuration of a file system crawl.
</summary>
          <seealso cref="IUpstreamDbEntity" />
          <seealso cref="ICrawlConfiguration" />
          <seealso cref="IEquatable{IUpstreamCrawlConfiguration}" />
          <seealso cref="Local.Model.ILocalCrawlConfiguration" />
        </Documentation>
        <Implements>
          <SimpleBaseType Name="IUpstreamDbEntity" />
          <SimpleBaseType Name="ICrawlConfiguration" />
          <SimpleBaseType>
            <!--TODO: Need <xsl:template match="GenericName" mode="BaseTypes"></xsl:template>-->
          </SimpleBaseType>
        </Implements>
        <Property Name="Root">
          <Documentation>
            <summary>
Gets the starting subdirectory for the configured subdirectory crawl.
</summary>
            <value>The root subdirectory of the configured subdirectory crawl.</value>
          </Documentation>
          <Display Name="DisplayName_Root" ShortName="DisplayName_Root" Description="DisplayName_Root" />
          <Type>
            <Identifier Name="IUpstreamSubdirectory" />
          </Type>
          <!--TODO: Need <xsl:template match="Modifiers" mode="Root"></xsl:template>-->
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="Logs">
          <Documentation>
            <summary>
Gets the crawl log entries.
</summary>
            <value>The crawl log entries.</value>
          </Documentation>
          <Display Name="DisplayName_Logs" ShortName="DisplayName_Logs" Description="DisplayName_Logs" />
          <Type>
            <Generic Name="IEnumerable">
              <Identifier Name="IUpstreamCrawlJobLog" />
            </Generic>
          </Type>
          <!--TODO: Need <xsl:template match="Modifiers" mode="Root"></xsl:template>-->
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
      </Interface>
    </Namespace>
  </Source>
  <Source Path="Upstream\Model\IUpstreamCrawlConfigurationListItem.cs" Id="938a2c03-6540-4ad3-868a-1bd069006cd9">
    <Using Name="FsInfoCat.Model" />
    <Namespace Name="FsInfoCat.Upstream.Model">
      <Interface Name="IUpstreamCrawlConfigurationListItem" Access="public">
        <Documentation>
          <summary>
Represents a crawl configuration list item entity.
</summary>
          <seealso cref="IUpstreamDbEntity" />
          <seealso cref="ICrawlConfigurationListItem" />
          <seealso cref="Local.Model.ILocalCrawlConfigurationListItem" />
        </Documentation>
        <Implements>
          <SimpleBaseType Name="IUpstreamDbEntity" />
          <SimpleBaseType Name="ICrawlConfigurationListItem" />
        </Implements>
      </Interface>
    </Namespace>
  </Source>
  <Source Path="Upstream\Model\IUpstreamCrawlConfigurationRow.cs" Id="b966d43d-d979-4621-8aeb-aeb3895c7f4b">
    <Using Name="FsInfoCat.Model" />
    <Namespace Name="FsInfoCat.Upstream.Model">
      <Interface Name="IUpstreamCrawlConfigurationRow" Access="public">
        <Documentation>
          <summary>
Represents a crawl configuration entity.
</summary>
          <seealso cref="IUpstreamDbEntity" />
          <seealso cref="ICrawlConfigurationRow" />
          <seealso cref="Local.Model.ILocalCrawlConfigurationRow" />
        </Documentation>
        <Implements>
          <SimpleBaseType Name="IUpstreamDbEntity" />
          <SimpleBaseType Name="ICrawlConfigurationRow" />
        </Implements>
      </Interface>
    </Namespace>
  </Source>
  <Source Path="Upstream\Model\IUpstreamCrawlJobListItem.cs" Id="bc5cccd9-d960-4e62-bdc3-e29bb605e258">
    <Using Name="FsInfoCat.Model" />
    <Namespace Name="FsInfoCat.Upstream.Model">
      <Interface Name="IUpstreamCrawlJobListItem" Access="public">
        <Documentation>
          <summary>
Represents a file system crawl job log list item entity.
</summary>
          <seealso cref="IUpstreamCrawlJobLogRow" />
          <seealso cref="ICrawlJobListItem" />
          <seealso cref="Local.Model.ILocalCrawlJobListItem" />
        </Documentation>
        <Implements>
          <SimpleBaseType Name="IUpstreamCrawlJobLogRow" />
          <SimpleBaseType Name="ICrawlJobListItem" />
        </Implements>
      </Interface>
    </Namespace>
  </Source>
  <Source Path="Upstream\Model\IUpstreamCrawlJobLog.cs" Id="4ba0bebf-0a08-4921-a45c-250d3b5c1666">
    <Using Name="FsInfoCat.Model" />
    <Using Name="System" />
    <Using Name="System.ComponentModel.DataAnnotations" />
    <Namespace Name="FsInfoCat.Upstream.Model">
      <Interface Name="IUpstreamCrawlJobLog" Access="public">
        <Documentation>
          <summary>
Log of crawl job results.
</summary>
          <seealso cref="IUpstreamDbEntity" />
          <seealso cref="IUpstreamCrawlJobLog" />
          <seealso cref="IEquatable{IUpstreamCrawlJobLog}" />
          <seealso cref="Local.Model.ILocalCrawlJobLog" />
        </Documentation>
        <Implements>
          <SimpleBaseType Name="IUpstreamDbEntity" />
          <SimpleBaseType Name="ICrawlJobLog" />
          <SimpleBaseType>
            <!--TODO: Need <xsl:template match="GenericName" mode="BaseTypes"></xsl:template>-->
          </SimpleBaseType>
        </Implements>
        <Property Name="Configuration">
          <Documentation>
            <summary>
Gets the configuration source for the file system crawl.
</summary>
            <value>The configuration for the file system crawl.</value>
          </Documentation>
          <Display Name="DisplayName_Configuration" ShortName="DisplayName_Configuration" Description="DisplayName_Configuration" />
          <Type>
            <Identifier Name="IUpstreamCrawlConfiguration" />
          </Type>
          <!--TODO: Need <xsl:template match="Modifiers" mode="Root"></xsl:template>-->
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
      </Interface>
    </Namespace>
  </Source>
  <Source Path="Upstream\Model\IUpstreamCrawlJobLogRow.cs" Id="bbe2c728-d3f2-4da4-8e6e-cfac12aa0d7d">
    <Using Name="FsInfoCat.Model" />
    <Namespace Name="FsInfoCat.Upstream.Model">
      <Interface Name="IUpstreamCrawlJobLogRow" Access="public">
        <Documentation>
          <summary>
Represents a file system crawl job log entity.
</summary>
          <seealso cref="ICrawlJobLogRow" />
          <seealso cref="IUpstreamDbEntity" />
          <seealso cref="Local.Model.ILocalCrawlJobLogRow" />
        </Documentation>
        <Implements>
          <SimpleBaseType Name="ICrawlJobLogRow" />
          <SimpleBaseType Name="IUpstreamDbEntity" />
        </Implements>
      </Interface>
    </Namespace>
  </Source>
  <Source Path="Upstream\Model\IUpstreamDbContext.cs" Id="11e18c21-50d3-4d3e-b79f-fd44cdd38550">
    <Using Name="FsInfoCat.Model" />
    <Using Name="System.Collections.Generic" />
    <Using Name="System.Threading" />
    <Using Name="System.Threading.Tasks" />
    <Namespace Name="FsInfoCat.Upstream.Model">
      <Interface Name="IUpstreamDbContext" Access="public">
        <Documentation>
          <summary>
Generic interface for the upstream (remote) FS InfoCat database context.
Extends the <see cref="IDbContext" /> interface to represent the upstream (remote) database.
</summary>
          <seealso cref="IDbContext" />
          <seealso cref="Local.Model.ILocalDbContext" />
          <seealso cref="IFileAction" />
          <seealso cref="IGroupMemberListItem" />
          <seealso cref="IGroupMemberOfListItem" />
          <seealso cref="IGroupMembership" />
          <seealso cref="IHostDevice" />
          <seealso cref="IHostDeviceListItem" />
          <seealso cref="IHostPlatform" />
          <seealso cref="IHostPlatformListItem" />
          <seealso cref="IMitigationTask" />
          <seealso cref="IMitigationTaskListItem" />
          <seealso cref="ISubdirectoryAction" />
          <seealso cref="ISubdirectoryAncestorName" />
          <seealso cref="IUpstreamAudioPropertiesListItem" />
          <seealso cref="IUpstreamAudioPropertySet" />
          <seealso cref="IUpstreamBinaryPropertySet" />
          <seealso cref="IUpstreamComparison" />
          <seealso cref="IUpstreamCrawlConfigReportItem" />
          <seealso cref="IUpstreamCrawlConfiguration" />
          <seealso cref="IUpstreamCrawlConfigurationListItem" />
          <seealso cref="IUpstreamCrawlJobListItem" />
          <seealso cref="IUpstreamCrawlJobLog" />
          <seealso cref="IUpstreamDocumentPropertiesListItem" />
          <seealso cref="IUpstreamDocumentPropertySet" />
          <seealso cref="IUpstreamDRMPropertiesListItem" />
          <seealso cref="IUpstreamDRMPropertySet" />
          <seealso cref="IUpstreamFile" />
          <seealso cref="IUpstreamFileAccessError" />
          <seealso cref="IUpstreamFileListItemWithAncestorNames" />
          <seealso cref="IUpstreamFileListItemWithBinaryProperties" />
          <seealso cref="IUpstreamFileListItemWithBinaryPropertiesAndAncestorNames" />
          <seealso cref="IUpstreamFileSystem" />
          <seealso cref="IUpstreamFileSystemListItem" />
          <seealso cref="IUpstreamGPSPropertiesListItem" />
          <seealso cref="IUpstreamGPSPropertySet" />
          <seealso cref="IUpstreamImagePropertiesListItem" />
          <seealso cref="IUpstreamImagePropertySet" />
          <seealso cref="IUpstreamMediaPropertiesListItem" />
          <seealso cref="IUpstreamMediaPropertySet" />
          <seealso cref="IUpstreamMusicPropertiesListItem" />
          <seealso cref="IUpstreamMusicPropertySet" />
          <seealso cref="IUpstreamPersonalFileTag" />
          <seealso cref="IUpstreamPersonalSubdirectoryTag" />
          <seealso cref="IUpstreamPersonalTagDefinition" />
          <seealso cref="IUpstreamPersonalVolumeTag" />
          <seealso cref="IUpstreamPhotoPropertiesListItem" />
          <seealso cref="IUpstreamPhotoPropertySet" />
          <seealso cref="IUpstreamRecordedTVPropertiesListItem" />
          <seealso cref="IUpstreamRecordedTVPropertySet" />
          <seealso cref="IUpstreamRedundancy" />
          <seealso cref="IUpstreamRedundantSet" />
          <seealso cref="IUpstreamRedundantSetListItem" />
          <seealso cref="IUpstreamSharedFileTag" />
          <seealso cref="IUpstreamSharedSubdirectoryTag" />
          <seealso cref="IUpstreamSharedTagDefinition" />
          <seealso cref="IUpstreamSharedVolumeTag" />
          <seealso cref="IUpstreamSubdirectory" />
          <seealso cref="IUpstreamSubdirectoryAccessError" />
          <seealso cref="IUpstreamSubdirectoryListItem" />
          <seealso cref="IUpstreamSubdirectoryListItemWithAncestorNames" />
          <seealso cref="IUpstreamSummaryPropertiesListItem" />
          <seealso cref="IUpstreamSummaryPropertySet" />
          <seealso cref="IUpstreamSymbolicName" />
          <seealso cref="IUpstreamSymbolicNameListItem" />
          <seealso cref="IUpstreamVideoPropertiesListItem" />
          <seealso cref="IUpstreamVideoPropertySet" />
          <seealso cref="IUpstreamVolume" />
          <seealso cref="IUpstreamVolumeAccessError" />
          <seealso cref="IUpstreamVolumeListItem" />
          <seealso cref="IUpstreamVolumeListItemWithFileSystem" />
          <seealso cref="IUserGroup" />
          <seealso cref="IUserGroupListItem" />
          <seealso cref="IUserProfile" />
          <seealso cref="IUserProfileListItem" />
        </Documentation>
        <Implements>
          <SimpleBaseType Name="IDbContext" />
        </Implements>
        <Property Name="Comparisons">
          <Documentation>
            <summary>
Enumerates generic file comparison entities from the upstream (remote) database.
</summary>
            <value>A <see cref="IEnumerable{T}" /> that enumerates <see cref="IUpstreamComparison" /> entities.</value>
          </Documentation>
          <Type>
            <Generic Name="IEnumerable">
              <Identifier Name="IUpstreamComparison" />
            </Generic>
          </Type>
          <!--TODO: Need <xsl:template match="Modifiers" mode="Root"></xsl:template>-->
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="BinaryPropertySets">
          <Documentation>
            <summary>
Enumerates generic binary property set entities from the upstream (remote) database.
</summary>
            <value>A <see cref="IEnumerable{T}" /> that enumerates <see cref="IUpstreamBinaryPropertySet" /> entities.</value>
          </Documentation>
          <Type>
            <Generic Name="IEnumerable">
              <Identifier Name="IUpstreamBinaryPropertySet" />
            </Generic>
          </Type>
          <!--TODO: Need <xsl:template match="Modifiers" mode="Root"></xsl:template>-->
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="SummaryPropertySets">
          <Documentation>
            <summary>
Enumerates generic summary property set entities from the upstream (remote) database.
</summary>
            <value>A <see cref="IEnumerable{T}" /> that enumerates <see cref="IUpstreamSummaryPropertySet" /> entities.</value>
          </Documentation>
          <Type>
            <Generic Name="IEnumerable">
              <Identifier Name="IUpstreamSummaryPropertySet" />
            </Generic>
          </Type>
          <!--TODO: Need <xsl:template match="Modifiers" mode="Root"></xsl:template>-->
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="DocumentPropertySets">
          <Documentation>
            <summary>
Enumerates generic document property set entities from the upstream (remote) database.
</summary>
            <value>A <see cref="IEnumerable{T}" /> that enumerates <see cref="IUpstreamDocumentPropertySet" /> entities.</value>
          </Documentation>
          <Type>
            <Generic Name="IEnumerable">
              <Identifier Name="IUpstreamDocumentPropertySet" />
            </Generic>
          </Type>
          <!--TODO: Need <xsl:template match="Modifiers" mode="Root"></xsl:template>-->
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="AudioPropertySets">
          <Documentation>
            <summary>
Enumerates generic audio property set entities from the upstream (remote) database.
</summary>
            <value>A <see cref="IEnumerable{T}" /> that enumerates <see cref="IUpstreamAudioPropertySet" /> entities.</value>
          </Documentation>
          <Type>
            <Generic Name="IEnumerable">
              <Identifier Name="IUpstreamAudioPropertySet" />
            </Generic>
          </Type>
          <!--TODO: Need <xsl:template match="Modifiers" mode="Root"></xsl:template>-->
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="DRMPropertySets">
          <Documentation>
            <summary>
Enumerates generic DRM property set entities from the upstream (remote) database.
</summary>
            <value>A <see cref="IEnumerable{T}" /> that enumerates <see cref="IUpstreamDRMPropertySet" /> entities.</value>
          </Documentation>
          <Type>
            <Generic Name="IEnumerable">
              <Identifier Name="IUpstreamDRMPropertySet" />
            </Generic>
          </Type>
          <!--TODO: Need <xsl:template match="Modifiers" mode="Root"></xsl:template>-->
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="GPSPropertySets">
          <Documentation>
            <summary>
Enumerates generic GPS property set entities from the upstream (remote) database.
</summary>
            <value>A <see cref="IEnumerable{T}" /> that enumerates <see cref="IUpstreamGPSPropertySet" /> entities.</value>
          </Documentation>
          <Type>
            <Generic Name="IEnumerable">
              <Identifier Name="IUpstreamGPSPropertySet" />
            </Generic>
          </Type>
          <!--TODO: Need <xsl:template match="Modifiers" mode="Root"></xsl:template>-->
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="ImagePropertySets">
          <Documentation>
            <summary>
Enumerates generic image property set entities from the upstream (remote) database.
</summary>
            <value>A <see cref="IEnumerable{T}" /> that enumerates <see cref="IUpstreamImagePropertySet" /> entities.</value>
          </Documentation>
          <Type>
            <Generic Name="IEnumerable">
              <Identifier Name="IUpstreamImagePropertySet" />
            </Generic>
          </Type>
          <!--TODO: Need <xsl:template match="Modifiers" mode="Root"></xsl:template>-->
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="MediaPropertySets">
          <Documentation>
            <summary>
Enumerates generic media property set entities from the upstream (remote) database.
</summary>
            <value>A <see cref="IEnumerable{T}" /> that enumerates <see cref="IUpstreamMediaPropertySet" /> entities.</value>
          </Documentation>
          <Type>
            <Generic Name="IEnumerable">
              <Identifier Name="IUpstreamMediaPropertySet" />
            </Generic>
          </Type>
          <!--TODO: Need <xsl:template match="Modifiers" mode="Root"></xsl:template>-->
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="MusicPropertySets">
          <Documentation>
            <summary>
Enumerates generic music property set entities from the upstream (remote) database.
</summary>
            <value>A <see cref="IEnumerable{T}" /> that enumerates <see cref="IUpstreamMusicPropertySet" /> entities.</value>
          </Documentation>
          <Type>
            <Generic Name="IEnumerable">
              <Identifier Name="IUpstreamMusicPropertySet" />
            </Generic>
          </Type>
          <!--TODO: Need <xsl:template match="Modifiers" mode="Root"></xsl:template>-->
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="PhotoPropertySets">
          <Documentation>
            <summary>
Enumerates generic photo property set entities from the upstream (remote) database.
</summary>
            <value>A <see cref="IEnumerable{T}" /> that enumerates <see cref="IUpstreamPhotoPropertySet" /> entities.</value>
          </Documentation>
          <Type>
            <Generic Name="IEnumerable">
              <Identifier Name="IUpstreamPhotoPropertySet" />
            </Generic>
          </Type>
          <!--TODO: Need <xsl:template match="Modifiers" mode="Root"></xsl:template>-->
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="RecordedTVPropertySets">
          <Documentation>
            <summary>
Enumerates generic recorded TV property set entities from the upstream (remote) database.
</summary>
            <value>A <see cref="IEnumerable{T}" /> that enumerates <see cref="IUpstreamRecordedTVPropertySet" /> entities.</value>
          </Documentation>
          <Type>
            <Generic Name="IEnumerable">
              <Identifier Name="IUpstreamRecordedTVPropertySet" />
            </Generic>
          </Type>
          <!--TODO: Need <xsl:template match="Modifiers" mode="Root"></xsl:template>-->
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="VideoPropertySets">
          <Documentation>
            <summary>
Enumerates generic video property set entities from the upstream (remote) database.
</summary>
            <value>A <see cref="IEnumerable{T}" /> that enumerates <see cref="IUpstreamVideoPropertySet" /> entities.</value>
          </Documentation>
          <Type>
            <Generic Name="IEnumerable">
              <Identifier Name="IUpstreamVideoPropertySet" />
            </Generic>
          </Type>
          <!--TODO: Need <xsl:template match="Modifiers" mode="Root"></xsl:template>-->
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="FileAccessErrors">
          <Documentation>
            <summary>
Enumerates generic file access error entities from the upstream (remote) database.
</summary>
            <value>A <see cref="IEnumerable{T}" /> that enumerates <see cref="IUpstreamFileAccessError" /> entities.</value>
          </Documentation>
          <Type>
            <Generic Name="IEnumerable">
              <Identifier Name="IUpstreamFileAccessError" />
            </Generic>
          </Type>
          <!--TODO: Need <xsl:template match="Modifiers" mode="Root"></xsl:template>-->
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="Files">
          <Documentation>
            <summary>
Enumerates generic file entities from the upstream (remote) database.
</summary>
            <value>A <see cref="IEnumerable{T}" /> that enumerates <see cref="IUpstreamFile" /> entities.</value>
          </Documentation>
          <Type>
            <Generic Name="IEnumerable">
              <Identifier Name="IUpstreamFile" />
            </Generic>
          </Type>
          <!--TODO: Need <xsl:template match="Modifiers" mode="Root"></xsl:template>-->
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="FileSystems">
          <Documentation>
            <summary>
Enumerates generic file system entities from the upstream (remote) database.
</summary>
            <value>A <see cref="IEnumerable{T}" /> that enumerates <see cref="IUpstreamFileSystem" /> entities.</value>
          </Documentation>
          <Type>
            <Generic Name="IEnumerable">
              <Identifier Name="IUpstreamFileSystem" />
            </Generic>
          </Type>
          <!--TODO: Need <xsl:template match="Modifiers" mode="Root"></xsl:template>-->
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="Redundancies">
          <Documentation>
            <summary>
Enumerates generic redundancy entities from the upstream (remote) database.
</summary>
            <value>A <see cref="IEnumerable{T}" /> that enumerates <see cref="IUpstreamRedundancy" /> entities.</value>
          </Documentation>
          <Type>
            <Generic Name="IEnumerable">
              <Identifier Name="IUpstreamRedundancy" />
            </Generic>
          </Type>
          <!--TODO: Need <xsl:template match="Modifiers" mode="Root"></xsl:template>-->
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="RedundantSets">
          <Documentation>
            <summary>
Enumerates generic redundant set entities from the upstream (remote) database.
</summary>
            <value>A <see cref="IEnumerable{T}" /> that enumerates <see cref="IUpstreamRedundantSet" /> entities.</value>
          </Documentation>
          <Type>
            <Generic Name="IEnumerable">
              <Identifier Name="IUpstreamRedundantSet" />
            </Generic>
          </Type>
          <!--TODO: Need <xsl:template match="Modifiers" mode="Root"></xsl:template>-->
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="Subdirectories">
          <Documentation>
            <summary>
Enumerates generic sub-directory entities from the upstream (remote) database.
</summary>
            <value>A <see cref="IEnumerable{T}" /> that enumerates <see cref="IUpstreamSubdirectory" /> entities.</value>
          </Documentation>
          <Type>
            <Generic Name="IEnumerable">
              <Identifier Name="IUpstreamSubdirectory" />
            </Generic>
          </Type>
          <!--TODO: Need <xsl:template match="Modifiers" mode="Root"></xsl:template>-->
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="SubdirectoryAccessErrors">
          <Documentation>
            <summary>
Enumerates generic sub-directory access error entities from the upstream (remote) database.
</summary>
            <value>A <see cref="IEnumerable{T}" /> that enumerates <see cref="IUpstreamSubdirectoryAccessError" /> entities.</value>
          </Documentation>
          <Type>
            <Generic Name="IEnumerable">
              <Identifier Name="IUpstreamSubdirectoryAccessError" />
            </Generic>
          </Type>
          <!--TODO: Need <xsl:template match="Modifiers" mode="Root"></xsl:template>-->
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="SymbolicNames">
          <Documentation>
            <summary>
Enumerates generic symbolic name entities from the upstream (remote) database.
</summary>
            <value>A <see cref="IEnumerable{T}" /> that enumerates <see cref="IUpstreamSymbolicName" /> entities.</value>
          </Documentation>
          <Type>
            <Generic Name="IEnumerable">
              <Identifier Name="IUpstreamSymbolicName" />
            </Generic>
          </Type>
          <!--TODO: Need <xsl:template match="Modifiers" mode="Root"></xsl:template>-->
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="VolumeAccessErrors">
          <Documentation>
            <summary>
Enumerates generic volume access error entities from the upstream (remote) database.
</summary>
            <value>A <see cref="IEnumerable{T}" /> that enumerates <see cref="IUpstreamVolumeAccessError" /> entities.</value>
          </Documentation>
          <Type>
            <Generic Name="IEnumerable">
              <Identifier Name="IUpstreamVolumeAccessError" />
            </Generic>
          </Type>
          <!--TODO: Need <xsl:template match="Modifiers" mode="Root"></xsl:template>-->
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="Volumes">
          <Documentation>
            <summary>
Enumerates generic volume entities from the upstream (remote) database.
</summary>
            <value>A <see cref="IEnumerable{T}" /> that enumerates <see cref="IUpstreamVolume" /> entities.</value>
          </Documentation>
          <Type>
            <Generic Name="IEnumerable">
              <Identifier Name="IUpstreamVolume" />
            </Generic>
          </Type>
          <!--TODO: Need <xsl:template match="Modifiers" mode="Root"></xsl:template>-->
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="PersonalTagDefinitions">
          <Documentation>
            <summary>
Enumerates generic personal tag definition entities.
</summary>
            <value>A <see cref="IEnumerable{T}" /> that enumerates <see cref="IUpstreamPersonalTagDefinition" /> entities.</value>
          </Documentation>
          <Type>
            <Generic Name="IEnumerable">
              <Identifier Name="IUpstreamPersonalTagDefinition" />
            </Generic>
          </Type>
          <!--TODO: Need <xsl:template match="Modifiers" mode="Root"></xsl:template>-->
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="PersonalFileTags">
          <Documentation>
            <summary>
Enumerates generic personal file tag entities.
</summary>
            <value>A <see cref="IEnumerable{T}" /> that enumerates <see cref="IUpstreamPersonalFileTag" /> entities.</value>
          </Documentation>
          <Type>
            <Generic Name="IEnumerable">
              <Identifier Name="IUpstreamPersonalFileTag" />
            </Generic>
          </Type>
          <!--TODO: Need <xsl:template match="Modifiers" mode="Root"></xsl:template>-->
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="PersonalSubdirectoryTags">
          <Documentation>
            <summary>
Enumerates generic personal subdirectory tag entities.
</summary>
            <value>A <see cref="IEnumerable{T}" /> that enumerates <see cref="IUpstreamPersonalSubdirectoryTag" /> entities.</value>
          </Documentation>
          <Type>
            <Generic Name="IEnumerable">
              <Identifier Name="IUpstreamPersonalSubdirectoryTag" />
            </Generic>
          </Type>
          <!--TODO: Need <xsl:template match="Modifiers" mode="Root"></xsl:template>-->
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="PersonalVolumeTags">
          <Documentation>
            <summary>
Enumerates generic personal volume tag entities.
</summary>
            <value>A <see cref="IEnumerable{T}" /> that enumerates <see cref="IUpstreamPersonalVolumeTag" /> entities.</value>
          </Documentation>
          <Type>
            <Generic Name="IEnumerable">
              <Identifier Name="IUpstreamPersonalVolumeTag" />
            </Generic>
          </Type>
          <!--TODO: Need <xsl:template match="Modifiers" mode="Root"></xsl:template>-->
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="SharedTagDefinitions">
          <Documentation>
            <summary>
Enumerates generic shared tag definition entities.
</summary>
            <value>A <see cref="IEnumerable{T}" /> that enumerates <see cref="IUpstreamSharedTagDefinition" /> entities.</value>
          </Documentation>
          <Type>
            <Generic Name="IEnumerable">
              <Identifier Name="IUpstreamSharedTagDefinition" />
            </Generic>
          </Type>
          <!--TODO: Need <xsl:template match="Modifiers" mode="Root"></xsl:template>-->
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="SharedFileTags">
          <Documentation>
            <summary>
Enumerates generic shared file tag entities.
</summary>
            <value>A <see cref="IEnumerable{T}" /> that enumerates <see cref="IUpstreamSharedFileTag" /> entities.</value>
          </Documentation>
          <Type>
            <Generic Name="IEnumerable">
              <Identifier Name="IUpstreamSharedFileTag" />
            </Generic>
          </Type>
          <!--TODO: Need <xsl:template match="Modifiers" mode="Root"></xsl:template>-->
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="SharedSubdirectoryTags">
          <Documentation>
            <summary>
Enumerates generic shared subdirectory tag entities.
</summary>
            <value>A <see cref="IEnumerable{T}" /> that enumerates <see cref="IUpstreamSharedSubdirectoryTag" /> entities.</value>
          </Documentation>
          <Type>
            <Generic Name="IEnumerable">
              <Identifier Name="IUpstreamSharedSubdirectoryTag" />
            </Generic>
          </Type>
          <!--TODO: Need <xsl:template match="Modifiers" mode="Root"></xsl:template>-->
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="SharedVolumeTags">
          <Documentation>
            <summary>
Enumerates generic shared volume tag entities.
</summary>
            <value>A <see cref="IEnumerable{T}" /> that enumerates <see cref="IUpstreamSharedVolumeTag" /> entities.</value>
          </Documentation>
          <Type>
            <Generic Name="IEnumerable">
              <Identifier Name="IUpstreamSharedVolumeTag" />
            </Generic>
          </Type>
          <!--TODO: Need <xsl:template match="Modifiers" mode="Root"></xsl:template>-->
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="CrawlConfigurations">
          <Documentation>
            <summary>
Enumerates generic crawl configuration entities from the upstream (remote) database.
</summary>
          </Documentation>
          <Type>
            <Generic Name="IEnumerable">
              <Identifier Name="IUpstreamCrawlConfiguration" />
            </Generic>
          </Type>
          <!--TODO: Need <xsl:template match="Modifiers" mode="Root"></xsl:template>-->
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="CrawlJobLogs">
          <Documentation>
            <summary>
Enumerates generic crawl log entities from the upstream (remote) database.
</summary>
          </Documentation>
          <Type>
            <Generic Name="IEnumerable">
              <Identifier Name="IUpstreamCrawlJobLog" />
            </Generic>
          </Type>
          <!--TODO: Need <xsl:template match="Modifiers" mode="Root"></xsl:template>-->
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="FileActions">
          <Documentation>
            <summary>
Enumerates generic file action entities from the upstream (remote) database.
</summary>
          </Documentation>
          <Type>
            <Generic Name="IEnumerable">
              <Identifier Name="IFileAction" />
            </Generic>
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="GroupMemberships">
          <Documentation>
            <summary>
Enumerates generic user group membership entities from the upstream (remote) database.
</summary>
          </Documentation>
          <Type>
            <Generic Name="IEnumerable">
              <Identifier Name="IGroupMembership" />
            </Generic>
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="HostDevices">
          <Documentation>
            <summary>
Enumerates generic host device entities from the upstream (remote) database.
</summary>
          </Documentation>
          <Type>
            <Generic Name="IEnumerable">
              <Identifier Name="IHostDevice" />
            </Generic>
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="HostPlatforms">
          <Documentation>
            <summary>
Enumerates generic host platform entities from the upstream (remote) database.
</summary>
          </Documentation>
          <Type>
            <Generic Name="IEnumerable">
              <Identifier Name="IHostPlatform" />
            </Generic>
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="MitigationTasks">
          <Documentation>
            <summary>
Enumerates generic mitigation task entities from the upstream (remote) database.
</summary>
          </Documentation>
          <Type>
            <Generic Name="IEnumerable">
              <Identifier Name="IMitigationTask" />
            </Generic>
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="SubdirectoryActions">
          <Documentation>
            <summary>
Enumerates generic subdirectory action entities from the upstream (remote) database.
</summary>
          </Documentation>
          <Type>
            <Generic Name="IEnumerable">
              <Identifier Name="ISubdirectoryAction" />
            </Generic>
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="UserGroups">
          <Documentation>
            <summary>
Enumerates generic user group entities from the upstream (remote) database.
</summary>
          </Documentation>
          <Type>
            <Generic Name="IEnumerable">
              <Identifier Name="IUserGroup" />
            </Generic>
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="UserProfiles">
          <Documentation>
            <summary>
Enumerates generic user profile entities from the upstream (remote) database.
</summary>
          </Documentation>
          <Type>
            <Generic Name="IEnumerable">
              <Identifier Name="IUserProfile" />
            </Generic>
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="FileSystemListing">
          <Documentation>
            <summary>
Enumerates entites from the file system listing view.
</summary>
            <value>Result entities from a view of <see cref="FileSystems" /> joined with <see cref="SymbolicNames" /> and <see cref="Volumes" />.</value>
          </Documentation>
          <Type>
            <Generic Name="IEnumerable">
              <Identifier Name="IUpstreamFileSystemListItem" />
            </Generic>
          </Type>
          <!--TODO: Need <xsl:template match="Modifiers" mode="Root"></xsl:template>-->
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="PersonalTagDefinitionListing">
          <Documentation>
            <summary>
Enumerates entites from the personal tag definition listing view.
</summary>
            <value>Result entities from a view of <see cref="PersonalTagDefinitions" /> joined with <see cref="Files" />, <see cref="Subdirectories" /> and <see cref="Volumes" />.</value>
          </Documentation>
          <Type>
            <Generic Name="IEnumerable">
              <Identifier Name="IUpstreamTagDefinitionListItem" />
            </Generic>
          </Type>
          <!--TODO: Need <xsl:template match="Modifiers" mode="Root"></xsl:template>-->
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="SharedTagDefinitionListing">
          <Documentation>
            <summary>
Enumerates entites from the shared tag definition listing view.
</summary>
            <value>Result entities from a view of <see cref="SharedTagDefinitions" /> joined with <see cref="Files" />, <see cref="Subdirectories" /> and <see cref="Volumes" />.</value>
          </Documentation>
          <Type>
            <Generic Name="IEnumerable">
              <Identifier Name="IUpstreamTagDefinitionListItem" />
            </Generic>
          </Type>
          <!--TODO: Need <xsl:template match="Modifiers" mode="Root"></xsl:template>-->
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="RedundantSetListing">
          <Documentation>
            <summary>
Enumerates entites from the redundant set listing view.
</summary>
            <value>Result entities from a view of <see cref="RedundantSets" /> joined with <see cref="BinaryPropertySets" /> and <see cref="Redundancies" />.</value>
          </Documentation>
          <Type>
            <Generic Name="IEnumerable">
              <Identifier Name="IUpstreamRedundantSetListItem" />
            </Generic>
          </Type>
          <!--TODO: Need <xsl:template match="Modifiers" mode="Root"></xsl:template>-->
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="VolumeListing">
          <Documentation>
            <summary>
Enumerates entites from the volume listing view intended for display listings of a specific file system.
</summary>
            <value>
Result entities from a view of <see cref="Volumes" /> joined with <see cref="Subdirectories" />, <see cref="VolumeAccessErrors" />, <see cref="SharedVolumeTags" />
and <see cref="PersonalVolumeTags" />.
</value>
          </Documentation>
          <Type>
            <Generic Name="IEnumerable">
              <Identifier Name="IUpstreamVolumeListItem" />
            </Generic>
          </Type>
          <!--TODO: Need <xsl:template match="Modifiers" mode="Root"></xsl:template>-->
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="VolumeListingWithFileSystem">
          <Documentation>
            <summary>
Enumerates entites from the volume listing view.
</summary>
            <value>
Result entities from a view of <see cref="Volumes" /> joined with <see cref="FileSystems" />, <see cref="Subdirectories" />, <see cref="VolumeAccessErrors" />,
<see cref="SharedVolumeTags" /> and <see cref="PersonalVolumeTags" />.
</value>
          </Documentation>
          <Type>
            <Generic Name="IEnumerable">
              <Identifier Name="IUpstreamVolumeListItemWithFileSystem" />
            </Generic>
          </Type>
          <!--TODO: Need <xsl:template match="Modifiers" mode="Root"></xsl:template>-->
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="SubdirectoryListing">
          <Documentation>
            <summary>
Enumerates entites from the subdirectory listing view.
</summary>
            <value>Result entities from a view of <see cref="Subdirectories" /> joined with <see cref="Files" />, <see cref="Subdirectories" /> and <see cref="CrawlConfigurations" />.</value>
          </Documentation>
          <Type>
            <Generic Name="IEnumerable">
              <Identifier Name="IUpstreamSubdirectoryListItem" />
            </Generic>
          </Type>
          <!--TODO: Need <xsl:template match="Modifiers" mode="Root"></xsl:template>-->
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="SubdirectoryListingWithAncestorNames">
          <Documentation>
            <summary>
Enumerates entites from the subdirectory listing view that includes ancestor path element names.
</summary>
            <value>Result entities from a view of <see cref="Subdirectories" /> joined with <see cref="Files" />, <see cref="Subdirectories" /> and <see cref="CrawlConfigurations" />.</value>
          </Documentation>
          <Type>
            <Generic Name="IEnumerable">
              <Identifier Name="IUpstreamSubdirectoryListItemWithAncestorNames" />
            </Generic>
          </Type>
          <!--TODO: Need <xsl:template match="Modifiers" mode="Root"></xsl:template>-->
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="FileListingWithAncestorNames">
          <Documentation>
            <summary>
Enumerates entites from the file listing view that includes ancestor path element names.
</summary>
            <value>Result entities from a view of <see cref="Files" /> joined with <see cref="Subdirectories" />.</value>
          </Documentation>
          <Type>
            <Generic Name="IEnumerable">
              <Identifier Name="IUpstreamFileListItemWithAncestorNames" />
            </Generic>
          </Type>
          <!--TODO: Need <xsl:template match="Modifiers" mode="Root"></xsl:template>-->
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="FileListingWithBinaryProperties">
          <Documentation>
            <summary>
Enumerates entites from the file listing view that includes size and hash.
</summary>
            <value>Result entities from a view of <see cref="Files" /> joined with <see cref="BinaryPropertySets" />.</value>
          </Documentation>
          <Type>
            <Generic Name="IEnumerable">
              <Identifier Name="IUpstreamFileListItemWithBinaryProperties" />
            </Generic>
          </Type>
          <!--TODO: Need <xsl:template match="Modifiers" mode="Root"></xsl:template>-->
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="FileListingWithBinaryPropertiesAndAncestorNames">
          <Documentation>
            <summary>
Enumerates entites from the file listing view that includes size, hash and ancestor path element names.
</summary>
            <value>Result entities from a view of <see cref="Files" /> joined with <see cref="Subdirectories" /> and <see cref="BinaryPropertySets" />.</value>
          </Documentation>
          <Type>
            <Generic Name="IEnumerable">
              <Identifier Name="IUpstreamFileListItemWithBinaryPropertiesAndAncestorNames" />
            </Generic>
          </Type>
          <!--TODO: Need <xsl:template match="Modifiers" mode="Root"></xsl:template>-->
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="CrawlConfigListing">
          <Documentation>
            <summary>
Enumerates entites from the file listing view that includes size and hash.
</summary>
            <value>Result entities from a view of <see cref="CrawlConfigurations" /> joined with <see cref="Subdirectories" />, <see cref="Volumes" />,  and <see cref="FileSystems" />.</value>
          </Documentation>
          <Type>
            <Generic Name="IEnumerable">
              <Identifier Name="IUpstreamCrawlConfigurationListItem" />
            </Generic>
          </Type>
          <!--TODO: Need <xsl:template match="Modifiers" mode="Root"></xsl:template>-->
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="CrawlConfigReport">
          <Documentation>
            <summary>
Enumerates entities representing crawl configuration result report rows.
</summary>
            <value>Result entities from a view of <see cref="CrawlConfigurations" /> joined with <see cref="Subdirectories" />, <see cref="Volumes" />,  and <see cref="FileSystems" />.</value>
          </Documentation>
          <Type>
            <Generic Name="IEnumerable">
              <Identifier Name="IUpstreamCrawlConfigReportItem" />
            </Generic>
          </Type>
          <!--TODO: Need <xsl:template match="Modifiers" mode="Root"></xsl:template>-->
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="CrawlJobListing">
          <Documentation>
            <summary>
Enumerates entites from the crawl job logs view that includes configuration information.
</summary>
            <value>Result entities from a view of <see cref="CrawlJobLogs" /> joined with <see cref="CrawlConfigurations" />.</value>
          </Documentation>
          <Type>
            <Generic Name="IEnumerable">
              <Identifier Name="IUpstreamCrawlJobListItem" />
            </Generic>
          </Type>
          <!--TODO: Need <xsl:template match="Modifiers" mode="Root"></xsl:template>-->
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="SummaryPropertiesListing">
          <Documentation>
            <summary>
Enumerates entites from the summary properties listing view that includes file counts.
</summary>
            <value>Result entities from a view of <see cref="SummaryPropertySets" /> joined with <see cref="Files" />.</value>
          </Documentation>
          <Type>
            <Generic Name="IEnumerable">
              <Identifier Name="IUpstreamSummaryPropertiesListItem" />
            </Generic>
          </Type>
          <!--TODO: Need <xsl:template match="Modifiers" mode="Root"></xsl:template>-->
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="DocumentPropertiesListing">
          <Documentation>
            <summary>
Enumerates entites from the document properties listing view that includes file counts.
</summary>
            <value>Result entities from a view of <see cref="DocumentPropertySets" /> joined with <see cref="Files" />.</value>
          </Documentation>
          <Type>
            <Generic Name="IEnumerable">
              <Identifier Name="IUpstreamDocumentPropertiesListItem" />
            </Generic>
          </Type>
          <!--TODO: Need <xsl:template match="Modifiers" mode="Root"></xsl:template>-->
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="AudioPropertiesListing">
          <Documentation>
            <summary>
Enumerates entites from the audio properties listing view that includes file counts.
</summary>
            <value>Result entities from a view of <see cref="AudioPropertySets" /> joined with <see cref="Files" />.</value>
          </Documentation>
          <Type>
            <Generic Name="IEnumerable">
              <Identifier Name="IUpstreamAudioPropertiesListItem" />
            </Generic>
          </Type>
          <!--TODO: Need <xsl:template match="Modifiers" mode="Root"></xsl:template>-->
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="DRMPropertiesListing">
          <Documentation>
            <summary>
Enumerates entites from the DRM properties listing view that includes file counts.
</summary>
            <value>Result entities from a view of <see cref="DRMPropertySets" /> joined with <see cref="Files" />.</value>
          </Documentation>
          <Type>
            <Generic Name="IEnumerable">
              <Identifier Name="IUpstreamDRMPropertiesListItem" />
            </Generic>
          </Type>
          <!--TODO: Need <xsl:template match="Modifiers" mode="Root"></xsl:template>-->
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="GPSPropertiesListing">
          <Documentation>
            <summary>
Enumerates entites from the GPS properties listing view that includes file counts.
</summary>
            <value>Result entities from a view of <see cref="GPSPropertySets" /> joined with <see cref="Files" />.</value>
          </Documentation>
          <Type>
            <Generic Name="IEnumerable">
              <Identifier Name="IUpstreamGPSPropertiesListItem" />
            </Generic>
          </Type>
          <!--TODO: Need <xsl:template match="Modifiers" mode="Root"></xsl:template>-->
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="ImagePropertiesListing">
          <Documentation>
            <summary>
Enumerates entites from the image properties listing view that includes file counts.
</summary>
            <value>Result entities from a view of <see cref="ImagePropertySets" /> joined with <see cref="Files" />.</value>
          </Documentation>
          <Type>
            <Generic Name="IEnumerable">
              <Identifier Name="IUpstreamImagePropertiesListItem" />
            </Generic>
          </Type>
          <!--TODO: Need <xsl:template match="Modifiers" mode="Root"></xsl:template>-->
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="MediaPropertiesListing">
          <Documentation>
            <summary>
Enumerates entites from the media properties listing view that includes file counts.
</summary>
            <value>Result entities from a view of <see cref="MediaPropertySets" /> joined with <see cref="Files" />.</value>
          </Documentation>
          <Type>
            <Generic Name="IEnumerable">
              <Identifier Name="IUpstreamMediaPropertiesListItem" />
            </Generic>
          </Type>
          <!--TODO: Need <xsl:template match="Modifiers" mode="Root"></xsl:template>-->
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="MusicPropertiesListing">
          <Documentation>
            <summary>
Enumerates entites from the music properties listing view that includes file counts.
</summary>
            <value>Result entities from a view of <see cref="MusicPropertySets" /> joined with <see cref="Files" />.</value>
          </Documentation>
          <Type>
            <Generic Name="IEnumerable">
              <Identifier Name="IUpstreamMusicPropertiesListItem" />
            </Generic>
          </Type>
          <!--TODO: Need <xsl:template match="Modifiers" mode="Root"></xsl:template>-->
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="PhotoPropertiesListing">
          <Documentation>
            <summary>
Enumerates entites from the photo properties listing view that includes file counts.
</summary>
            <value>Result entities from a view of <see cref="PhotoPropertySets" /> joined with <see cref="Files" />.</value>
          </Documentation>
          <Type>
            <Generic Name="IEnumerable">
              <Identifier Name="IUpstreamPhotoPropertiesListItem" />
            </Generic>
          </Type>
          <!--TODO: Need <xsl:template match="Modifiers" mode="Root"></xsl:template>-->
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="RecordedTVPropertiesListing">
          <Documentation>
            <summary>
Enumerates entites from the recorded TV properties listing view that includes file counts.
</summary>
            <value>Result entities from a view of <see cref="RecordedTVPropertySets" /> joined with <see cref="Files" />.</value>
          </Documentation>
          <Type>
            <Generic Name="IEnumerable">
              <Identifier Name="IUpstreamRecordedTVPropertiesListItem" />
            </Generic>
          </Type>
          <!--TODO: Need <xsl:template match="Modifiers" mode="Root"></xsl:template>-->
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="VideoPropertiesListing">
          <Documentation>
            <summary>
Enumerates entites from the video properties listing view that includes file counts.
</summary>
            <value>Result entities from a view of <see cref="VideoPropertySets" /> joined with <see cref="Files" />.</value>
          </Documentation>
          <Type>
            <Generic Name="IEnumerable">
              <Identifier Name="IUpstreamVideoPropertiesListItem" />
            </Generic>
          </Type>
          <!--TODO: Need <xsl:template match="Modifiers" mode="Root"></xsl:template>-->
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="GroupMemberOfListing">
          <Type>
            <Generic Name="IEnumerable">
              <Identifier Name="IGroupMemberOfListItem" />
            </Generic>
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="GroupMemberListing">
          <Type>
            <Generic Name="IEnumerable">
              <Identifier Name="IGroupMemberListItem" />
            </Generic>
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="HostDeviceListing">
          <Type>
            <Generic Name="IEnumerable">
              <Identifier Name="IHostDeviceListItem" />
            </Generic>
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="HostPlatformListing">
          <Type>
            <Generic Name="IEnumerable">
              <Identifier Name="IHostPlatformListItem" />
            </Generic>
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="MitigationTaskListing">
          <Type>
            <Generic Name="IEnumerable">
              <Identifier Name="IMitigationTaskListItem" />
            </Generic>
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="UserGroupListing">
          <Type>
            <Generic Name="IEnumerable">
              <Identifier Name="IUserGroupListItem" />
            </Generic>
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="UserProfileListing">
          <Type>
            <Generic Name="IEnumerable">
              <Identifier Name="IUserProfileListItem" />
            </Generic>
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="PersonalVolumeTagListing">
          <Documentation>
            <summary>
Enumerates entites from the personal volume tags listing view that includes volume and tag properties.
</summary>
            <value>Result entities from a view of <see cref="PersonalVolumeTags" /> joined with <see cref="Volumes" /> and <see cref="PersonalTagDefinitions" />.</value>
          </Documentation>
          <Type>
            <Generic Name="IEnumerable">
              <Identifier Name="IUpstreamItemTagListItem" />
            </Generic>
          </Type>
          <!--TODO: Need <xsl:template match="Modifiers" mode="Root"></xsl:template>-->
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="SharedVolumeTagListing">
          <Documentation>
            <summary>
Enumerates entites from the shared volume tags listing view that includes volume and tag properties.
</summary>
            <value>Result entities from a view of <see cref="SharedVolumeTags" /> joined with <see cref="Volumes" /> and <see cref="SharedTagDefinitions" />.</value>
          </Documentation>
          <Type>
            <Generic Name="IEnumerable">
              <Identifier Name="IUpstreamItemTagListItem" />
            </Generic>
          </Type>
          <!--TODO: Need <xsl:template match="Modifiers" mode="Root"></xsl:template>-->
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="PersonalSubdirectoryTagListing">
          <Documentation>
            <summary>
Enumerates entites from the personal subdirectory tags listing view that includes subdirectory and tag properties.
</summary>
            <value>Result entities from a view of <see cref="PersonalSubdirectoryTags" /> joined with <see cref="Subdirectories" /> and <see cref="PersonalTagDefinitions" />.</value>
          </Documentation>
          <Type>
            <Generic Name="IEnumerable">
              <Identifier Name="IUpstreamItemTagListItem" />
            </Generic>
          </Type>
          <!--TODO: Need <xsl:template match="Modifiers" mode="Root"></xsl:template>-->
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="SharedSubdirectoryTagListing">
          <Documentation>
            <summary>
Enumerates entites from the shared subdirectory tags listing view that includes file and tag properties.
</summary>
            <value>Result entities from a view of <see cref="SharedSubdirectoryTags" /> joined with <see cref="Subdirectories" /> and <see cref="SharedTagDefinitions" />.</value>
          </Documentation>
          <Type>
            <Generic Name="IEnumerable">
              <Identifier Name="IUpstreamItemTagListItem" />
            </Generic>
          </Type>
          <!--TODO: Need <xsl:template match="Modifiers" mode="Root"></xsl:template>-->
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="PersonalFileTagListing">
          <Documentation>
            <summary>
Enumerates entites from the personal file tags listing view that includes file and tag properties.
</summary>
            <value>Result entities from a view of <see cref="PersonalFileTags" /> joined with <see cref="Files" /> and <see cref="PersonalTagDefinitions" />.</value>
          </Documentation>
          <Type>
            <Generic Name="IEnumerable">
              <Identifier Name="IUpstreamItemTagListItem" />
            </Generic>
          </Type>
          <!--TODO: Need <xsl:template match="Modifiers" mode="Root"></xsl:template>-->
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="SharedFileTagListing">
          <Documentation>
            <summary>
Enumerates entites from the shared file tag listing view that includes file and tag properties.
</summary>
            <value>Result entities from a view of <see cref="SharedFileTags" /> joined with <see cref="Files" /> and <see cref="SharedTagDefinitions" />.</value>
          </Documentation>
          <Type>
            <Generic Name="IEnumerable">
              <Identifier Name="IUpstreamItemTagListItem" />
            </Generic>
          </Type>
          <!--TODO: Need <xsl:template match="Modifiers" mode="Root"></xsl:template>-->
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Method Name="FindMatchingAsync" OTHER="TODO: Need translation for Modifier[.='new']">
          <Documentation>
            <summary>
Finds the generic <see cref="IUpstreamSummaryPropertySet" /> in the upstream (remote) database that matches the specified summary properties.
</summary>
            <param name="properties">The <see cref="ISummaryProperties" /> object containing the property values to match.</param>
            <param name="cancellationToken">The cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
            <returns>The generic <see cref="IUpstreamSummaryPropertySet" /> for the matching entity or <see langword="null" /> if no match was found.</returns>
          </Documentation>
          <Parameters>
            <Parameter Name="properties">
              <Type>
                <Identifier Name="ISummaryProperties" />
              </Type>
            </Parameter>
            <Parameter Name="cancellationToken">
              <Type>
                <Identifier Name="CancellationToken" />
              </Type>
            </Parameter>
          </Parameters>
          <ReturnType>
            <Generic Name="Task">
              <Identifier Name="IUpstreamSummaryPropertySet" />
            </Generic>
          </ReturnType>
        </Method>
        <Method Name="FindMatchingAsync" OTHER="TODO: Need translation for Modifier[.='new']">
          <Documentation>
            <summary>
Finds the generic <see cref="IUpstreamDocumentPropertySet" /> in the upstream (remote) database that matches the specified summary properties.
</summary>
            <param name="properties">The <see cref="IDocumentProperties" /> object containing the property values to match.</param>
            <param name="cancellationToken">The cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
            <returns>The generic <see cref="IUpstreamDocumentPropertySet" /> for the matching entity or <see langword="null" /> if no match was found.</returns>
          </Documentation>
          <Parameters>
            <Parameter Name="properties">
              <Type>
                <Identifier Name="IDocumentProperties" />
              </Type>
            </Parameter>
            <Parameter Name="cancellationToken">
              <Type>
                <Identifier Name="CancellationToken" />
              </Type>
            </Parameter>
          </Parameters>
          <ReturnType>
            <Generic Name="Task">
              <Identifier Name="IUpstreamDocumentPropertySet" />
            </Generic>
          </ReturnType>
        </Method>
        <Method Name="FindMatchingAsync" OTHER="TODO: Need translation for Modifier[.='new']">
          <Documentation>
            <summary>
Finds the generic <see cref="IUpstreamAudioPropertySet" /> in the upstream (remote) database that matches the specified summary properties.
</summary>
            <param name="properties">The <see cref="IAudioProperties" /> object containing the property values to match.</param>
            <param name="cancellationToken">The cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
            <returns>The generic <see cref="IUpstreamAudioPropertySet" /> for the matching entity or <see langword="null" /> if no match was found.</returns>
          </Documentation>
          <Parameters>
            <Parameter Name="properties">
              <Type>
                <Identifier Name="IAudioProperties" />
              </Type>
            </Parameter>
            <Parameter Name="cancellationToken">
              <Type>
                <Identifier Name="CancellationToken" />
              </Type>
            </Parameter>
          </Parameters>
          <ReturnType>
            <Generic Name="Task">
              <Identifier Name="IUpstreamAudioPropertySet" />
            </Generic>
          </ReturnType>
        </Method>
        <Method Name="FindMatchingAsync" OTHER="TODO: Need translation for Modifier[.='new']">
          <Documentation>
            <summary>
Finds the generic <see cref="IUpstreamDRMPropertySet" /> in the upstream (remote) database that matches the specified summary properties.
</summary>
            <param name="properties">The <see cref="IDRMProperties" /> object containing the property values to match.</param>
            <param name="cancellationToken">The cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
            <returns>The generic <see cref="IUpstreamDRMPropertySet" /> for the matching entity or <see langword="null" /> if no match was found.</returns>
          </Documentation>
          <Parameters>
            <Parameter Name="properties">
              <Type>
                <Identifier Name="IDRMProperties" />
              </Type>
            </Parameter>
            <Parameter Name="cancellationToken">
              <Type>
                <Identifier Name="CancellationToken" />
              </Type>
            </Parameter>
          </Parameters>
          <ReturnType>
            <Generic Name="Task">
              <Identifier Name="IUpstreamDRMPropertySet" />
            </Generic>
          </ReturnType>
        </Method>
        <Method Name="FindMatchingAsync" OTHER="TODO: Need translation for Modifier[.='new']">
          <Documentation>
            <summary>
Finds the generic <see cref="IUpstreamGPSPropertySet" /> in the upstream (remote) database that matches the specified summary properties.
</summary>
            <param name="properties">The <see cref="IGPSProperties" /> object containing the property values to match.</param>
            <param name="cancellationToken">The cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
            <returns>The generic <see cref="IUpstreamGPSPropertySet" /> for the matching entity or <see langword="null" /> if no match was found.</returns>
          </Documentation>
          <Parameters>
            <Parameter Name="properties">
              <Type>
                <Identifier Name="IGPSProperties" />
              </Type>
            </Parameter>
            <Parameter Name="cancellationToken">
              <Type>
                <Identifier Name="CancellationToken" />
              </Type>
            </Parameter>
          </Parameters>
          <ReturnType>
            <Generic Name="Task">
              <Identifier Name="IUpstreamGPSPropertySet" />
            </Generic>
          </ReturnType>
        </Method>
        <Method Name="FindMatchingAsync" OTHER="TODO: Need translation for Modifier[.='new']">
          <Documentation>
            <summary>
Finds the generic <see cref="IUpstreamImagePropertySet" /> in the upstream (remote) database that matches the specified summary properties.
</summary>
            <param name="properties">The <see cref="IImageProperties" /> object containing the property values to match.</param>
            <param name="cancellationToken">The cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
            <returns>The generic <see cref="IUpstreamImagePropertySet" /> for the matching entity or <see langword="null" /> if no match was found.</returns>
          </Documentation>
          <Parameters>
            <Parameter Name="properties">
              <Type>
                <Identifier Name="IImageProperties" />
              </Type>
            </Parameter>
            <Parameter Name="cancellationToken">
              <Type>
                <Identifier Name="CancellationToken" />
              </Type>
            </Parameter>
          </Parameters>
          <ReturnType>
            <Generic Name="Task">
              <Identifier Name="IUpstreamImagePropertySet" />
            </Generic>
          </ReturnType>
        </Method>
        <Method Name="FindMatchingAsync" OTHER="TODO: Need translation for Modifier[.='new']">
          <Documentation>
            <summary>
Finds the generic <see cref="IUpstreamMediaPropertySet" /> in the upstream (remote) database that matches the specified summary properties.
</summary>
            <param name="properties">The <see cref="IMediaProperties" /> object containing the property values to match.</param>
            <param name="cancellationToken">The cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
            <returns>The generic <see cref="IUpstreamMediaPropertySet" /> for the matching entity or <see langword="null" /> if no match was found.</returns>
          </Documentation>
          <Parameters>
            <Parameter Name="properties">
              <Type>
                <Identifier Name="IMediaProperties" />
              </Type>
            </Parameter>
            <Parameter Name="cancellationToken">
              <Type>
                <Identifier Name="CancellationToken" />
              </Type>
            </Parameter>
          </Parameters>
          <ReturnType>
            <Generic Name="Task">
              <Identifier Name="IUpstreamMediaPropertySet" />
            </Generic>
          </ReturnType>
        </Method>
        <Method Name="FindMatchingAsync" OTHER="TODO: Need translation for Modifier[.='new']">
          <Documentation>
            <summary>
Finds the generic <see cref="IUpstreamMusicPropertySet" /> in the upstream (remote) database that matches the specified summary properties.
</summary>
            <param name="properties">The <see cref="IMusicProperties" /> object containing the property values to match.</param>
            <param name="cancellationToken">The cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
            <returns>The generic <see cref="IUpstreamMusicPropertySet" /> for the matching entity or <see langword="null" /> if no match was found.</returns>
          </Documentation>
          <Parameters>
            <Parameter Name="properties">
              <Type>
                <Identifier Name="IMusicProperties" />
              </Type>
            </Parameter>
            <Parameter Name="cancellationToken">
              <Type>
                <Identifier Name="CancellationToken" />
              </Type>
            </Parameter>
          </Parameters>
          <ReturnType>
            <Generic Name="Task">
              <Identifier Name="IUpstreamMusicPropertySet" />
            </Generic>
          </ReturnType>
        </Method>
        <Method Name="FindMatchingAsync" OTHER="TODO: Need translation for Modifier[.='new']">
          <Documentation>
            <summary>
Finds the generic <see cref="IUpstreamPhotoPropertySet" /> in the upstream (remote) database that matches the specified summary properties.
</summary>
            <param name="properties">The <see cref="IPhotoProperties" /> object containing the property values to match.</param>
            <param name="cancellationToken">The cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
            <returns>The generic <see cref="IUpstreamPhotoPropertySet" /> for the matching entity or <see langword="null" /> if no match was found.</returns>
          </Documentation>
          <Parameters>
            <Parameter Name="properties">
              <Type>
                <Identifier Name="IPhotoProperties" />
              </Type>
            </Parameter>
            <Parameter Name="cancellationToken">
              <Type>
                <Identifier Name="CancellationToken" />
              </Type>
            </Parameter>
          </Parameters>
          <ReturnType>
            <Generic Name="Task">
              <Identifier Name="IUpstreamPhotoPropertySet" />
            </Generic>
          </ReturnType>
        </Method>
        <Method Name="FindMatchingAsync" OTHER="TODO: Need translation for Modifier[.='new']">
          <Documentation>
            <summary>
Finds the generic <see cref="IUpstreamRecordedTVPropertySet" /> in the upstream (remote) database that matches the specified summary properties.
</summary>
            <param name="properties">The <see cref="IRecordedTVProperties" /> object containing the property values to match.</param>
            <param name="cancellationToken">The cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
            <returns>The generic <see cref="IUpstreamRecordedTVPropertySet" /> for the matching entity or <see langword="null" /> if no match was found.</returns>
          </Documentation>
          <Parameters>
            <Parameter Name="properties">
              <Type>
                <Identifier Name="IRecordedTVProperties" />
              </Type>
            </Parameter>
            <Parameter Name="cancellationToken">
              <Type>
                <Identifier Name="CancellationToken" />
              </Type>
            </Parameter>
          </Parameters>
          <ReturnType>
            <Generic Name="Task">
              <Identifier Name="IUpstreamRecordedTVPropertySet" />
            </Generic>
          </ReturnType>
        </Method>
        <Method Name="FindMatchingAsync" OTHER="TODO: Need translation for Modifier[.='new']">
          <Documentation>
            <summary>
Finds the generic <see cref="IUpstreamVideoPropertySet" /> in the upstream (remote) database that matches the specified summary properties.
</summary>
            <param name="properties">The <see cref="IVideoProperties" /> object containing the property values to match.</param>
            <param name="cancellationToken">The cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
            <returns>The generic <see cref="IUpstreamVideoPropertySet" /> for the matching entity or <see langword="null" /> if no match was found.</returns>
          </Documentation>
          <Parameters>
            <Parameter Name="properties">
              <Type>
                <Identifier Name="IVideoProperties" />
              </Type>
            </Parameter>
            <Parameter Name="cancellationToken">
              <Type>
                <Identifier Name="CancellationToken" />
              </Type>
            </Parameter>
          </Parameters>
          <ReturnType>
            <Generic Name="Task">
              <Identifier Name="IUpstreamVideoPropertySet" />
            </Generic>
          </ReturnType>
        </Method>
      </Interface>
    </Namespace>
  </Source>
  <Source Path="Upstream\Model\IUpstreamDbEntity.cs" Id="5e92823f-45a6-4546-8a51-a4a4d7172891">
    <Using Name="FsInfoCat.Model" />
    <Using Name="System.ComponentModel.DataAnnotations" />
    <Namespace Name="FsInfoCat.Upstream.Model">
      <Interface Name="IUpstreamDbEntity" Access="public">
        <Documentation>
          <summary>
Base interface for all database entity objects for the database which is hosted on the local machine.
</summary>
          <seealso cref="IFileAction" />
          <seealso cref="IGroupMembershipRow" />
          <seealso cref="IHostDeviceRow" />
          <seealso cref="IHostPlatformRow" />
          <seealso cref="IMitigationTaskRow" />
          <seealso cref="ISubdirectoryActionRow" />
          <seealso cref="IUpstreamAccessError" />
          <seealso cref="IUpstreamBinaryPropertySet" />
          <seealso cref="IUpstreamComparison" />
          <seealso cref="IUpstreamCrawlConfigurationRow" />
          <seealso cref="IUpstreamCrawlJobLogRow" />
          <seealso cref="IUpstreamDbFsItemRow" />
          <seealso cref="IUpstreamFileSystemRow" />
          <seealso cref="IUpstreamItemTagRow" />
          <seealso cref="IUpstreamPropertiesRow" />
          <seealso cref="IUpstreamRedundancy" />
          <seealso cref="IUpstreamRedundantSetRow" />
          <seealso cref="IUpstreamSymbolicNameRow" />
          <seealso cref="IUpstreamTagDefinitionRow" />
          <seealso cref="IUpstreamVolumeRow" />
          <seealso cref="IUserGroupRow" />
          <seealso cref="IUserProfileRow" />
          <seealso cref="IDbEntity" />
          <seealso cref="Local.Model.ILocalDbEntity" />
          <seealso cref="IUpstreamDbContext" />
        </Documentation>
        <Implements>
          <SimpleBaseType Name="IDbEntity" />
        </Implements>
        <Property Name="CreatedBy">
          <Documentation>
            <summary>
Gets the user who created the current record.
</summary>
            <value>The user who created the current record.</value>
          </Documentation>
          <Display Name="DisplayName_CreatedBy" ShortName="DisplayName_CreatedBy" Description="DisplayName_CreatedBy" />
          <Type>
            <Identifier Name="IUserProfile" />
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="ModifiedBy">
          <Documentation>
            <summary>
Gets the user who last modified the current record.
</summary>
            <value>The user who last modified the current record.</value>
          </Documentation>
          <Display Name="DisplayName_ModifiedBy" ShortName="DisplayName_ModifiedBy" Description="DisplayName_ModifiedBy" />
          <Type>
            <Identifier Name="IUserProfile" />
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
      </Interface>
    </Namespace>
  </Source>
  <Source Path="Upstream\Model\IUpstreamDbFsItem.cs" Id="a4f68ce7-2989-4729-a122-177bc7c0caca">
    <Using Name="FsInfoCat.Model" />
    <Using Name="System.Collections.Generic" />
    <Using Name="System.ComponentModel.DataAnnotations" />
    <Namespace Name="FsInfoCat.Upstream.Model">
      <Interface Name="IUpstreamDbFsItem" Access="public">
        <Documentation>
          <summary>
Base interface for a database entity that represents a file system node.
</summary>
          <seealso cref="IDbFsItem" />
          <seealso cref="Local.Model.ILocalDbFsItem" />
          <seealso cref="IUpstreamFile" />
          <seealso cref="IUpstreamSubdirectory" />
        </Documentation>
        <Implements>
          <SimpleBaseType Name="IUpstreamDbFsItemRow" />
          <SimpleBaseType Name="IDbFsItem" />
        </Implements>
        <Property Name="Parent">
          <Documentation>
            <summary>
Gets the parent subdirectory.
</summary>
            <value>The parent <see cref="IUpstreamSubdirectory" /> or <see langword="null" /> if this is the root <see cref="IUpstreamSubdirectory" />.</value>
            <remarks>
If the current entity is a <see cref="IUpstreamSubdirectory" /> and this is <see langword="null" />,
then <see cref="IUpstreamSubdirectory.Volume" /> should not be <see langword="null" />, and vice-versa;
otherwise, if the current entity is a <see cref="IUpstreamFile" />, then this should never be <see langword="null" />.
</remarks>
          </Documentation>
          <Display Name="DisplayName_Parent" ShortName="DisplayName_Parent" Description="DisplayName_Parent" />
          <Type>
            <Identifier Name="IUpstreamSubdirectory" />
          </Type>
          <!--TODO: Need <xsl:template match="Modifiers" mode="Root"></xsl:template>-->
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="AccessErrors">
          <Documentation>
            <summary>
Gets the access errors for the current file system item.
</summary>
            <value>The access errors for the current file system item.</value>
          </Documentation>
          <Display Name="DisplayName_AccessErrors" ShortName="DisplayName_AccessErrors" Description="DisplayName_AccessErrors" />
          <Type>
            <Generic Name="IEnumerable">
              <Identifier Name="IUpstreamAccessError" />
            </Generic>
          </Type>
          <!--TODO: Need <xsl:template match="Modifiers" mode="Root"></xsl:template>-->
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="PersonalTags">
          <Documentation>
            <summary>
Gets the personal tags associated with the current file system item.
</summary>
            <value>The <see cref="IUpstreamPersonalTag" /> entities that associate <see cref="IUpstreamPersonalTagDefinition" /> entities with the current file system item.</value>
          </Documentation>
          <Display Name="DisplayName_PersonalTags" ShortName="DisplayName_PersonalTags" Description="DisplayName_PersonalTags" />
          <Type>
            <Generic Name="IEnumerable">
              <Identifier Name="IUpstreamPersonalTag" />
            </Generic>
          </Type>
          <!--TODO: Need <xsl:template match="Modifiers" mode="Root"></xsl:template>-->
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="SharedTags">
          <Documentation>
            <summary>
Gets the shared tags associated with the current file system item.
</summary>
            <value>The <see cref="IUpstreamSharedTag" /> entities that associate <see cref="IUpstreamSharedTagDefinition" /> entities with the current file system item.</value>
          </Documentation>
          <Display Name="DisplayName_PersonalTags" ShortName="DisplayName_PersonalTags" Description="DisplayName_PersonalTags" />
          <Type>
            <Generic Name="IEnumerable">
              <Identifier Name="IUpstreamSharedTag" />
            </Generic>
          </Type>
          <!--TODO: Need <xsl:template match="Modifiers" mode="Root"></xsl:template>-->
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
      </Interface>
    </Namespace>
  </Source>
  <Source Path="Upstream\Model\IUpstreamDbFsItemListItem.cs" Id="8c06adec-0b03-4856-b7bf-cfe47b5dd5ff">
    <Using Name="FsInfoCat.Model" />
    <Namespace Name="FsInfoCat.Upstream.Model">
      <Interface Name="IUpstreamDbFsItemListItem" Access="public">
        <Documentation>
          <summary>
Generic interface for database view entities derived from the <see cref="IUpstreamDbContext.Files" /> or <see cref="IUpstreamDbContext.Subdirectories" /> table.
</summary>
          <seealso cref="IDbFsItemListItem" />
          <seealso cref="IUpstreamDbFsItemRow" />
          <seealso cref="Local.Model.ILocalDbFsItemListItem" />
        </Documentation>
        <Implements>
          <SimpleBaseType Name="IDbFsItemListItem" />
          <SimpleBaseType Name="IUpstreamDbFsItemRow" />
        </Implements>
      </Interface>
    </Namespace>
  </Source>
  <Source Path="Upstream\Model\IUpstreamDbFsItemListItemWithAncestorNames.cs" Id="1cd784af-5896-43b6-9d17-45597d6fb8df">
    <Using Name="FsInfoCat.Model" />
    <Namespace Name="FsInfoCat.Upstream.Model">
      <Interface Name="IUpstreamDbFsItemListItemWithAncestorNames" Access="public">
        <Documentation>
          <summary>
Generic interface for database view entities derived from the <see cref="IUpstreamDbContext.Files" /> or <see cref="IUpstreamDbContext.Subdirectories" /> table
and also contains path names as well as columns from the volume and file system entities.
</summary>
          <seealso cref="IDbFsItemListItemWithAncestorNames" />
          <seealso cref="IUpstreamDbFsItemListItem" />
          <seealso cref="Local.Model.ILocalDbFsItemListItemWithAncestorNames" />
        </Documentation>
        <Implements>
          <SimpleBaseType Name="IDbFsItemListItemWithAncestorNames" />
          <SimpleBaseType Name="IUpstreamDbFsItemListItem" />
        </Implements>
      </Interface>
    </Namespace>
  </Source>
  <Source Path="Upstream\Model\IUpstreamDbFsItemRow.cs" Id="00d31980-036b-4070-8ae8-f52949cf00dd">
    <Using Name="FsInfoCat.Model" />
    <Namespace Name="FsInfoCat.Upstream.Model">
      <Interface Name="IUpstreamDbFsItemRow" Access="public">
        <Documentation>
          <summary>
Generic interface for a database entity that represents a file system node.
</summary>
          <seealso cref="IUpstreamDbEntity" />
          <seealso cref="IDbFsItemRow" />
          <seealso cref="Local.Model.ILocalDbFsItemRow" />
        </Documentation>
        <Implements>
          <SimpleBaseType Name="IUpstreamDbEntity" />
          <SimpleBaseType Name="IDbFsItemRow" />
        </Implements>
      </Interface>
    </Namespace>
  </Source>
  <Source Path="Upstream\Model\IUpstreamDocumentPropertiesListItem.cs" Id="e15699bd-f5fa-4be2-959f-5817dbe044af">
    <Using Name="FsInfoCat.Model" />
    <Namespace Name="FsInfoCat.Upstream.Model">
      <Interface Name="IUpstreamDocumentPropertiesListItem" Access="public">
        <Documentation>
          <summary>
Generic interface for list item entities containing extended file properties for document files.
</summary>
          <seealso cref="IUpstreamDocumentPropertiesRow" />
          <seealso cref="IUpstreamPropertiesListItem" />
          <seealso cref="IDocumentPropertiesListItem" />
          <seealso cref="Local.Model.ILocalDocumentPropertiesListItem" />
        </Documentation>
        <Implements>
          <SimpleBaseType Name="IUpstreamDocumentPropertiesRow" />
          <SimpleBaseType Name="IUpstreamPropertiesListItem" />
          <SimpleBaseType Name="IDocumentPropertiesListItem" />
        </Implements>
      </Interface>
    </Namespace>
  </Source>
  <Source Path="Upstream\Model\IUpstreamDocumentPropertiesRow.cs" Id="2511a42c-7488-4689-94ff-d147c3e130f1">
    <Using Name="FsInfoCat.Model" />
    <Namespace Name="FsInfoCat.Upstream.Model">
      <Interface Name="IUpstreamDocumentPropertiesRow" Access="public">
        <Documentation>
          <summary>
Generic interface for entities containing extended file properties for document files.
</summary>
          <seealso cref="IUpstreamPropertiesRow" />
          <seealso cref="IDocumentPropertiesRow" />
          <seealso cref="Local.Model.ILocalDocumentPropertiesRow" />
        </Documentation>
        <Implements>
          <SimpleBaseType Name="IUpstreamPropertiesRow" />
          <SimpleBaseType Name="IDocumentPropertiesRow" />
        </Implements>
      </Interface>
    </Namespace>
  </Source>
  <Source Path="Upstream\Model\IUpstreamDocumentPropertySet.cs" Id="16d448ac-a008-42cb-9549-f901750bc39b">
    <Using Name="FsInfoCat.Model" />
    <Using Name="System" />
    <Namespace Name="FsInfoCat.Upstream.Model">
      <Interface Name="IUpstreamDocumentPropertySet" Access="public">
        <Documentation>
          <summary>
Contains extended document file property values.
</summary>
          <seealso cref="IUpstreamDocumentPropertiesRow" />
          <seealso cref="IUpstreamPropertySet" />
          <seealso cref="IDocumentPropertySet" />
          <seealso cref="IEquatable{IUpstreamDocumentPropertySet}" />
          <seealso cref="Local.Model.ILocalDocumentPropertySet" />
        </Documentation>
        <Implements>
          <SimpleBaseType Name="IUpstreamDocumentPropertiesRow" />
          <SimpleBaseType Name="IUpstreamPropertySet" />
          <SimpleBaseType Name="IDocumentPropertySet" />
          <SimpleBaseType>
            <!--TODO: Need <xsl:template match="GenericName" mode="BaseTypes"></xsl:template>-->
          </SimpleBaseType>
        </Implements>
      </Interface>
    </Namespace>
  </Source>
  <Source Path="Upstream\Model\IUpstreamDRMPropertiesListItem.cs" Id="0251a84d-96b1-44cd-beb8-e0b5a1f6f503">
    <Using Name="FsInfoCat.Model" />
    <Namespace Name="FsInfoCat.Upstream.Model">
      <Interface Name="IUpstreamDRMPropertiesListItem" Access="public">
        <Documentation>
          <summary>
Generic interface for list item entities containing extended file DRM information properties.
</summary>
          <seealso cref="IUpstreamDRMPropertiesRow" />
          <seealso cref="IUpstreamPropertiesListItem" />
          <seealso cref="IDRMPropertiesListItem" />
          <seealso cref="Local.Model.ILocalDRMPropertiesListItem" />
        </Documentation>
        <Implements>
          <SimpleBaseType Name="IUpstreamDRMPropertiesRow" />
          <SimpleBaseType Name="IUpstreamPropertiesListItem" />
          <SimpleBaseType Name="IDRMPropertiesListItem" />
        </Implements>
      </Interface>
    </Namespace>
  </Source>
  <Source Path="Upstream\Model\IUpstreamDRMPropertiesRow.cs" Id="308213fc-07db-4631-a3c9-1eb058d87c51">
    <Using Name="FsInfoCat.Model" />
    <Namespace Name="FsInfoCat.Upstream.Model">
      <Interface Name="IUpstreamDRMPropertiesRow" Access="public">
        <Documentation>
          <summary>
Generic interface for entities containing extended file DRM information properties.
</summary>
          <seealso cref="IUpstreamPropertiesRow" />
          <seealso cref="IDRMPropertiesRow" />
          <seealso cref="Local.Model.ILocalDRMPropertiesRow" />
        </Documentation>
        <Implements>
          <SimpleBaseType Name="IUpstreamPropertiesRow" />
          <SimpleBaseType Name="IDRMPropertiesRow" />
        </Implements>
      </Interface>
    </Namespace>
  </Source>
  <Source Path="Upstream\Model\IUpstreamDRMPropertySet.cs" Id="77461773-a2be-4ce9-8455-070eb1d03969">
    <Using Name="FsInfoCat.Model" />
    <Using Name="System" />
    <Namespace Name="FsInfoCat.Upstream.Model">
      <Interface Name="IUpstreamDRMPropertySet" Access="public">
        <Documentation>
          <summary>
Contains extended DRM (Digital Rights Management) property values.
</summary>
          <seealso cref="IUpstreamDRMPropertiesRow" />
          <seealso cref="IUpstreamPropertySet" />
          <seealso cref="IDRMPropertySet" />
          <seealso cref="IEquatable{IUpstreamDRMPropertySet}" />
          <seealso cref="Local.Model.ILocalDRMPropertySet" />
        </Documentation>
        <Implements>
          <SimpleBaseType Name="IUpstreamDRMPropertiesRow" />
          <SimpleBaseType Name="IUpstreamPropertySet" />
          <SimpleBaseType Name="IDRMPropertySet" />
          <SimpleBaseType>
            <!--TODO: Need <xsl:template match="GenericName" mode="BaseTypes"></xsl:template>-->
          </SimpleBaseType>
        </Implements>
      </Interface>
    </Namespace>
  </Source>
  <Source Path="Upstream\Model\IUpstreamFile.cs" Id="06450d25-902e-44fc-87ec-f7cd5b13e7e4">
    <Using Name="FsInfoCat.Model" />
    <Using Name="System" />
    <Using Name="System.Collections.Generic" />
    <Using Name="System.ComponentModel.DataAnnotations" />
    <Namespace Name="FsInfoCat.Upstream.Model">
      <Interface Name="IUpstreamFile" Access="public">
        <Documentation>
          <summary>
Represents a structural instance of file.
</summary>
          <seealso cref="IUpstreamDbFsItem" />
          <seealso cref="IFile" />
          <seealso cref="IUpstreamFileRow" />
          <seealso cref="IEquatable{IUpstreamFile}" />
          <seealso cref="Local.Model.ILocalFile" />
        </Documentation>
        <Implements>
          <SimpleBaseType Name="IUpstreamDbFsItem" />
          <SimpleBaseType Name="IFile" />
          <SimpleBaseType Name="IUpstreamFileRow" />
          <SimpleBaseType>
            <!--TODO: Need <xsl:template match="GenericName" mode="BaseTypes"></xsl:template>-->
          </SimpleBaseType>
        </Implements>
        <Property Name="BinaryProperties">
          <Documentation>
            <summary>
Gets the binary properties for the current file.
</summary>
            <value>The generic <see cref="IUpstreamBinaryPropertySet" /> that contains the file size and optionally, the <see cref="MD5Hash">MD5 hash</see> value of its binary
contents.</value>
          </Documentation>
          <Display Name="DisplayName_BinaryProperties" ShortName="DisplayName_BinaryProperties" Description="DisplayName_BinaryProperties" />
          <Type>
            <Identifier Name="IUpstreamBinaryPropertySet" />
          </Type>
          <!--TODO: Need <xsl:template match="Modifiers" mode="Root"></xsl:template>-->
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="SummaryProperties">
          <Documentation>
            <summary>
Gets the summary properties for the current file.
</summary>
            <value>The generic <see cref="IUpstreamBinaryPropertySet" /> that contains the summary properties for the current file or <see langword="null" /> if no summary
properties are defined on the current file.</value>
          </Documentation>
          <Display Name="DisplayName_SummaryProperties" ShortName="DisplayName_SummaryProperties" Description="DisplayName_SummaryProperties" />
          <Type>
            <Identifier Name="IUpstreamSummaryPropertySet" />
          </Type>
          <!--TODO: Need <xsl:template match="Modifiers" mode="Root"></xsl:template>-->
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="DocumentProperties">
          <Documentation>
            <summary>
Gets the document properties for the current file.
</summary>
            <value>The generic <see cref="IUpstreamDocumentPropertySet" /> that contains the document properties for the current file or <see langword="null" /> if no document
properties are defined on the current file.</value>
          </Documentation>
          <Display Name="DisplayName_DocumentProperties" ShortName="DisplayName_DocumentProperties" Description="DisplayName_DocumentProperties" />
          <Type>
            <Identifier Name="IUpstreamDocumentPropertySet" />
          </Type>
          <!--TODO: Need <xsl:template match="Modifiers" mode="Root"></xsl:template>-->
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="AudioProperties">
          <Documentation>
            <summary>
Gets the audio properties for the current file.
</summary>
            <value>The generic <see cref="IUpstreamAudioPropertySet" /> that contains the audio properties for the current file or <see langword="null" /> if no audio properties
are defined on the current file.</value>
          </Documentation>
          <Display Name="DisplayName_AudioProperties" ShortName="DisplayName_AudioProperties" Description="DisplayName_AudioProperties" />
          <Type>
            <Identifier Name="IUpstreamAudioPropertySet" />
          </Type>
          <!--TODO: Need <xsl:template match="Modifiers" mode="Root"></xsl:template>-->
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="DRMProperties">
          <Documentation>
            <summary>
Gets the DRM properties for the current file.
</summary>
            <value>The generic <see cref="IUpstreamDRMPropertySet" /> that contains the DRM properties for the current file or <see langword="null" /> if no DRM properties are
defined on the current file.</value>
          </Documentation>
          <Display Name="DisplayName_DRMProperties" ShortName="DisplayName_DRMProperties" Description="DisplayName_DRMProperties" />
          <Type>
            <Identifier Name="IUpstreamDRMPropertySet" />
          </Type>
          <!--TODO: Need <xsl:template match="Modifiers" mode="Root"></xsl:template>-->
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="GPSProperties">
          <Documentation>
            <summary>
Gets the GPS properties for the current file.
</summary>
            <value>The generic <see cref="IUpstreamGPSPropertySet" /> that contains the GPS properties for the current file or <see langword="null" /> if no GPS properties are
defined on the current file.</value>
          </Documentation>
          <Display Name="DisplayName_GPSProperties" ShortName="DisplayName_GPSProperties" Description="DisplayName_GPSProperties" />
          <Type>
            <Identifier Name="IUpstreamGPSPropertySet" />
          </Type>
          <!--TODO: Need <xsl:template match="Modifiers" mode="Root"></xsl:template>-->
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="ImageProperties">
          <Documentation>
            <summary>
Gets the image properties for the current file.
</summary>
            <value>The generic <see cref="IUpstreamImagePropertySet" /> that contains the image properties for the current file or <see langword="null" /> if no image properties
are defined on the current file.</value>
          </Documentation>
          <Display Name="DisplayName_ImageProperties" ShortName="DisplayName_ImageProperties" Description="DisplayName_ImageProperties" />
          <Type>
            <Identifier Name="IUpstreamImagePropertySet" />
          </Type>
          <!--TODO: Need <xsl:template match="Modifiers" mode="Root"></xsl:template>-->
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="MediaProperties">
          <Documentation>
            <summary>
Gets the media properties for the current file.
</summary>
            <value>The generic <see cref="IUpstreamMediaPropertySet" /> that contains the media properties for the current file or <see langword="null" /> if no media properties
are defined on the current file.</value>
          </Documentation>
          <Display Name="DisplayName_MediaProperties" ShortName="DisplayName_MediaProperties" Description="DisplayName_MediaProperties" />
          <Type>
            <Identifier Name="IUpstreamMediaPropertySet" />
          </Type>
          <!--TODO: Need <xsl:template match="Modifiers" mode="Root"></xsl:template>-->
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="MusicProperties">
          <Documentation>
            <summary>
Gets the music properties for the current file.
</summary>
            <value>The generic <see cref="IUpstreamMusicPropertySet" /> that contains the music properties for the current file or <see langword="null" /> if no music properties
are defined on the current file.</value>
          </Documentation>
          <Display Name="DisplayName_MusicProperties" ShortName="DisplayName_MusicProperties" Description="DisplayName_MusicProperties" />
          <Type>
            <Identifier Name="IUpstreamMusicPropertySet" />
          </Type>
          <!--TODO: Need <xsl:template match="Modifiers" mode="Root"></xsl:template>-->
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="PhotoProperties">
          <Documentation>
            <summary>
Gets the photo properties for the current file.
</summary>
            <value>The generic <see cref="IUpstreamPhotoPropertySet" /> that contains the photo properties for the current file or <see langword="null" /> if no photo properties
are defined on the current file.</value>
          </Documentation>
          <Display Name="DisplayName_PhotoProperties" ShortName="DisplayName_PhotoProperties" Description="DisplayName_PhotoProperties" />
          <Type>
            <Identifier Name="IUpstreamPhotoPropertySet" />
          </Type>
          <!--TODO: Need <xsl:template match="Modifiers" mode="Root"></xsl:template>-->
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="RecordedTVProperties">
          <Documentation>
            <summary>
Gets the recorded tv properties for the current file.
</summary>
            <value>The generic <see cref="IUpstreamRecordedTVPropertySet" /> that contains the recorded TV properties for the current file or <see langword="null" /> if no
recorded TV properties are defined on the current file.</value>
          </Documentation>
          <Display Name="DisplayName_RecordedTVProperties" ShortName="DisplayName_RecordedTVProperties" Description="DisplayName_RecordedTVProperties" />
          <Type>
            <Identifier Name="IUpstreamRecordedTVPropertySet" />
          </Type>
          <!--TODO: Need <xsl:template match="Modifiers" mode="Root"></xsl:template>-->
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="VideoProperties">
          <Documentation>
            <summary>
Gets the video properties for the current file.
</summary>
            <value>The generic <see cref="IUpstreamVideoPropertySet" /> that contains the video properties for the current file or <see langword="null" /> if no video properties
are defined on the current file.</value>
          </Documentation>
          <Display Name="DisplayName_VideoProperties" ShortName="DisplayName_VideoProperties" Description="DisplayName_VideoProperties" />
          <Type>
            <Identifier Name="IUpstreamVideoPropertySet" />
          </Type>
          <!--TODO: Need <xsl:template match="Modifiers" mode="Root"></xsl:template>-->
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="Redundancy">
          <Documentation>
            <summary>
Gets the redundancy item that indicates the membership of a collection of redundant files.
</summary>
            <value>
An <see cref="IUpstreamRedundancy" /> object that indicates the current file is an exact copy of other files that belong to the
same <see cref="IRedundancy.RedundantSet" />
or <see langword="null" /> if this file has not been identified as being redundant with any other.
</value>
          </Documentation>
          <Display Name="DisplayName_Redundancy" ShortName="DisplayName_Redundancy" Description="DisplayName_Redundancy" />
          <Type>
            <Identifier Name="IUpstreamRedundancy" />
          </Type>
          <!--TODO: Need <xsl:template match="Modifiers" mode="Root"></xsl:template>-->
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="BaselineComparisons">
          <Documentation>
            <summary>
Gets the comparisons where the current file was the <see cref="IComparison.Baseline" />.
</summary>
            <value>The <see cref="IUpstreamComparison" /> entities where the current file is the <see cref="IComparison.Baseline" />.</value>
          </Documentation>
          <Display Name="DisplayName_BaselineComparisons" ShortName="DisplayName_BaselineComparisons" Description="DisplayName_BaselineComparisons" />
          <Type>
            <Generic Name="IEnumerable">
              <Identifier Name="IUpstreamComparison" />
            </Generic>
          </Type>
          <!--TODO: Need <xsl:template match="Modifiers" mode="Root"></xsl:template>-->
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="CorrelativeComparisons">
          <Documentation>
            <summary>
Gets the comparisons where the current file was the <see cref="IComparison.Correlative" /> being compared to a separate <see cref="IComparison.Baseline" /> file.
</summary>
            <value>The <see cref="IUpstreamComparison" /> entities where the current file is the <see cref="IComparison.Correlative" />.</value>
          </Documentation>
          <Display Name="DisplayName_CorrelativeComparisons" ShortName="DisplayName_CorrelativeComparisons" Description="DisplayName_CorrelativeComparisons" />
          <Type>
            <Generic Name="IEnumerable">
              <Identifier Name="IUpstreamComparison" />
            </Generic>
          </Type>
          <!--TODO: Need <xsl:template match="Modifiers" mode="Root"></xsl:template>-->
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="AccessErrors">
          <Documentation>
            <summary>
Gets the access errors for the current file system item.
</summary>
            <value>The access errors for the current file system item.</value>
          </Documentation>
          <Display Name="DisplayName_AccessErrors" ShortName="DisplayName_AccessErrors" Description="DisplayName_AccessErrors" />
          <Type>
            <Generic Name="IEnumerable">
              <Identifier Name="IUpstreamFileAccessError" />
            </Generic>
          </Type>
          <!--TODO: Need <xsl:template match="Modifiers" mode="Root"></xsl:template>-->
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="PersonalTags">
          <Documentation>
            <summary>
Gets the personal tags associated with the current file.
</summary>
            <value>The <see cref="IUpstreamPersonalFileTag" /> entities that associate <see cref="IUpstreamPersonalTagDefinition" /> entities with the current file.</value>
          </Documentation>
          <Display Name="DisplayName_PersonalTags" ShortName="DisplayName_PersonalTags" Description="DisplayName_PersonalTags" />
          <Type>
            <Generic Name="IEnumerable">
              <Identifier Name="IUpstreamPersonalFileTag" />
            </Generic>
          </Type>
          <!--TODO: Need <xsl:template match="Modifiers" mode="Root"></xsl:template>-->
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="SharedTags">
          <Documentation>
            <summary>
Gets the shared tags associated with the current file.
</summary>
            <value>The <see cref="IUpstreamSharedFileTag" /> entities that associate <see cref="IUpstreamSharedTagDefinition" /> entities with the current file.</value>
          </Documentation>
          <Display Name="DisplayName_SharedTags" ShortName="DisplayName_SharedTags" Description="DisplayName_SharedTags" />
          <Type>
            <Generic Name="IEnumerable">
              <Identifier Name="IUpstreamSharedFileTag" />
            </Generic>
          </Type>
          <!--TODO: Need <xsl:template match="Modifiers" mode="Root"></xsl:template>-->
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
      </Interface>
    </Namespace>
  </Source>
  <Source Path="Upstream\Model\IUpstreamFileAccessError.cs" Id="368d36d0-2c4a-41cc-9937-e20e79353712">
    <Using Name="FsInfoCat.Model" />
    <Using Name="System" />
    <Using Name="System.ComponentModel.DataAnnotations" />
    <Namespace Name="FsInfoCat.Upstream.Model">
      <Interface Name="IUpstreamFileAccessError" Access="public">
        <Documentation>
          <summary>
Generic interface for file access error entities.
</summary>
          <seealso cref="IUpstreamAccessError" />
          <seealso cref="IFileAccessError" />
          <seealso cref="Local.Model.ILocalFileAccessError" />
          <seealso cref="IEquatable{IUpstreamFileAccessError}" />
          <seealso cref="IUpstreamFile.AccessErrors" />
          <seealso cref="IUpstreamDbContext.FileAccessErrors" />
        </Documentation>
        <Implements>
          <SimpleBaseType Name="IUpstreamAccessError" />
          <SimpleBaseType Name="IFileAccessError" />
          <SimpleBaseType>
            <!--TODO: Need <xsl:template match="GenericName" mode="BaseTypes"></xsl:template>-->
          </SimpleBaseType>
        </Implements>
        <Property Name="Target">
          <Documentation>
            <summary>
Gets the target file to which the access error applies.
</summary>
            <value>The <see cref="IUpstreamFile" /> entity that this error applies to.</value>
          </Documentation>
          <Display Name="DisplayName_Target" ShortName="DisplayName_Target" Description="DisplayName_Target" />
          <Type>
            <Identifier Name="IUpstreamFile" />
          </Type>
          <!--TODO: Need <xsl:template match="Modifiers" mode="Root"></xsl:template>-->
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
      </Interface>
    </Namespace>
  </Source>
  <Source Path="Upstream\Model\IUpstreamFileListItemWithAncestorNames.cs" Id="9eb71a7d-e439-4b12-aa3e-5a138b735fcd">
    <Using Name="FsInfoCat.Model" />
    <Namespace Name="FsInfoCat.Upstream.Model">
      <Interface Name="IUpstreamFileListItemWithAncestorNames" Access="public">
        <Documentation>
          <summary>
Generic interface for file list item entities which also includes the ancestor subdirectory names.
</summary>
          <seealso cref="IUpstreamDbFsItemListItem" />
          <seealso cref="IFileListItemWithAncestorNames" />
          <seealso cref="IUpstreamFileRow" />
          <seealso cref="Local.Model.ILocalFileListItemWithAncestorNames" />
        </Documentation>
        <Implements>
          <SimpleBaseType Name="IUpstreamDbFsItemListItem" />
          <SimpleBaseType Name="IFileListItemWithAncestorNames" />
          <SimpleBaseType Name="IUpstreamFileRow" />
        </Implements>
      </Interface>
    </Namespace>
  </Source>
  <Source Path="Upstream\Model\IUpstreamFileListItemWithBinaryProperties.cs" Id="43fc6d57-8e3f-4c53-8d15-a832e2f804d1">
    <Using Name="FsInfoCat.Model" />
    <Namespace Name="FsInfoCat.Upstream.Model">
      <Interface Name="IUpstreamFileListItemWithBinaryProperties" Access="public">
        <Documentation>
          <summary>
Generic interface for file list item entities which also includes length and hash information.
</summary>
          <seealso cref="IUpstreamDbFsItemListItem" />
          <seealso cref="IFileListItemWithBinaryProperties" />
          <seealso cref="IUpstreamFileRow" />
          <seealso cref="Local.Model.ILocalFileListItemWithBinaryProperties" />
        </Documentation>
        <Implements>
          <SimpleBaseType Name="IUpstreamDbFsItemListItem" />
          <SimpleBaseType Name="IFileListItemWithBinaryProperties" />
          <SimpleBaseType Name="IUpstreamFileRow" />
        </Implements>
      </Interface>
    </Namespace>
  </Source>
  <Source Path="Upstream\Model\IUpstreamFileListItemWithBinaryPropertiesAndAncestorNames.cs" Id="1fc625a1-0d7d-4ce1-87c6-75ff62366d3c">
    <Using Name="FsInfoCat.Model" />
    <Namespace Name="FsInfoCat.Upstream.Model">
      <Interface Name="IUpstreamFileListItemWithBinaryPropertiesAndAncestorNames" Access="public">
        <Documentation>
          <summary>
Generic interface for file list item entities which also includes length and hash information as well as a delimited listing of parent subdirectory names.
</summary>
          <seealso cref="IFileListItemWithBinaryPropertiesAndAncestorNames" />
          <seealso cref="IUpstreamFileListItemWithAncestorNames" />
          <seealso cref="Local.Model.ILocalFileListItemWithBinaryPropertiesAndAncestorNames" />
        </Documentation>
        <Implements>
          <SimpleBaseType Name="IFileListItemWithBinaryPropertiesAndAncestorNames" />
          <SimpleBaseType Name="IUpstreamFileListItemWithAncestorNames" />
        </Implements>
      </Interface>
    </Namespace>
  </Source>
  <Source Path="Upstream\Model\IUpstreamFileRow.cs" Id="61c9745b-9b4e-4a2b-a620-d3853eda66d2">
    <Using Name="FsInfoCat.Model" />
    <Namespace Name="FsInfoCat.Upstream.Model">
      <Interface Name="IUpstreamFileRow" Access="public">
        <Documentation>
          <summary>
Represents a structural instance of file.
</summary>
          <seealso cref="IUpstreamDbFsItemRow" />
          <seealso cref="IFileRow" />
          <seealso cref="Local.Model.ILocalFileRow" />
        </Documentation>
        <Implements>
          <SimpleBaseType Name="IUpstreamDbFsItemRow" />
          <SimpleBaseType Name="IFileRow" />
        </Implements>
      </Interface>
    </Namespace>
  </Source>
  <Source Path="Upstream\Model\IUpstreamFileSystem.cs" Id="ef8e65cb-f92a-483a-b63d-3f715fbe7c15">
    <Using Name="FsInfoCat.Model" />
    <Using Name="System" />
    <Using Name="System.Collections.Generic" />
    <Using Name="System.ComponentModel.DataAnnotations" />
    <Namespace Name="FsInfoCat.Upstream.Model">
      <Interface Name="IUpstreamFileSystem" Access="public">
        <Documentation>
          <summary>
Interface for entities which represent a specific file system type.
</summary>
          <seealso cref="IUpstreamDbEntity" />
          <seealso cref="IFileSystem" />
          <seealso cref="IEquatable{IUpstreamFileSystem}" />
          <seealso cref="Local.Model.ILocalFileSystem" />
        </Documentation>
        <Implements>
          <SimpleBaseType Name="IUpstreamDbEntity" />
          <SimpleBaseType Name="IFileSystem" />
          <SimpleBaseType>
            <!--TODO: Need <xsl:template match="GenericName" mode="BaseTypes"></xsl:template>-->
          </SimpleBaseType>
        </Implements>
        <Property Name="Volumes">
          <Documentation>
            <summary>
Gets the volumes that share this file system type.
</summary>
            <value>The volumes that share this file system type.</value>
          </Documentation>
          <Display Name="DisplayName_Volumes" ShortName="DisplayName_Volumes" Description="DisplayName_Volumes" />
          <Type>
            <Generic Name="IEnumerable">
              <Identifier Name="IUpstreamVolume" />
            </Generic>
          </Type>
          <!--TODO: Need <xsl:template match="Modifiers" mode="Root"></xsl:template>-->
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="SymbolicNames">
          <Documentation>
            <summary>
Gets the symbolic names for the current file system type.
</summary>
            <value>The symbolic names that are used to identify the current file system type.</value>
          </Documentation>
          <Display Name="DisplayName_SymbolicNames" ShortName="DisplayName_SymbolicNames" Description="DisplayName_SymbolicNames" />
          <Type>
            <Generic Name="IEnumerable">
              <Identifier Name="IUpstreamSymbolicName" />
            </Generic>
          </Type>
          <!--TODO: Need <xsl:template match="Modifiers" mode="Root"></xsl:template>-->
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
      </Interface>
    </Namespace>
  </Source>
  <Source Path="Upstream\Model\IUpstreamFileSystemListItem.cs" Id="7fb6fe2b-80e0-4c23-8b8f-4def6c696b0a">
    <Using Name="FsInfoCat.Model" />
    <Namespace Name="FsInfoCat.Upstream.Model">
      <Interface Name="IUpstreamFileSystemListItem" Access="public">
        <Documentation>
          <summary>
Generic interface for file system list item entities.
</summary>
          <seealso cref="IUpstreamFileSystemRow" />
          <seealso cref="IFileSystemListItem" />
          <seealso cref="Local.Model.ILocalFileSystemListItem" />
        </Documentation>
        <Implements>
          <SimpleBaseType Name="IUpstreamFileSystemRow" />
          <SimpleBaseType Name="IFileSystemListItem" />
        </Implements>
      </Interface>
    </Namespace>
  </Source>
  <Source Path="Upstream\Model\IUpstreamFileSystemRow.cs" Id="626ec7ea-7271-4d81-8136-c080b69502e1">
    <Using Name="FsInfoCat.Model" />
    <Namespace Name="FsInfoCat.Upstream.Model">
      <Interface Name="IUpstreamFileSystemRow" Access="public">
        <Documentation>
          <summary>
Generic interface for file system entities.
</summary>
          <seealso cref="IUpstreamDbEntity" />
          <seealso cref="IFileSystemRow" />
          <seealso cref="Local.Model.ILocalFileSystemRow" />
        </Documentation>
        <Implements>
          <SimpleBaseType Name="IUpstreamDbEntity" />
          <SimpleBaseType Name="IFileSystemRow" />
        </Implements>
      </Interface>
    </Namespace>
  </Source>
  <Source Path="Upstream\Model\IUpstreamFileTag.cs" Id="59803437-18d5-4e13-915e-afb6aa1ad3af">
    <Using Name="FsInfoCat.Model" />
    <Using Name="System" />
    <Namespace Name="FsInfoCat.Upstream.Model">
      <Interface Name="IUpstreamFileTag" Access="public">
        <Documentation>
          <summary>
Generic interface for an <see cref="IUpstreamTagDefinition" /> that is associated with an <see cref="IUpstreamFile" />.
</summary>
          <seealso cref="IUpstreamItemTag" />
          <seealso cref="IFileTag" />
          <seealso cref="IHasMembershipKeyReference{IUpstreamFile, IUpstreamTagDefinition}" />
          <seealso cref="IEquatable{IUpstreamFileTag}" />
          <seealso cref="Local.Model.ILocalFileTag" />
        </Documentation>
        <Implements>
          <SimpleBaseType Name="IUpstreamItemTag" />
          <SimpleBaseType Name="IFileTag" />
          <SimpleBaseType>
            <!--TODO: Need <xsl:template match="GenericName" mode="BaseTypes"></xsl:template>-->
          </SimpleBaseType>
          <SimpleBaseType>
            <!--TODO: Need <xsl:template match="GenericName" mode="BaseTypes"></xsl:template>-->
          </SimpleBaseType>
        </Implements>
        <Property Name="Tagged">
          <Documentation>
            <summary>
Gets the tagged file.
</summary>
            <value>The tagged <see cref="IUpstreamFile" />.</value>
          </Documentation>
          <Type>
            <Identifier Name="IUpstreamFile" />
          </Type>
          <!--TODO: Need <xsl:template match="Modifiers" mode="Root"></xsl:template>-->
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
      </Interface>
    </Namespace>
  </Source>
  <Source Path="Upstream\Model\IUpstreamGPSPropertiesListItem.cs" Id="a0f66c29-7480-4651-a583-bc35526239f6">
    <Using Name="FsInfoCat.Model" />
    <Namespace Name="FsInfoCat.Upstream.Model">
      <Interface Name="IUpstreamGPSPropertiesListItem" Access="public">
        <Documentation>
          <summary>
Generic interface for list item entities containing extended file GPS information properties.
</summary>
          <seealso cref="IUpstreamGPSPropertiesRow" />
          <seealso cref="IUpstreamPropertiesListItem" />
          <seealso cref="IGPSPropertiesListItem" />
          <seealso cref="Local.Model.ILocalGPSPropertiesListItem" />
        </Documentation>
        <Implements>
          <SimpleBaseType Name="IUpstreamGPSPropertiesRow" />
          <SimpleBaseType Name="IUpstreamPropertiesListItem" />
          <SimpleBaseType Name="IGPSPropertiesListItem" />
        </Implements>
      </Interface>
    </Namespace>
  </Source>
  <Source Path="Upstream\Model\IUpstreamGPSPropertiesRow.cs" Id="2dbf3a90-1086-4294-9ded-e37738ba0ad1">
    <Using Name="FsInfoCat.Model" />
    <Namespace Name="FsInfoCat.Upstream.Model">
      <Interface Name="IUpstreamGPSPropertiesRow" Access="public">
        <Documentation>
          <summary>
Generic interface for entities containing extended file GPS information properties.
</summary>
          <seealso cref="IUpstreamPropertiesRow" />
          <seealso cref="IGPSPropertiesRow" />
          <seealso cref="Local.Model.ILocalGPSPropertiesRow" />
        </Documentation>
        <Implements>
          <SimpleBaseType Name="IUpstreamPropertiesRow" />
          <SimpleBaseType Name="IGPSPropertiesRow" />
        </Implements>
      </Interface>
    </Namespace>
  </Source>
  <Source Path="Upstream\Model\IUpstreamGPSPropertySet.cs" Id="c2d91cc3-2e5d-423c-847e-f2ad890a1740">
    <Using Name="FsInfoCat.Model" />
    <Using Name="System" />
    <Namespace Name="FsInfoCat.Upstream.Model">
      <Interface Name="IUpstreamGPSPropertySet" Access="public">
        <Documentation>
          <summary>
Contains extended GPS property values.
</summary>
          <seealso cref="IUpstreamGPSPropertiesRow" />
          <seealso cref="IUpstreamPropertySet" />
          <seealso cref="IGPSPropertySet" />
          <seealso cref="IEquatable{IUpstreamGPSPropertySet}" />
          <seealso cref="Local.Model.ILocalGPSPropertySet" />
        </Documentation>
        <Implements>
          <SimpleBaseType Name="IUpstreamGPSPropertiesRow" />
          <SimpleBaseType Name="IUpstreamPropertySet" />
          <SimpleBaseType Name="IGPSPropertySet" />
          <SimpleBaseType>
            <!--TODO: Need <xsl:template match="GenericName" mode="BaseTypes"></xsl:template>-->
          </SimpleBaseType>
        </Implements>
      </Interface>
    </Namespace>
  </Source>
  <Source Path="Upstream\Model\IUpstreamImagePropertiesListItem.cs" Id="9373ae3a-362d-4427-8571-c05508832102">
    <Using Name="FsInfoCat.Model" />
    <Namespace Name="FsInfoCat.Upstream.Model">
      <Interface Name="IUpstreamImagePropertiesListItem" Access="public">
        <Documentation>
          <summary>
Generic interface for list item entities containing extended file properties for image files.
</summary>
          <seealso cref="IUpstreamImagePropertiesRow" />
          <seealso cref="IUpstreamPropertiesListItem" />
          <seealso cref="IImagePropertiesListItem" />
          <seealso cref="Local.Model.ILocalImagePropertiesListItem" />
        </Documentation>
        <Implements>
          <SimpleBaseType Name="IUpstreamImagePropertiesRow" />
          <SimpleBaseType Name="IUpstreamPropertiesListItem" />
          <SimpleBaseType Name="IImagePropertiesListItem" />
        </Implements>
      </Interface>
    </Namespace>
  </Source>
  <Source Path="Upstream\Model\IUpstreamImagePropertiesRow.cs" Id="8b4a0f0e-feeb-48e2-a293-ebb6cf5c1f56">
    <Using Name="FsInfoCat.Model" />
    <Namespace Name="FsInfoCat.Upstream.Model">
      <Interface Name="IUpstreamImagePropertiesRow" Access="public">
        <Documentation>
          <summary>
Generic interface for entities containing extended file properties for image files.
</summary>
          <seealso cref="IUpstreamPropertiesRow" />
          <seealso cref="IImagePropertiesRow" />
          <seealso cref="Local.Model.ILocalImagePropertiesRow" />
        </Documentation>
        <Implements>
          <SimpleBaseType Name="IUpstreamPropertiesRow" />
          <SimpleBaseType Name="IImagePropertiesRow" />
        </Implements>
      </Interface>
    </Namespace>
  </Source>
  <Source Path="Upstream\Model\IUpstreamImagePropertySet.cs" Id="606b8894-fd1f-4f0d-994f-2a591c90d8f0">
    <Using Name="FsInfoCat.Model" />
    <Using Name="System" />
    <Namespace Name="FsInfoCat.Upstream.Model">
      <Interface Name="IUpstreamImagePropertySet" Access="public">
        <Documentation>
          <summary>
Contains extended image file property values.
</summary>
          <seealso cref="IUpstreamImagePropertiesRow" />
          <seealso cref="IUpstreamPropertySet" />
          <seealso cref="IImagePropertySet" />
          <seealso cref="IEquatable{IUpstreamImagePropertySet}" />
          <seealso cref="Local.Model.ILocalImagePropertySet" />
        </Documentation>
        <Implements>
          <SimpleBaseType Name="IUpstreamImagePropertiesRow" />
          <SimpleBaseType Name="IUpstreamPropertySet" />
          <SimpleBaseType Name="IImagePropertySet" />
          <SimpleBaseType>
            <!--TODO: Need <xsl:template match="GenericName" mode="BaseTypes"></xsl:template>-->
          </SimpleBaseType>
        </Implements>
      </Interface>
    </Namespace>
  </Source>
  <Source Path="Upstream\Model\IUpstreamItemTag.cs" Id="667315df-879f-44be-b4cb-d8340ebd14b7">
    <Using Name="FsInfoCat.Model" />
    <Namespace Name="FsInfoCat.Upstream.Model">
      <Interface Name="IUpstreamItemTag" Access="public">
        <Documentation>
          <summary>
Generic interface for an entity that associates an <see cref="IUpstreamTagDefinition" /> with an <see cref="IUpstreamFile" />, <see cref="IUpstreamSubdirectory" />
or <see cref="IUpstreamVolume" />.
</summary>
          <seealso cref="IUpstreamItemTagRow" />
          <seealso cref="IItemTag" />
          <seealso cref="Local.Model.ILocalItemTag" />
        </Documentation>
        <Implements>
          <SimpleBaseType Name="IUpstreamItemTagRow" />
          <SimpleBaseType Name="IItemTag" />
        </Implements>
        <Property Name="Tagged">
          <Documentation>
            <summary>
Gets the tagged entity.
</summary>
            <value>The entity that is associated with the <see cref="IUpstreamTagDefinition" />.</value>
          </Documentation>
          <Type>
            <Identifier Name="IUpstreamDbEntity" />
          </Type>
          <!--TODO: Need <xsl:template match="Modifiers" mode="Root"></xsl:template>-->
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="Definition">
          <Documentation>
            <summary>
Gets the tag definition.
</summary>
            <value>The tag definition that is associated with the <see cref="IUpstreamDbEntity" />.</value>
          </Documentation>
          <Type>
            <Identifier Name="IUpstreamTagDefinition" />
          </Type>
          <!--TODO: Need <xsl:template match="Modifiers" mode="Root"></xsl:template>-->
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
      </Interface>
    </Namespace>
  </Source>
  <Source Path="Upstream\Model\IUpstreamItemTagListItem.cs" Id="5d282817-c148-4617-8957-2b699b4621fd">
    <Using Name="FsInfoCat.Model" />
    <Namespace Name="FsInfoCat.Upstream.Model">
      <Interface Name="IUpstreamItemTagListItem" Access="public">
        <Documentation>
          <summary>
Generic interface for a list item entity that associates an <see cref="IUpstreamTagDefinition" /> with an <see cref="IUpstreamFile" />, <see cref="IUpstreamSubdirectory" />
or <see cref="IUpstreamVolume" />.
</summary>
          <seealso cref="IItemTagListItem" />
          <seealso cref="IUpstreamItemTagRow" />
          <seealso cref="Local.Model.ILocalItemTagListItem" />
        </Documentation>
        <Implements>
          <SimpleBaseType Name="IItemTagListItem" />
          <SimpleBaseType Name="IUpstreamItemTagRow" />
        </Implements>
      </Interface>
    </Namespace>
  </Source>
  <Source Path="Upstream\Model\IUpstreamItemTagRow.cs" Id="faaddec8-610f-48a1-80c2-0841fd83b4b4">
    <Using Name="FsInfoCat.Model" />
    <Namespace Name="FsInfoCat.Upstream.Model">
      <Interface Name="IUpstreamItemTagRow" Access="public">
        <Documentation>
          <summary>
Generic interface for an entity that associates a <see cref="IUpstreamTagDefinition" /> with an <see cref="IUpstreamFile" />, <see cref="IUpstreamSubdirectory" />
or <see cref="IUpstreamVolume" />.
</summary>
          <seealso cref="IUpstreamDbEntity" />
          <seealso cref="IItemTagRow" />
          <seealso cref="Local.Model.ILocalItemTagRow" />
        </Documentation>
        <Implements>
          <SimpleBaseType Name="IUpstreamDbEntity" />
          <SimpleBaseType Name="IItemTagRow" />
        </Implements>
      </Interface>
    </Namespace>
  </Source>
  <Source Path="Upstream\Model\IUpstreamMediaPropertiesListItem.cs" Id="65fb1fa7-6725-47a8-a5e3-9e020b30624d">
    <Using Name="FsInfoCat.Model" />
    <Namespace Name="FsInfoCat.Upstream.Model">
      <Interface Name="IUpstreamMediaPropertiesListItem" Access="public">
        <Documentation>
          <summary>
Generic interface for list item entities containing extended file properties for media files.
</summary>
          <seealso cref="IUpstreamMediaPropertiesRow" />
          <seealso cref="IUpstreamPropertiesListItem" />
          <seealso cref="IMediaPropertiesListItem" />
          <seealso cref="Local.Model.ILocalMediaPropertiesListItem" />
        </Documentation>
        <Implements>
          <SimpleBaseType Name="IUpstreamMediaPropertiesRow" />
          <SimpleBaseType Name="IUpstreamPropertiesListItem" />
          <SimpleBaseType Name="IMediaPropertiesListItem" />
        </Implements>
      </Interface>
    </Namespace>
  </Source>
  <Source Path="Upstream\Model\IUpstreamMediaPropertiesRow.cs" Id="5d45ccec-0c62-43c2-ba31-f83a4ecf17ea">
    <Using Name="FsInfoCat.Model" />
    <Namespace Name="FsInfoCat.Upstream.Model">
      <Interface Name="IUpstreamMediaPropertiesRow" Access="public">
        <Documentation>
          <summary>
Generic interface for entities containing extended file properties for media files.
</summary>
          <seealso cref="IUpstreamPropertiesRow" />
          <seealso cref="IMediaPropertiesRow" />
          <seealso cref="Local.Model.ILocalMediaPropertiesRow" />
        </Documentation>
        <Implements>
          <SimpleBaseType Name="IUpstreamPropertiesRow" />
          <SimpleBaseType Name="IMediaPropertiesRow" />
        </Implements>
      </Interface>
    </Namespace>
  </Source>
  <Source Path="Upstream\Model\IUpstreamMediaPropertySet.cs" Id="aee12000-3a31-496d-813d-2401fdd6d293">
    <Using Name="FsInfoCat.Model" />
    <Using Name="System" />
    <Namespace Name="FsInfoCat.Upstream.Model">
      <Interface Name="IUpstreamMediaPropertySet" Access="public">
        <Documentation>
          <summary>
Contains extended media file property values.
</summary>
          <seealso cref="IUpstreamMediaPropertiesRow" />
          <seealso cref="IUpstreamPropertySet" />
          <seealso cref="IMediaPropertySet" />
          <seealso cref="IEquatable{IUpstreamMediaPropertySet}" />
          <seealso cref="Local.Model.ILocalMediaPropertySet" />
        </Documentation>
        <Implements>
          <SimpleBaseType Name="IUpstreamMediaPropertiesRow" />
          <SimpleBaseType Name="IUpstreamPropertySet" />
          <SimpleBaseType Name="IMediaPropertySet" />
          <SimpleBaseType>
            <!--TODO: Need <xsl:template match="GenericName" mode="BaseTypes"></xsl:template>-->
          </SimpleBaseType>
        </Implements>
      </Interface>
    </Namespace>
  </Source>
  <Source Path="Upstream\Model\IUpstreamMusicPropertiesListItem.cs" Id="c0e9ba53-1201-435b-85ef-8498992c53c1">
    <Using Name="FsInfoCat.Model" />
    <Namespace Name="FsInfoCat.Upstream.Model">
      <Interface Name="IUpstreamMusicPropertiesListItem" Access="public">
        <Documentation>
          <summary>
Generic interface for list item entities containing extended file properties for music files.
</summary>
          <seealso cref="IUpstreamMusicPropertiesRow" />
          <seealso cref="IUpstreamPropertiesListItem" />
          <seealso cref="IMusicPropertiesListItem" />
          <seealso cref="Local.Model.ILocalMusicPropertiesListItem" />
        </Documentation>
        <Implements>
          <SimpleBaseType Name="IUpstreamMusicPropertiesRow" />
          <SimpleBaseType Name="IUpstreamPropertiesListItem" />
          <SimpleBaseType Name="IMusicPropertiesListItem" />
        </Implements>
      </Interface>
    </Namespace>
  </Source>
  <Source Path="Upstream\Model\IUpstreamMusicPropertiesRow.cs" Id="370f3693-7e46-48d9-beb7-1aa69e3f5aad">
    <Using Name="FsInfoCat.Model" />
    <Namespace Name="FsInfoCat.Upstream.Model">
      <Interface Name="IUpstreamMusicPropertiesRow" Access="public">
        <Documentation>
          <summary>
Generic interface for entities containing extended file properties for music files.
</summary>
          <seealso cref="IUpstreamPropertiesRow" />
          <seealso cref="IMusicPropertiesRow" />
          <seealso cref="Local.Model.ILocalMusicPropertiesRow" />
        </Documentation>
        <Implements>
          <SimpleBaseType Name="IUpstreamPropertiesRow" />
          <SimpleBaseType Name="IMusicPropertiesRow" />
        </Implements>
      </Interface>
    </Namespace>
  </Source>
  <Source Path="Upstream\Model\IUpstreamMusicPropertySet.cs" Id="4b7279ea-2662-414d-9982-536645e8a87a">
    <Using Name="FsInfoCat.Model" />
    <Using Name="System" />
    <Namespace Name="FsInfoCat.Upstream.Model">
      <Interface Name="IUpstreamMusicPropertySet" Access="public">
        <Documentation>
          <summary>
Contains extended music file property values.
</summary>
          <seealso cref="IUpstreamMusicPropertiesRow" />
          <seealso cref="IUpstreamPropertySet" />
          <seealso cref="IMusicPropertySet" />
          <seealso cref="IEquatable{IUpstreamMusicPropertySet}" />
          <seealso cref="Local.Model.ILocalMusicPropertySet" />
        </Documentation>
        <Implements>
          <SimpleBaseType Name="IUpstreamMusicPropertiesRow" />
          <SimpleBaseType Name="IUpstreamPropertySet" />
          <SimpleBaseType Name="IMusicPropertySet" />
          <SimpleBaseType>
            <!--TODO: Need <xsl:template match="GenericName" mode="BaseTypes"></xsl:template>-->
          </SimpleBaseType>
        </Implements>
      </Interface>
    </Namespace>
  </Source>
  <Source Path="Upstream\Model\IUpstreamPersonalFileTag.cs" Id="1e18b1a9-474c-4eab-86c5-55ccb68d6183">
    <Using Name="FsInfoCat.Model" />
    <Using Name="System" />
    <Namespace Name="FsInfoCat.Upstream.Model">
      <Interface Name="IUpstreamPersonalFileTag" Access="public">
        <Documentation>
          <summary>
Generic interface for an <see cref="IUpstreamPersonalTagDefinition" /> that is associated with an <see cref="IUpstreamFile" />.
</summary>
          <seealso cref="IUpstreamPersonalTag" />
          <seealso cref="IPersonalFileTag" />
          <seealso cref="IHasMembershipKeyReference{IUpstreamFile, IUpstreamPersonalTagDefinition}" />
          <seealso cref="IEquatable{IUpstreamPersonalFileTag}" />
          <seealso cref="Local.Model.ILocalPersonalFileTag" />
        </Documentation>
        <Implements>
          <SimpleBaseType Name="IUpstreamPersonalTag" />
          <SimpleBaseType Name="IPersonalFileTag" />
          <SimpleBaseType Name="IUpstreamFileTag" />
          <SimpleBaseType>
            <!--TODO: Need <xsl:template match="GenericName" mode="BaseTypes"></xsl:template>-->
          </SimpleBaseType>
          <SimpleBaseType>
            <!--TODO: Need <xsl:template match="GenericName" mode="BaseTypes"></xsl:template>-->
          </SimpleBaseType>
        </Implements>
      </Interface>
    </Namespace>
  </Source>
  <Source Path="Upstream\Model\IUpstreamPersonalSubdirectoryTag.cs" Id="fd221ae4-a302-4177-be04-638695c091be">
    <Using Name="FsInfoCat.Model" />
    <Using Name="System" />
    <Namespace Name="FsInfoCat.Upstream.Model">
      <Interface Name="IUpstreamPersonalSubdirectoryTag" Access="public">
        <Documentation>
          <summary>
Generic interface for an <see cref="IUpstreamPersonalTagDefinition" /> that is associated with an <see cref="IUpstreamSubdirectory" />.
</summary>
          <seealso cref="IUpstreamPersonalTag" />
          <seealso cref="IPersonalSubdirectoryTag" />
          <seealso cref="IUpstreamSubdirectoryTag" />
          <seealso cref="IHasMembershipKeyReference{IUpstreamSubdirectory, IUpstreamPersonalTagDefinition}" />
          <seealso cref="IEquatable{IUpstreamPersonalSubdirectoryTag}" />
          <seealso cref="Local.Model.ILocalPersonalSubdirectoryTag" />
        </Documentation>
        <Implements>
          <SimpleBaseType Name="IUpstreamPersonalTag" />
          <SimpleBaseType Name="IPersonalSubdirectoryTag" />
          <SimpleBaseType Name="IUpstreamSubdirectoryTag" />
          <SimpleBaseType>
            <!--TODO: Need <xsl:template match="GenericName" mode="BaseTypes"></xsl:template>-->
          </SimpleBaseType>
          <SimpleBaseType>
            <!--TODO: Need <xsl:template match="GenericName" mode="BaseTypes"></xsl:template>-->
          </SimpleBaseType>
        </Implements>
      </Interface>
    </Namespace>
  </Source>
  <Source Path="Upstream\Model\IUpstreamPersonalTag.cs" Id="7ffe2239-2100-4cc7-80ad-41aa760d0e54">
    <Using Name="FsInfoCat.Model" />
    <Namespace Name="FsInfoCat.Upstream.Model">
      <Interface Name="IUpstreamPersonalTag" Access="public">
        <Documentation>
          <summary>
Generic interface for an entity that associates an <see cref="IUpstreamPersonalTagDefinition" /> with an <see cref="IUpstreamFile" />, <see cref="IUpstreamSubdirectory" />
or <see cref="IUpstreamVolume" />.
</summary>
          <seealso cref="IUpstreamItemTag" />
          <seealso cref="IPersonalTag" />
          <seealso cref="Local.Model.ILocalPersonalTag" />
        </Documentation>
        <Implements>
          <SimpleBaseType Name="IUpstreamItemTag" />
          <SimpleBaseType Name="IPersonalTag" />
        </Implements>
        <Property Name="Definition">
          <Documentation>
            <summary>
Gets the personal tag definition.
</summary>
            <value>The personal tag definition that is associated with the <see cref="IUpstreamDbEntity" />.</value>
          </Documentation>
          <Type>
            <Identifier Name="IUpstreamPersonalTagDefinition" />
          </Type>
          <!--TODO: Need <xsl:template match="Modifiers" mode="Root"></xsl:template>-->
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
      </Interface>
    </Namespace>
  </Source>
  <Source Path="Upstream\Model\IUpstreamPersonalTagDefinition.cs" Id="81954ca0-e919-4f52-b3aa-a84eabace580">
    <Using Name="FsInfoCat.Model" />
    <Using Name="System" />
    <Using Name="System.Collections.Generic" />
    <Namespace Name="FsInfoCat.Upstream.Model">
      <Interface Name="IUpstreamPersonalTagDefinition" Access="public">
        <Documentation>
          <summary>
Generic interface for a personal (private) tag list item entity that can be associated with <see cref="IUpstreamFile" />, <see cref="IUpstreamSubdirectory" />
or <see cref="IUpstreamVolume" /> entities.
</summary>
          <seealso cref="IUpstreamTagDefinition" />
          <seealso cref="IPersonalTagDefinition" />
          <seealso cref="IEquatable{IUpstreamPersonalTagDefinition}" />
          <seealso cref="Local.Model.ILocalPersonalTagDefinition" />
        </Documentation>
        <Implements>
          <SimpleBaseType Name="IUpstreamTagDefinition" />
          <SimpleBaseType Name="IPersonalTagDefinition" />
          <SimpleBaseType>
            <!--TODO: Need <xsl:template match="GenericName" mode="BaseTypes"></xsl:template>-->
          </SimpleBaseType>
        </Implements>
        <Property Name="User">
          <Documentation>
            <summary>
Gets the user who owns the tag definition.
</summary>
            <value>The <see cref="IUserProfile" /> entity for the user who owns the tag.</value>
          </Documentation>
          <Type>
            <Identifier Name="IUserProfile" />
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="FileTags">
          <Documentation>
            <summary>
Gets the file tags.
</summary>
            <value>The <see cref="IUpstreamPersonalFileTag" /> entities that associate <see cref="IUpstreamFile" /> entities with the current entity.</value>
          </Documentation>
          <Type>
            <Generic Name="IEnumerable">
              <Identifier Name="IUpstreamPersonalFileTag" />
            </Generic>
          </Type>
          <!--TODO: Need <xsl:template match="Modifiers" mode="Root"></xsl:template>-->
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="SubdirectoryTags">
          <Documentation>
            <summary>
Gets the subdirectory tags.
</summary>
            <value>The <see cref="IUpstreamPersonalSubdirectoryTag" /> entities that associate <see cref="IUpstreamSubdirectory" /> entities with the current entity.</value>
          </Documentation>
          <Type>
            <Generic Name="IEnumerable">
              <Identifier Name="IUpstreamPersonalSubdirectoryTag" />
            </Generic>
          </Type>
          <!--TODO: Need <xsl:template match="Modifiers" mode="Root"></xsl:template>-->
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="VolumeTags">
          <Documentation>
            <summary>
Gets the volume tags.
</summary>
            <value>The <see cref="IUpstreamPersonalVolumeTag" /> entities that associate <see cref="IUpstreamVolume" /> entities with the current entity.</value>
          </Documentation>
          <Type>
            <Generic Name="IEnumerable">
              <Identifier Name="IUpstreamPersonalVolumeTag" />
            </Generic>
          </Type>
          <!--TODO: Need <xsl:template match="Modifiers" mode="Root"></xsl:template>-->
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
      </Interface>
    </Namespace>
  </Source>
  <Source Path="Upstream\Model\IUpstreamPersonalVolumeTag.cs" Id="c2e0b401-c474-47a8-ab33-03e4891fee40">
    <Using Name="FsInfoCat.Model" />
    <Using Name="System" />
    <Namespace Name="FsInfoCat.Upstream.Model">
      <Interface Name="IUpstreamPersonalVolumeTag" Access="public">
        <Documentation>
          <summary>
Generic interface for an <see cref="IUpstreamPersonalTagDefinition" /> that is associated with an <see cref="IUpstreamVolume" />.
</summary>
          <seealso cref="IUpstreamPersonalTag" />
          <seealso cref="IPersonalVolumeTag" />
          <seealso cref="IUpstreamVolumeTag" />
          <seealso cref="IHasMembershipKeyReference{IUpstreamVolume, IUpstreamPersonalTagDefinition}" />
          <seealso cref="IEquatable{IUpstreamPersonalVolumeTag}" />
          <seealso cref="Local.Model.ILocalPersonalVolumeTag" />
        </Documentation>
        <Implements>
          <SimpleBaseType Name="IUpstreamPersonalTag" />
          <SimpleBaseType Name="IPersonalVolumeTag" />
          <SimpleBaseType Name="IUpstreamVolumeTag" />
          <SimpleBaseType>
            <!--TODO: Need <xsl:template match="GenericName" mode="BaseTypes"></xsl:template>-->
          </SimpleBaseType>
          <SimpleBaseType>
            <!--TODO: Need <xsl:template match="GenericName" mode="BaseTypes"></xsl:template>-->
          </SimpleBaseType>
        </Implements>
      </Interface>
    </Namespace>
  </Source>
  <Source Path="Upstream\Model\IUpstreamPhotoPropertiesListItem.cs" Id="5aa4ac78-09f2-4e67-b5f0-c9408a125914">
    <Using Name="FsInfoCat.Model" />
    <Namespace Name="FsInfoCat.Upstream.Model">
      <Interface Name="IUpstreamPhotoPropertiesListItem" Access="public">
        <Documentation>
          <summary>
Generic interface for list item entities containing extended file properties for photo files.
</summary>
          <seealso cref="IUpstreamPhotoPropertiesRow" />
          <seealso cref="IUpstreamPropertiesListItem" />
          <seealso cref="IPhotoPropertiesListItem" />
          <seealso cref="Local.Model.ILocalPhotoPropertiesListItem" />
        </Documentation>
        <Implements>
          <SimpleBaseType Name="IUpstreamPropertiesListItem" />
          <SimpleBaseType Name="IPhotoPropertiesListItem" />
        </Implements>
      </Interface>
    </Namespace>
  </Source>
  <Source Path="Upstream\Model\IUpstreamPhotoPropertiesRow.cs" Id="cc5cc5c4-7532-42c6-8036-0ef96f63e660">
    <Using Name="FsInfoCat.Model" />
    <Namespace Name="FsInfoCat.Upstream.Model">
      <Interface Name="IUpstreamPhotoPropertiesRow" Access="public">
        <Documentation>
          <summary>
Generic interface for entities containing extended file properties for photo files.
</summary>
          <seealso cref="IUpstreamPropertiesRow" />
          <seealso cref="IPhotoPropertiesRow" />
          <seealso cref="Local.Model.ILocalPhotoPropertiesRow" />
        </Documentation>
        <Implements>
          <SimpleBaseType Name="IUpstreamPropertiesRow" />
          <SimpleBaseType Name="IPhotoPropertiesRow" />
        </Implements>
      </Interface>
    </Namespace>
  </Source>
  <Source Path="Upstream\Model\IUpstreamPhotoPropertySet.cs" Id="7c11b413-8280-42a2-8d79-dbf9fb60ad77">
    <Using Name="FsInfoCat.Model" />
    <Using Name="System" />
    <Namespace Name="FsInfoCat.Upstream.Model">
      <Interface Name="IUpstreamPhotoPropertySet" Access="public">
        <Documentation>
          <summary>
Contains extended photo file property values.
</summary>
          <seealso cref="IUpstreamPhotoPropertiesRow" />
          <seealso cref="IUpstreamPropertySet" />
          <seealso cref="IPhotoPropertySet" />
          <seealso cref="IEquatable{IUpstreamPhotoPropertySet}" />
          <seealso cref="Local.Model.ILocalPhotoPropertySet" />
        </Documentation>
        <Implements>
          <SimpleBaseType Name="IUpstreamPhotoPropertiesRow" />
          <SimpleBaseType Name="IUpstreamPropertySet" />
          <SimpleBaseType Name="IPhotoPropertySet" />
          <SimpleBaseType>
            <!--TODO: Need <xsl:template match="GenericName" mode="BaseTypes"></xsl:template>-->
          </SimpleBaseType>
        </Implements>
      </Interface>
    </Namespace>
  </Source>
  <Source Path="Upstream\Model\IUpstreamPropertiesListItem.cs" Id="d0ed1053-46ca-4a9e-8166-15a475ed87f7">
    <Using Name="FsInfoCat.Model" />
    <Namespace Name="FsInfoCat.Upstream.Model">
      <Interface Name="IUpstreamPropertiesListItem" Access="public">
        <Documentation>
          <summary>
Generic interface for list item entities containing extended file properties.
</summary>
          <seealso cref="IUpstreamPropertiesRow" />
          <seealso cref="IPropertiesListItem" />
          <seealso cref="Local.Model.ILocalPropertiesListItem" />
          <seealso cref="IUpstreamAudioPropertiesListItem" />
          <seealso cref="IUpstreamDocumentPropertiesListItem" />
          <seealso cref="IUpstreamDRMPropertiesListItem" />
          <seealso cref="IUpstreamGPSPropertiesListItem" />
          <seealso cref="IUpstreamImagePropertiesListItem" />
          <seealso cref="IUpstreamMediaPropertiesListItem" />
          <seealso cref="IUpstreamMusicPropertiesListItem" />
          <seealso cref="IUpstreamPhotoPropertiesListItem" />
          <seealso cref="IUpstreamRecordedTVPropertiesListItem" />
          <seealso cref="IUpstreamSummaryPropertiesListItem" />
          <seealso cref="IUpstreamVideoPropertiesListItem" />
        </Documentation>
        <Implements>
          <SimpleBaseType Name="IUpstreamPropertiesRow" />
          <SimpleBaseType Name="IPropertiesListItem" />
        </Implements>
      </Interface>
    </Namespace>
  </Source>
  <Source Path="Upstream\Model\IUpstreamPropertiesRow.cs" Id="81a116a8-2069-402f-8920-2a57fb9fc4f3">
    <Using Name="FsInfoCat.Model" />
    <Namespace Name="FsInfoCat.Upstream.Model">
      <Interface Name="IUpstreamPropertiesRow" Access="public">
        <Documentation>
          <summary>
Generic interface for entities containing extended file properties.
</summary>
          <seealso cref="IUpstreamDbEntity" />
          <seealso cref="IPropertiesRow" />
          <seealso cref="Local.Model.ILocalPropertiesRow" />
        </Documentation>
        <Implements>
          <SimpleBaseType Name="IUpstreamDbEntity" />
          <SimpleBaseType Name="IPropertiesRow" />
        </Implements>
      </Interface>
    </Namespace>
  </Source>
  <Source Path="Upstream\Model\IUpstreamPropertySet.cs" Id="a6fa4881-d2eb-4f7d-b1f9-5c8fbea4f31d">
    <Using Name="FsInfoCat.Model" />
    <Using Name="System.Collections.Generic" />
    <Using Name="System.ComponentModel.DataAnnotations" />
    <Namespace Name="FsInfoCat.Upstream.Model">
      <Interface Name="IUpstreamPropertySet" Access="public">
        <Documentation>
          <summary>
Base interface for entities that represent a grouping of extended file properties.
</summary>
          <seealso cref="IUpstreamDbEntity" />
          <seealso cref="IPropertySet" />
          <seealso cref="Local.Model.ILocalPropertySet" />
        </Documentation>
        <Implements>
          <SimpleBaseType Name="IUpstreamDbEntity" />
          <SimpleBaseType Name="IPropertySet" />
        </Implements>
        <Property Name="Files">
          <Documentation>
            <summary>
Gets the files that share the same property values as this property set.
</summary>
            <value>The <see cref="IUpstreamFile">files</see> that share the same property values as this property set.</value>
          </Documentation>
          <Display Name="DisplayName_Files" ShortName="DisplayName_Files" Description="DisplayName_Files" />
          <Type>
            <Generic Name="IEnumerable">
              <Identifier Name="IUpstreamFile" />
            </Generic>
          </Type>
          <!--TODO: Need <xsl:template match="Modifiers" mode="Root"></xsl:template>-->
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
      </Interface>
    </Namespace>
  </Source>
  <Source Path="Upstream\Model\IUpstreamRecordedTVPropertiesListItem.cs" Id="269c486a-4c8d-4e14-82d4-765c303fbdb9">
    <Using Name="FsInfoCat.Model" />
    <Namespace Name="FsInfoCat.Upstream.Model">
      <Interface Name="IUpstreamRecordedTVPropertiesListItem" Access="public">
        <Documentation>
          <summary>
Generic interface for list item entities containing extended file properties for recorded TV files.
</summary>
          <seealso cref="IUpstreamRecordedTVPropertiesRow" />
          <seealso cref="IUpstreamPropertiesListItem" />
          <seealso cref="IRecordedTVPropertiesListItem" />
          <seealso cref="Local.Model.ILocalRecordedTVPropertiesListItem" />
        </Documentation>
        <Implements>
          <SimpleBaseType Name="IUpstreamRecordedTVPropertiesRow" />
          <SimpleBaseType Name="IUpstreamPropertiesListItem" />
          <SimpleBaseType Name="IRecordedTVPropertiesListItem" />
        </Implements>
      </Interface>
    </Namespace>
  </Source>
  <Source Path="Upstream\Model\IUpstreamRecordedTVPropertiesRow.cs" Id="0c70824d-0139-40dd-aeeb-adc699736413">
    <Using Name="FsInfoCat.Model" />
    <Namespace Name="FsInfoCat.Upstream.Model">
      <Interface Name="IUpstreamRecordedTVPropertiesRow" Access="public">
        <Documentation>
          <summary>
Generic interface for entities containing extended file properties for recorded TV files.
</summary>
          <seealso cref="IUpstreamPropertiesRow" />
          <seealso cref="IRecordedTVPropertiesRow" />
          <seealso cref="Local.Model.ILocalRecordedTVPropertiesRow" />
        </Documentation>
        <Implements>
          <SimpleBaseType Name="IUpstreamPropertiesRow" />
          <SimpleBaseType Name="IRecordedTVPropertiesRow" />
        </Implements>
      </Interface>
    </Namespace>
  </Source>
  <Source Path="Upstream\Model\IUpstreamRecordedTVPropertySet.cs" Id="b3a887c3-984a-4cd6-9cf5-416c0ac39963">
    <Using Name="FsInfoCat.Model" />
    <Using Name="System" />
    <Namespace Name="FsInfoCat.Upstream.Model">
      <Interface Name="IUpstreamRecordedTVPropertySet" Access="public">
        <Documentation>
          <summary>
Contains extended recorded TV file property values.
</summary>
          <seealso cref="IUpstreamRecordedTVPropertiesRow" />
          <seealso cref="IUpstreamPropertySet" />
          <seealso cref="IRecordedTVPropertySet" />
          <seealso cref="IEquatable{IUpstreamRecordedTVPropertySet}" />
          <seealso cref="Local.Model.ILocalRecordedTVPropertySet" />
        </Documentation>
        <Implements>
          <SimpleBaseType Name="IUpstreamRecordedTVPropertiesRow" />
          <SimpleBaseType Name="IUpstreamPropertySet" />
          <SimpleBaseType Name="IRecordedTVPropertySet" />
          <SimpleBaseType>
            <!--TODO: Need <xsl:template match="GenericName" mode="BaseTypes"></xsl:template>-->
          </SimpleBaseType>
        </Implements>
      </Interface>
    </Namespace>
  </Source>
  <Source Path="Upstream\Model\IUpstreamRedundancy.cs" Id="5cf6459b-e66e-40ef-a3e4-bd5f724b0f92">
    <Using Name="FsInfoCat.Model" />
    <Using Name="System" />
    <Using Name="System.ComponentModel.DataAnnotations" />
    <Namespace Name="FsInfoCat.Upstream.Model">
      <Interface Name="IUpstreamRedundancy" Access="public">
        <Documentation>
          <summary>
Associates a file with a redundancy set.
</summary>
          <seealso cref="IUpstreamDbEntity" />
          <seealso cref="IRedundancy" />
          <seealso cref="IHasMembershipKeyReference{IUpstreamRedundantSet, IUpstreamFile}" />
          <seealso cref="IEquatable{IUpstreamRecordedTVPropertySet}" />
          <seealso cref="Local.Model.ILocalRedundancy" />
        </Documentation>
        <Implements>
          <SimpleBaseType Name="IUpstreamDbEntity" />
          <SimpleBaseType Name="IRedundancy" />
          <SimpleBaseType>
            <!--TODO: Need <xsl:template match="GenericName" mode="BaseTypes"></xsl:template>-->
          </SimpleBaseType>
          <SimpleBaseType>
            <!--TODO: Need <xsl:template match="GenericName" mode="BaseTypes"></xsl:template>-->
          </SimpleBaseType>
        </Implements>
        <Property Name="File">
          <Documentation>
            <summary>
Gets the file that belongs to the redundancy set.
</summary>
            <value>The file that belongs to the redundancy set.</value>
          </Documentation>
          <Display Name="DisplayName_File" ShortName="DisplayName_File" Description="DisplayName_File" />
          <Type>
            <Identifier Name="IUpstreamFile" />
          </Type>
          <!--TODO: Need <xsl:template match="Modifiers" mode="Root"></xsl:template>-->
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="RedundantSet">
          <Documentation>
            <summary>
Gets the redundancy set.
</summary>
            <value>The redundancy set.</value>
          </Documentation>
          <Display Name="DisplayName_RedundantSet" ShortName="DisplayName_RedundantSet" Description="DisplayName_RedundantSet" />
          <Type>
            <Identifier Name="IUpstreamRedundantSet" />
          </Type>
          <!--TODO: Need <xsl:template match="Modifiers" mode="Root"></xsl:template>-->
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
      </Interface>
    </Namespace>
  </Source>
  <Source Path="Upstream\Model\IUpstreamRedundantSet.cs" Id="8095c4e7-a0b5-4070-b8ff-4ea26860c6ec">
    <Using Name="FsInfoCat.Model" />
    <Using Name="System" />
    <Using Name="System.Collections.Generic" />
    <Using Name="System.ComponentModel.DataAnnotations" />
    <Namespace Name="FsInfoCat.Upstream.Model">
      <Interface Name="IUpstreamRedundantSet" Access="public">
        <Documentation>
          <summary>
Represents a set of files that have the same size, Hash and remediation status.
</summary>
          <seealso cref="IUpstreamRedundantSetRow" />
          <seealso cref="IRedundantSet" />
          <seealso cref="IEquatable{IUpstreamRedundantSet}" />
          <seealso cref="Local.Model.ILocalRedundantSet" />
        </Documentation>
        <Implements>
          <SimpleBaseType Name="IUpstreamRedundantSetRow" />
          <SimpleBaseType Name="IRedundantSet" />
          <SimpleBaseType>
            <!--TODO: Need <xsl:template match="GenericName" mode="BaseTypes"></xsl:template>-->
          </SimpleBaseType>
        </Implements>
        <Property Name="BinaryProperties">
          <Documentation>
            <summary>
Gets the binary properties in common with all files in the current redundant set.
</summary>
            <value>The binary properties in common with all files in the current redundant set.</value>
          </Documentation>
          <Display Name="DisplayName_BinaryProperties" ShortName="DisplayName_BinaryProperties" Description="DisplayName_BinaryProperties" />
          <Type>
            <Identifier Name="IUpstreamBinaryPropertySet" />
          </Type>
          <!--TODO: Need <xsl:template match="Modifiers" mode="Root"></xsl:template>-->
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="Redundancies">
          <Documentation>
            <summary>
Gets the redundancy entities which represent links to redundant files.
</summary>
            <value>The redundancy entities which represent links to redundant files.</value>
          </Documentation>
          <Display Name="DisplayName_Redundancies" ShortName="DisplayName_Redundancies" Description="DisplayName_Redundancies" />
          <Type>
            <Generic Name="IEnumerable">
              <Identifier Name="IUpstreamRedundancy" />
            </Generic>
          </Type>
          <!--TODO: Need <xsl:template match="Modifiers" mode="Root"></xsl:template>-->
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
      </Interface>
    </Namespace>
  </Source>
  <Source Path="Upstream\Model\IUpstreamRedundantSetListItem.cs" Id="4ae9824d-61af-4846-aa11-867cf9957df7">
    <Using Name="FsInfoCat.Model" />
    <Namespace Name="FsInfoCat.Upstream.Model">
      <Interface Name="IUpstreamRedundantSetListItem" Access="public">
        <Documentation>
          <summary>
Represents a listing item for set of files that have the same size, Hash and remediation status.
</summary>
          <seealso cref="IRedundantSetListItem" />
          <seealso cref="IUpstreamRedundantSetRow" />
          <seealso cref="Local.Model.ILocalRedundantSetListItem" />
        </Documentation>
        <Implements>
          <SimpleBaseType Name="IRedundantSetListItem" />
          <SimpleBaseType Name="IUpstreamRedundantSetRow" />
        </Implements>
      </Interface>
    </Namespace>
  </Source>
  <Source Path="Upstream\Model\IUpstreamRedundantSetRow.cs" Id="c645f7b4-2206-4de8-bd2d-3bd08fe9072f">
    <Using Name="FsInfoCat.Model" />
    <Namespace Name="FsInfoCat.Upstream.Model">
      <Interface Name="IUpstreamRedundantSetRow" Access="public">
        <Documentation>
          <summary>
Generic interface for an entity representing set of files that have the same size, Hash and remediation status.
</summary>
          <seealso cref="IUpstreamDbEntity" />
          <seealso cref="IRedundantSetRow" />
          <seealso cref="Local.Model.ILocalRedundantSetRow" />
        </Documentation>
        <Implements>
          <SimpleBaseType Name="IUpstreamDbEntity" />
          <SimpleBaseType Name="IRedundantSetRow" />
        </Implements>
      </Interface>
    </Namespace>
  </Source>
  <Source Path="Upstream\Model\IUpstreamSharedFileTag.cs" Id="282c8e77-9b02-456b-ab65-e09f3015438b">
    <Using Name="FsInfoCat.Model" />
    <Using Name="System" />
    <Namespace Name="FsInfoCat.Upstream.Model">
      <Interface Name="IUpstreamSharedFileTag" Access="public">
        <Documentation>
          <summary>
Generic interface for an <see cref="IUpstreamSharedTagDefinition" /> that is associated with an <see cref="IUpstreamFile" />.
</summary>
          <seealso cref="IUpstreamSharedTag" />
          <seealso cref="ISharedFileTag" />
          <seealso cref="IUpstreamFileTag" />
          <seealso cref="IHasMembershipKeyReference{IUpstreamFile, IUpstreamSharedTagDefinition}" />
          <seealso cref="IEquatable{IUpstreamSharedFileTag}" />
          <seealso cref="Local.Model.ILocalSharedFileTag" />
        </Documentation>
        <Implements>
          <SimpleBaseType Name="IUpstreamSharedTag" />
          <SimpleBaseType Name="ISharedFileTag" />
          <SimpleBaseType Name="IUpstreamFileTag" />
          <SimpleBaseType>
            <!--TODO: Need <xsl:template match="GenericName" mode="BaseTypes"></xsl:template>-->
          </SimpleBaseType>
          <SimpleBaseType>
            <!--TODO: Need <xsl:template match="GenericName" mode="BaseTypes"></xsl:template>-->
          </SimpleBaseType>
        </Implements>
      </Interface>
    </Namespace>
  </Source>
  <Source Path="Upstream\Model\IUpstreamSharedSubdirectoryTag.cs" Id="2328417b-62fd-44c3-9a7e-8d7086815af5">
    <Using Name="FsInfoCat.Model" />
    <Using Name="System" />
    <Namespace Name="FsInfoCat.Upstream.Model">
      <Interface Name="IUpstreamSharedSubdirectoryTag" Access="public">
        <Documentation>
          <summary>
Generic interface for an <see cref="IUpstreamSharedTagDefinition" /> that is associated with an <see cref="IUpstreamSubdirectory" />.
</summary>
          <seealso cref="IUpstreamSharedTag" />
          <seealso cref="ISharedSubdirectoryTag" />
          <seealso cref="IUpstreamSubdirectoryTag" />
          <seealso cref="IHasMembershipKeyReference{IUpstreamSubdirectory, IUpstreamSharedTagDefinition}" />
          <seealso cref="IEquatable{IUpstreamSharedSubdirectoryTag}" />
          <seealso cref="Local.Model.ILocalSharedSubdirectoryTag" />
        </Documentation>
        <Implements>
          <SimpleBaseType Name="IUpstreamSharedTag" />
          <SimpleBaseType Name="ISharedSubdirectoryTag" />
          <SimpleBaseType Name="IUpstreamSubdirectoryTag" />
          <SimpleBaseType>
            <!--TODO: Need <xsl:template match="GenericName" mode="BaseTypes"></xsl:template>-->
          </SimpleBaseType>
          <SimpleBaseType>
            <!--TODO: Need <xsl:template match="GenericName" mode="BaseTypes"></xsl:template>-->
          </SimpleBaseType>
        </Implements>
      </Interface>
    </Namespace>
  </Source>
  <Source Path="Upstream\Model\IUpstreamSharedTag.cs" Id="3e77224b-54fc-4830-bb41-f039a266e930">
    <Using Name="FsInfoCat.Model" />
    <Namespace Name="FsInfoCat.Upstream.Model">
      <Interface Name="IUpstreamSharedTag" Access="public">
        <Documentation>
          <summary>
Generic interface for an entity that associates an <see cref="IUpstreamSharedTagDefinition" /> with an <see cref="IUpstreamFile" />, <see cref="IUpstreamSubdirectory" />
or <see cref="IUpstreamVolume" />.
</summary>
          <seealso cref="IUpstreamItemTag" />
          <seealso cref="ISharedTag" />
          <seealso cref="Local.Model.ILocalSharedTag" />
        </Documentation>
        <Implements>
          <SimpleBaseType Name="IUpstreamItemTag" />
          <SimpleBaseType Name="ISharedTag" />
        </Implements>
        <Property Name="Definition">
          <Documentation>
            <summary>
Gets the tag definition.
</summary>
            <value>The tag definition that is associated with the <see cref="IUpstreamDbEntity" />.</value>
          </Documentation>
          <Type>
            <Identifier Name="IUpstreamSharedTagDefinition" />
          </Type>
          <!--TODO: Need <xsl:template match="Modifiers" mode="Root"></xsl:template>-->
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
      </Interface>
    </Namespace>
  </Source>
  <Source Path="Upstream\Model\IUpstreamSharedTagDefinition.cs" Id="c664a8b7-2d79-41b4-b165-2ae9f58683fd">
    <Using Name="FsInfoCat.Model" />
    <Using Name="System" />
    <Using Name="System.Collections.Generic" />
    <Namespace Name="FsInfoCat.Upstream.Model">
      <Interface Name="IUpstreamSharedTagDefinition" Access="public">
        <Documentation>
          <summary>
Generic interface for a shared tag list item entity that can be associated with <see cref="IUpstreamFile" />, <see cref="IUpstreamSubdirectory" />
or <see cref="IUpstreamVolume" /> entities.
</summary>
          <seealso cref="IUpstreamTagDefinition" />
          <seealso cref="ISharedTagDefinition" />
          <seealso cref="IEquatable{IUpstreamSharedTagDefinition}" />
          <seealso cref="Local.Model.ILocalSharedTagDefinition" />
        </Documentation>
        <Implements>
          <SimpleBaseType Name="IUpstreamTagDefinition" />
          <SimpleBaseType Name="ISharedTagDefinition" />
          <SimpleBaseType>
            <!--TODO: Need <xsl:template match="GenericName" mode="BaseTypes"></xsl:template>-->
          </SimpleBaseType>
        </Implements>
        <Property Name="FileTags">
          <Documentation>
            <summary>
Gets the file tags.
</summary>
            <value>The <see cref="IUpstreamSharedFileTag" /> entities that associate <see cref="IUpstreamFile" /> entities with the current entity.</value>
          </Documentation>
          <Type>
            <Generic Name="IEnumerable">
              <Identifier Name="IUpstreamSharedFileTag" />
            </Generic>
          </Type>
          <!--TODO: Need <xsl:template match="Modifiers" mode="Root"></xsl:template>-->
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="SubdirectoryTags">
          <Documentation>
            <summary>
Gets the subdirectory tags.
</summary>
            <value>The <see cref="IUpstreamSharedSubdirectoryTag" /> entities that associate <see cref="IUpstreamSubdirectory" /> entities with the current entity.</value>
          </Documentation>
          <Type>
            <Generic Name="IEnumerable">
              <Identifier Name="IUpstreamSharedSubdirectoryTag" />
            </Generic>
          </Type>
          <!--TODO: Need <xsl:template match="Modifiers" mode="Root"></xsl:template>-->
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="VolumeTags">
          <Documentation>
            <summary>
Gets the volume tags.
</summary>
            <value>The <see cref="IUpstreamSharedVolumeTag" /> entities that associate <see cref="IUpstreamVolume" /> entities with the current entity.</value>
          </Documentation>
          <Type>
            <Generic Name="IEnumerable">
              <Identifier Name="IUpstreamSharedVolumeTag" />
            </Generic>
          </Type>
          <!--TODO: Need <xsl:template match="Modifiers" mode="Root"></xsl:template>-->
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
      </Interface>
    </Namespace>
  </Source>
  <Source Path="Upstream\Model\IUpstreamSharedVolumeTag.cs" Id="3a57feb4-3778-4edd-8620-17809ab9e00a">
    <Using Name="FsInfoCat.Model" />
    <Using Name="System" />
    <Namespace Name="FsInfoCat.Upstream.Model">
      <Interface Name="IUpstreamSharedVolumeTag" Access="public">
        <Documentation>
          <summary>
Generic interface for an <see cref="IUpstreamSharedTagDefinition" /> that is associated with an <see cref="IUpstreamVolume" />.
</summary>
          <seealso cref="IUpstreamSharedTag" />
          <seealso cref="ISharedVolumeTag" />
          <seealso cref="IUpstreamVolumeTag" />
          <seealso cref="IHasMembershipKeyReference{IUpstreamVolume, IUpstreamSharedTagDefinition}" />
          <seealso cref="IEquatable{IUpstreamSharedVolumeTag}" />
          <seealso cref="Local.Model.ILocalSharedVolumeTag" />
        </Documentation>
        <Implements>
          <SimpleBaseType Name="IUpstreamSharedTag" />
          <SimpleBaseType Name="ISharedVolumeTag" />
          <SimpleBaseType Name="IUpstreamVolumeTag" />
          <SimpleBaseType>
            <!--TODO: Need <xsl:template match="GenericName" mode="BaseTypes"></xsl:template>-->
          </SimpleBaseType>
          <SimpleBaseType>
            <!--TODO: Need <xsl:template match="GenericName" mode="BaseTypes"></xsl:template>-->
          </SimpleBaseType>
        </Implements>
      </Interface>
    </Namespace>
  </Source>
  <Source Path="Upstream\Model\IUpstreamSubdirectory.cs" Id="892d790d-f801-43f3-bd48-18d632a0b2f2">
    <Using Name="FsInfoCat.Model" />
    <Using Name="System" />
    <Using Name="System.Collections.Generic" />
    <Using Name="System.ComponentModel.DataAnnotations" />
    <Namespace Name="FsInfoCat.Upstream.Model">
      <Interface Name="IUpstreamSubdirectory" Access="public">
        <Documentation>
          <summary>
Interface for entities that represent a subdirectory node within a file system.
</summary>
          <seealso cref="IUpstreamDbFsItem" />
          <seealso cref="ISubdirectory" />
          <seealso cref="IEquatable{IUpstreamSubdirectory}" />
          <seealso cref="Local.Model.ILocalSubdirectory" />
        </Documentation>
        <Implements>
          <SimpleBaseType Name="IUpstreamDbFsItem" />
          <SimpleBaseType Name="ISubdirectory" />
          <SimpleBaseType>
            <!--TODO: Need <xsl:template match="GenericName" mode="BaseTypes"></xsl:template>-->
          </SimpleBaseType>
        </Implements>
        <Property Name="Volume">
          <Documentation>
            <summary>
Gets the parent volume.
</summary>
            <value>The parent volume (if this is the root subdirectory or <see langword="null" /> if this is a subdirectory.</value>
            <remarks>If this is <see langword="null" />, then <see cref="IUpstreamDbFsItem.Parent" /> should not be null, and vice-versa.</remarks>
          </Documentation>
          <Display Name="DisplayName_Volume" ShortName="DisplayName_Volume" Description="DisplayName_Volume" />
          <Type>
            <Identifier Name="IUpstreamVolume" />
          </Type>
          <!--TODO: Need <xsl:template match="Modifiers" mode="Root"></xsl:template>-->
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="CrawlConfiguration">
          <Documentation>
            <summary>
Gets the crawl configuration that starts with the current subdirectory.
</summary>
            <value>The crawl configuration that starts with the current subdirectory.</value>
          </Documentation>
          <Display Name="DisplayName_CrawlConfiguration" ShortName="DisplayName_CrawlConfiguration" Description="DisplayName_CrawlConfiguration" />
          <Type>
            <Identifier Name="IUpstreamCrawlConfiguration" />
          </Type>
          <!--TODO: Need <xsl:template match="Modifiers" mode="Root"></xsl:template>-->
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="Files">
          <Documentation>
            <summary>
Gets the files directly contained within this subdirectory.
</summary>
            <value>The files directly contained within this subdirectory.</value>
          </Documentation>
          <Display Name="DisplayName_Files" ShortName="DisplayName_Files" Description="DisplayName_Files" />
          <Type>
            <Generic Name="IEnumerable">
              <Identifier Name="IUpstreamFile" />
            </Generic>
          </Type>
          <!--TODO: Need <xsl:template match="Modifiers" mode="Root"></xsl:template>-->
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="SubDirectories">
          <Documentation>
            <summary>
Gets the nested subdirectories directly contained within this subdirectory.
</summary>
            <value>The nested subdirectories directly contained within this subdirectory.</value>
          </Documentation>
          <Display Name="DisplayName_SubDirectories" ShortName="DisplayName_SubDirectories" Description="DisplayName_SubDirectories" />
          <Type>
            <Generic Name="IEnumerable">
              <Identifier Name="IUpstreamSubdirectory" />
            </Generic>
          </Type>
          <!--TODO: Need <xsl:template match="Modifiers" mode="Root"></xsl:template>-->
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="AccessErrors">
          <Documentation>
            <summary>
Gets the access errors for the current file system item.
</summary>
            <value>The access errors for the current file system item.</value>
          </Documentation>
          <Display Name="DisplayName_AccessErrors" ShortName="DisplayName_AccessErrors" Description="DisplayName_AccessErrors" />
          <Type>
            <Generic Name="IEnumerable">
              <Identifier Name="IUpstreamSubdirectoryAccessError" />
            </Generic>
          </Type>
          <!--TODO: Need <xsl:template match="Modifiers" mode="Root"></xsl:template>-->
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="PersonalTags">
          <Documentation>
            <summary>
Gets the personal tags associated with the current subdirectory.
</summary>
            <value>The <see cref="IUpstreamPersonalSubdirectoryTag" /> entities that associate <see cref="IUpstreamPersonalTagDefinition" /> entities with the current
subdirectory.</value>
          </Documentation>
          <Type>
            <Generic Name="IEnumerable">
              <Identifier Name="IUpstreamPersonalSubdirectoryTag" />
            </Generic>
          </Type>
          <!--TODO: Need <xsl:template match="Modifiers" mode="Root"></xsl:template>-->
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="SharedTags">
          <Documentation>
            <summary>
Gets the shared tags associated with the current subdirectory.
</summary>
            <value>The <see cref="IUpstreamSharedSubdirectoryTag" /> entities that associate <see cref="IUpstreamSharedTagDefinition" /> entities with the current
subdirectory.</value>
          </Documentation>
          <Type>
            <Generic Name="IEnumerable">
              <Identifier Name="IUpstreamSharedSubdirectoryTag" />
            </Generic>
          </Type>
          <!--TODO: Need <xsl:template match="Modifiers" mode="Root"></xsl:template>-->
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
      </Interface>
    </Namespace>
  </Source>
  <Source Path="Upstream\Model\IUpstreamSubdirectoryAccessError.cs" Id="c46b1deb-4e62-4aca-b796-536bb759f34a">
    <Using Name="FsInfoCat.Model" />
    <Using Name="System" />
    <Using Name="System.ComponentModel.DataAnnotations" />
    <Namespace Name="FsInfoCat.Upstream.Model">
      <Interface Name="IUpstreamSubdirectoryAccessError" Access="public">
        <Documentation>
          <summary>
Generic interface for subdirectory access error entities.
</summary>
          <seealso cref="IUpstreamAccessError" />
          <seealso cref="ISubdirectoryAccessError" />
          <seealso cref="Local.Model.ILocalSubdirectoryAccessError" />
          <seealso cref="IUpstreamSubdirectory.AccessErrors" />
          <seealso cref="IEquatable{IUpstreamSubdirectoryAccessError}" />
          <seealso cref="IUpstreamSubdirectory.AccessErrors" />
          <seealso cref="IUpstreamDbContext.SubdirectoryAccessErrors" />
        </Documentation>
        <Implements>
          <SimpleBaseType Name="IUpstreamAccessError" />
          <SimpleBaseType Name="ISubdirectoryAccessError" />
          <SimpleBaseType>
            <!--TODO: Need <xsl:template match="GenericName" mode="BaseTypes"></xsl:template>-->
          </SimpleBaseType>
        </Implements>
        <Property Name="Target">
          <Documentation>
            <summary>
Gets the target subdirectory to which the access error applies.
</summary>
            <value>The <see cref="IUpstreamSubdirectory" /> entity that this error applies to.</value>
          </Documentation>
          <Display Name="DisplayName_Target" ShortName="DisplayName_Target" Description="DisplayName_Target" />
          <Type>
            <Identifier Name="IUpstreamSubdirectory" />
          </Type>
          <!--TODO: Need <xsl:template match="Modifiers" mode="Root"></xsl:template>-->
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
      </Interface>
    </Namespace>
  </Source>
  <Source Path="Upstream\Model\IUpstreamSubdirectoryListItem.cs" Id="d116ec89-7384-4705-b2d8-7879bfa8d1c4">
    <Using Name="FsInfoCat.Model" />
    <Namespace Name="FsInfoCat.Upstream.Model">
      <Interface Name="IUpstreamSubdirectoryListItem" Access="public">
        <Documentation>
          <summary>
Generic interface for a database list item entity that represents a subdirectory.
</summary>
          <seealso cref="ISubdirectoryListItem" />
          <seealso cref="IUpstreamSubdirectoryRow" />
          <seealso cref="Local.Model.ILocalSubdirectoryListItem" />
        </Documentation>
        <Implements>
          <SimpleBaseType Name="ISubdirectoryListItem" />
          <SimpleBaseType Name="IUpstreamSubdirectoryRow" />
        </Implements>
      </Interface>
    </Namespace>
  </Source>
  <Source Path="Upstream\Model\IUpstreamSubdirectoryListItemWithAncestorNames.cs" Id="99e42841-2087-4e49-b625-2a320b0df63d">
    <Using Name="FsInfoCat.Model" />
    <Namespace Name="FsInfoCat.Upstream.Model">
      <Interface Name="IUpstreamSubdirectoryListItemWithAncestorNames" Access="public">
        <Documentation>
          <summary>
Generic interface for a database list item entity that represents a subdirectory and contains the names of the ancestor subdirectories.
</summary>
          <seealso cref="ISubdirectoryListItemWithAncestorNames" />
          <seealso cref="IUpstreamSubdirectoryRow" />
          <seealso cref="Local.Model.ILocalSubdirectoryListItemWithAncestorNames" />
        </Documentation>
        <Implements>
          <SimpleBaseType Name="ISubdirectoryListItemWithAncestorNames" />
          <SimpleBaseType Name="IUpstreamSubdirectoryRow" />
        </Implements>
      </Interface>
    </Namespace>
  </Source>
  <Source Path="Upstream\Model\IUpstreamSubdirectoryRow.cs" Id="73af4a1b-9833-4ce0-98fb-c4d75c5069c3">
    <Using Name="FsInfoCat.Model" />
    <Namespace Name="FsInfoCat.Upstream.Model">
      <Interface Name="IUpstreamSubdirectoryRow" Access="public">
        <Documentation>
          <summary>
Generic interface for a database entity that represents a subdirectory.
</summary>
          <seealso cref="IUpstreamDbFsItemRow" />
          <seealso cref="ISubdirectoryRow" />
          <seealso cref="Local.Model.ILocalSubdirectoryRow" />
        </Documentation>
        <Implements>
          <SimpleBaseType Name="IUpstreamDbFsItemRow" />
          <SimpleBaseType Name="ISubdirectoryRow" />
        </Implements>
      </Interface>
    </Namespace>
  </Source>
  <Source Path="Upstream\Model\IUpstreamSubdirectoryTag.cs" Id="40e6ea01-487c-4f93-a890-16a669409436">
    <Using Name="FsInfoCat.Model" />
    <Using Name="System" />
    <Namespace Name="FsInfoCat.Upstream.Model">
      <Interface Name="IUpstreamSubdirectoryTag" Access="public">
        <Documentation>
          <summary>
Interface IUpstreamSubdirectoryTag
</summary>
          <seealso cref="IUpstreamItemTag" />
          <seealso cref="ISubdirectoryTag" />
          <seealso cref="IHasMembershipKeyReference{IUpstreamSubdirectory, IUpstreamTagDefinition}" />
          <seealso cref="IEquatable{IUpstreamSubdirectoryTag}" />
          <seealso cref="Local.Model.ILocalSubdirectoryTag" />
        </Documentation>
        <Implements>
          <SimpleBaseType Name="IUpstreamItemTag" />
          <SimpleBaseType Name="ISubdirectoryTag" />
          <SimpleBaseType>
            <!--TODO: Need <xsl:template match="GenericName" mode="BaseTypes"></xsl:template>-->
          </SimpleBaseType>
          <SimpleBaseType>
            <!--TODO: Need <xsl:template match="GenericName" mode="BaseTypes"></xsl:template>-->
          </SimpleBaseType>
        </Implements>
        <Property Name="Tagged">
          <Documentation>
            <summary>
Gets the tagged subdirectory.
</summary>
            <value>The tagged <see cref="IUpstreamSubdirectory" />.</value>
          </Documentation>
          <Type>
            <Identifier Name="IUpstreamSubdirectory" />
          </Type>
          <!--TODO: Need <xsl:template match="Modifiers" mode="Root"></xsl:template>-->
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
      </Interface>
    </Namespace>
  </Source>
  <Source Path="Upstream\Model\IUpstreamSummaryPropertiesListItem.cs" Id="40f40fcb-12e6-4814-960f-2791ddc7b688">
    <Using Name="FsInfoCat.Model" />
    <Namespace Name="FsInfoCat.Upstream.Model">
      <Interface Name="IUpstreamSummaryPropertiesListItem" Access="public">
        <Documentation>
          <summary>
Generic interface for entities containing extended file summary properties.
</summary>
          <seealso cref="IUpstreamSummaryPropertiesRow" />
          <seealso cref="IUpstreamPropertiesListItem" />
          <seealso cref="ISummaryPropertiesListItem" />
          <seealso cref="Local.Model.ILocalSummaryPropertiesListItem" />
        </Documentation>
        <Implements>
          <SimpleBaseType Name="IUpstreamSummaryPropertiesRow" />
          <SimpleBaseType Name="IUpstreamPropertiesListItem" />
          <SimpleBaseType Name="ISummaryPropertiesListItem" />
        </Implements>
      </Interface>
    </Namespace>
  </Source>
  <Source Path="Upstream\Model\IUpstreamSummaryPropertiesRow.cs" Id="2ad5dcdb-bcfb-42c4-a491-23a0add1c977">
    <Using Name="FsInfoCat.Model" />
    <Namespace Name="FsInfoCat.Upstream.Model">
      <Interface Name="IUpstreamSummaryPropertiesRow" Access="public">
        <Documentation>
          <summary>
Generic interface for entities containing extended file summary properties.
</summary>
          <seealso cref="IUpstreamPropertiesRow" />
          <seealso cref="ISummaryPropertiesRow" />
          <seealso cref="Local.Model.ILocalSummaryPropertiesRow" />
        </Documentation>
        <Implements>
          <SimpleBaseType Name="IUpstreamPropertiesRow" />
          <SimpleBaseType Name="ISummaryPropertiesRow" />
        </Implements>
      </Interface>
    </Namespace>
  </Source>
  <Source Path="Upstream\Model\IUpstreamSummaryPropertySet.cs" Id="7605d12e-fbff-4640-83fd-674d2454f36b">
    <Using Name="FsInfoCat.Model" />
    <Using Name="System" />
    <Namespace Name="FsInfoCat.Upstream.Model">
      <Interface Name="IUpstreamSummaryPropertySet" Access="public">
        <Documentation>
          <summary>
Contains extended summary file property values.
</summary>
          <seealso cref="IUpstreamSummaryPropertiesRow" />
          <seealso cref="IUpstreamPropertySet" />
          <seealso cref="ISummaryPropertySet" />
          <seealso cref="IEquatable{IUpstreamSummaryPropertySet}" />
          <seealso cref="Local.Model.ILocalSummaryPropertySet" />
        </Documentation>
        <Implements>
          <SimpleBaseType Name="IUpstreamSummaryPropertiesRow" />
          <SimpleBaseType Name="IUpstreamPropertySet" />
          <SimpleBaseType Name="ISummaryPropertySet" />
          <SimpleBaseType>
            <!--TODO: Need <xsl:template match="GenericName" mode="BaseTypes"></xsl:template>-->
          </SimpleBaseType>
        </Implements>
      </Interface>
    </Namespace>
  </Source>
  <Source Path="Upstream\Model\IUpstreamSymbolicName.cs" Id="578128a4-1856-4c58-94bc-a269239789be">
    <Using Name="FsInfoCat.Model" />
    <Using Name="System" />
    <Using Name="System.ComponentModel.DataAnnotations" />
    <Namespace Name="FsInfoCat.Upstream.Model">
      <Interface Name="IUpstreamSymbolicName" Access="public">
        <Documentation>
          <summary>
Interface for entities that represent a symbolic name for a file system type.
</summary>
          <seealso cref="ISymbolicName" />
          <seealso cref="IEquatable{IUpstreamSymbolicName}" />
          <seealso cref="Local.Model.ILocalSymbolicName" />
        </Documentation>
        <Implements>
          <SimpleBaseType Name="IUpstreamSymbolicNameRow" />
          <SimpleBaseType Name="ISymbolicName" />
          <SimpleBaseType>
            <!--TODO: Need <xsl:template match="GenericName" mode="BaseTypes"></xsl:template>-->
          </SimpleBaseType>
        </Implements>
        <Property Name="FileSystem">
          <Documentation>
            <summary>
Gets the file system that this symbolic name refers to.
</summary>
            <value>The file system entity that represents the file system type that this symbolic name refers to.</value>
          </Documentation>
          <Display Name="DisplayName_FileSystem" ShortName="DisplayName_FileSystem" Description="DisplayName_FileSystem" />
          <Type>
            <Identifier Name="IUpstreamFileSystem" />
          </Type>
          <!--TODO: Need <xsl:template match="Modifiers" mode="Root"></xsl:template>-->
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
      </Interface>
    </Namespace>
  </Source>
  <Source Path="Upstream\Model\IUpstreamSymbolicNameListItem.cs" Id="5633a3af-8f79-4890-8a2e-7f69a00e0f4f">
    <Using Name="FsInfoCat.Model" />
    <Namespace Name="FsInfoCat.Upstream.Model">
      <Interface Name="IUpstreamSymbolicNameListItem" Access="public">
        <Documentation>
          <summary>
Interface for list item entities that represent a symbolic name for a file system type.
</summary>
          <seealso cref="IUpstreamSymbolicNameRow" />
          <seealso cref="ISymbolicNameListItem" />
          <seealso cref="Local.Model.ILocalSymbolicNameListItem" />
        </Documentation>
        <Implements>
          <SimpleBaseType Name="IUpstreamSymbolicNameRow" />
          <SimpleBaseType Name="ISymbolicNameListItem" />
        </Implements>
      </Interface>
    </Namespace>
  </Source>
  <Source Path="Upstream\Model\IUpstreamSymbolicNameRow.cs" Id="6d0914b7-2fc8-4811-ba98-65f21fbc84d6">
    <Using Name="FsInfoCat.Model" />
    <Namespace Name="FsInfoCat.Upstream.Model">
      <Interface Name="IUpstreamSymbolicNameRow" Access="public">
        <Documentation>
          <summary>
Generic interface for  that represent a symbolic name for a file system type.
</summary>
          <seealso cref="IUpstreamDbEntity" />
          <seealso cref="ISymbolicNameRow" />
          <seealso cref="Local.Model.ILocalSymbolicNameRow" />
        </Documentation>
        <Implements>
          <SimpleBaseType Name="IUpstreamDbEntity" />
          <SimpleBaseType Name="ISymbolicNameRow" />
        </Implements>
      </Interface>
    </Namespace>
  </Source>
  <Source Path="Upstream\Model\IUpstreamTagDefinition.cs" Id="5d14cce2-f1df-4519-9779-7dd9ef1fb574">
    <Using Name="FsInfoCat.Model" />
    <Using Name="System" />
    <Using Name="System.Collections.Generic" />
    <Namespace Name="FsInfoCat.Upstream.Model">
      <Interface Name="IUpstreamTagDefinition" Access="public">
        <Documentation>
          <summary>
Generic interface for a tag entity that can be associated with <see cref="IUpstreamFile" />, <see cref="IUpstreamSubdirectory" /> or <see cref="IUpstreamVolume" /> entities.
</summary>
          <seealso cref="IUpstreamTagDefinitionRow" />
          <seealso cref="ITagDefinition" />
          <seealso cref="IEquatable{IUpstreamTagDefinition}" />
          <seealso cref="Local.Model.ILocalTagDefinition" />
        </Documentation>
        <Implements>
          <SimpleBaseType Name="IUpstreamTagDefinitionRow" />
          <SimpleBaseType Name="ITagDefinition" />
          <SimpleBaseType>
            <!--TODO: Need <xsl:template match="GenericName" mode="BaseTypes"></xsl:template>-->
          </SimpleBaseType>
        </Implements>
        <Property Name="FileTags">
          <Documentation>
            <summary>
Gets the file tags.
</summary>
            <value>The <see cref="IUpstreamFileTag" /> entities that associate <see cref="IUpstreamFile" /> entities with the current entity.</value>
          </Documentation>
          <Type>
            <Generic Name="IEnumerable">
              <Identifier Name="IUpstreamFileTag" />
            </Generic>
          </Type>
          <!--TODO: Need <xsl:template match="Modifiers" mode="Root"></xsl:template>-->
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="SubdirectoryTags">
          <Documentation>
            <summary>
Gets the subdirectory tags.
</summary>
            <value>The <see cref="IUpstreamSubdirectoryTag" /> entities that associate <see cref="IUpstreamSubdirectory" /> entities with the current entity.</value>
          </Documentation>
          <Type>
            <Generic Name="IEnumerable">
              <Identifier Name="IUpstreamSubdirectoryTag" />
            </Generic>
          </Type>
          <!--TODO: Need <xsl:template match="Modifiers" mode="Root"></xsl:template>-->
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="VolumeTags">
          <Documentation>
            <summary>
Gets the volume tags.
</summary>
            <value>The <see cref="IUpstreamVolumeTag" /> entities that associate <see cref="IUpstreamVolume" /> entities with the current entity.</value>
          </Documentation>
          <Type>
            <Generic Name="IEnumerable">
              <Identifier Name="IUpstreamVolumeTag" />
            </Generic>
          </Type>
          <!--TODO: Need <xsl:template match="Modifiers" mode="Root"></xsl:template>-->
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
      </Interface>
    </Namespace>
  </Source>
  <Source Path="Upstream\Model\IUpstreamTagDefinitionListItem.cs" Id="bfafa2d0-3798-4bc4-90eb-48ff3f3547e3">
    <Using Name="FsInfoCat.Model" />
    <Namespace Name="FsInfoCat.Upstream.Model">
      <Interface Name="IUpstreamTagDefinitionListItem" Access="public">
        <Documentation>
          <summary>
Generic interface for a tag list item entity that can be associated with <see cref="IUpstreamFile" />, <see cref="IUpstreamSubdirectory" /> or
<see cref="IUpstreamVolume" /> entities.
</summary>
          <seealso cref="ITagDefinitionListItem" />
          <seealso cref="IUpstreamTagDefinitionRow" />
          <seealso cref="Local.Model.ILocalTagDefinitionListItem" />
        </Documentation>
        <Implements>
          <SimpleBaseType Name="ITagDefinitionListItem" />
          <SimpleBaseType Name="IUpstreamTagDefinitionRow" />
        </Implements>
      </Interface>
    </Namespace>
  </Source>
  <Source Path="Upstream\Model\IUpstreamTagDefinitionRow.cs" Id="d0ca0200-317a-410b-9ca7-63f616ba27ca">
    <Using Name="FsInfoCat.Model" />
    <Namespace Name="FsInfoCat.Upstream.Model">
      <Interface Name="IUpstreamTagDefinitionRow" Access="public">
        <Documentation>
          <summary>
Generic interface for a tag entity that can be associated with <see cref="IUpstreamFile" />, <see cref="IUpstreamSubdirectory" /> or <see cref="IUpstreamVolume" /> entities.
</summary>
          <seealso cref="IUpstreamDbEntity" />
          <seealso cref="ITagDefinitionRow" />
          <seealso cref="Local.Model.ILocalTagDefinitionRow" />
        </Documentation>
        <Implements>
          <SimpleBaseType Name="IUpstreamDbEntity" />
          <SimpleBaseType Name="ITagDefinitionRow" />
        </Implements>
      </Interface>
    </Namespace>
  </Source>
  <Source Path="Upstream\Model\IUpstreamVideoPropertiesListItem.cs" Id="c219a0e3-dce2-465e-8c2a-68dc9878c14e">
    <Using Name="FsInfoCat.Model" />
    <Namespace Name="FsInfoCat.Upstream.Model">
      <Interface Name="IUpstreamVideoPropertiesListItem" Access="public">
        <Documentation>
          <summary>
Generic interface for list item entities containing extended file properties for video files.
</summary>
          <seealso cref="IUpstreamVideoPropertiesRow" />
          <seealso cref="IUpstreamPropertiesListItem" />
          <seealso cref="IVideoPropertiesListItem" />
          <seealso cref="Local.Model.ILocalVideoPropertiesListItem" />
        </Documentation>
        <Implements>
          <SimpleBaseType Name="IUpstreamVideoPropertiesRow" />
          <SimpleBaseType Name="IUpstreamPropertiesListItem" />
          <SimpleBaseType Name="IVideoPropertiesListItem" />
        </Implements>
      </Interface>
    </Namespace>
  </Source>
  <Source Path="Upstream\Model\IUpstreamVideoPropertiesRow.cs" Id="970e1dd1-836e-4d0d-a781-95ac35032e15">
    <Using Name="FsInfoCat.Model" />
    <Namespace Name="FsInfoCat.Upstream.Model">
      <Interface Name="IUpstreamVideoPropertiesRow" Access="public">
        <Documentation>
          <summary>
Generic interface for entities containing extended file properties for video files.
</summary>
          <seealso cref="IUpstreamPropertiesRow" />
          <seealso cref="IVideoPropertiesRow" />
          <seealso cref="Local.Model.ILocalVideoPropertiesRow" />
        </Documentation>
        <Implements>
          <SimpleBaseType Name="IUpstreamPropertiesRow" />
          <SimpleBaseType Name="IVideoPropertiesRow" />
        </Implements>
      </Interface>
    </Namespace>
  </Source>
  <Source Path="Upstream\Model\IUpstreamVideoPropertySet.cs" Id="21f196d0-c834-468f-b102-a1b2122d8552">
    <Using Name="FsInfoCat.Model" />
    <Using Name="System" />
    <Namespace Name="FsInfoCat.Upstream.Model">
      <Interface Name="IUpstreamVideoPropertySet" Access="public">
        <Documentation>
          <summary>
Contains extended video file property values.
</summary>
          <seealso cref="IUpstreamVideoPropertiesRow" />
          <seealso cref="IUpstreamPropertySet" />
          <seealso cref="IVideoPropertySet" />
          <seealso cref="IEquatable{IUpstreamVideoPropertySet}" />
          <seealso cref="Local.Model.ILocalVideoPropertySet" />
        </Documentation>
        <Implements>
          <SimpleBaseType Name="IUpstreamVideoPropertiesRow" />
          <SimpleBaseType Name="IUpstreamPropertySet" />
          <SimpleBaseType Name="IVideoPropertySet" />
          <SimpleBaseType>
            <!--TODO: Need <xsl:template match="GenericName" mode="BaseTypes"></xsl:template>-->
          </SimpleBaseType>
        </Implements>
      </Interface>
    </Namespace>
  </Source>
  <Source Path="Upstream\Model\IUpstreamVolume.cs" Id="815ce6d6-97c3-4546-8b3e-0f92d6aa274f">
    <Using Name="FsInfoCat.Model" />
    <Using Name="System" />
    <Using Name="System.Collections.Generic" />
    <Using Name="System.ComponentModel.DataAnnotations" />
    <Namespace Name="FsInfoCat.Upstream.Model">
      <Interface Name="IUpstreamVolume" Access="public">
        <Documentation>
          <summary>
Interface for entities which represent a logical file system volume.
</summary>
          <seealso cref="IVolume" />
          <seealso cref="IEquatable{IUpstreamVolume}" />
          <seealso cref="Local.Model.ILocalVolume" />
        </Documentation>
        <Implements>
          <SimpleBaseType Name="IUpstreamVolumeRow" />
          <SimpleBaseType Name="IVolume" />
          <SimpleBaseType>
            <!--TODO: Need <xsl:template match="GenericName" mode="BaseTypes"></xsl:template>-->
          </SimpleBaseType>
        </Implements>
        <Property Name="HostDevice">
          <Documentation>
            <summary>
Gets the device that hosts the current volume.
</summary>
            <value>The device that hosts the current volume.</value>
          </Documentation>
          <Display Name="DisplayName_HostDevice" ShortName="DisplayName_HostDevice" Description="DisplayName_HostDevice" />
          <Type>
            <Identifier Name="IHostDevice" />
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="RootDirectory">
          <Documentation>
            <summary>
Gets the root directory of this volume.
</summary>
            <value>The root directory of this volume.</value>
          </Documentation>
          <Display Name="DisplayName_RootDirectory" ShortName="DisplayName_RootDirectory" Description="DisplayName_RootDirectory" />
          <Type>
            <Identifier Name="IUpstreamSubdirectory" />
          </Type>
          <!--TODO: Need <xsl:template match="Modifiers" mode="Root"></xsl:template>-->
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="FileSystem">
          <Documentation>
            <summary>
Gets the file system type.
</summary>
            <value>The file system type for this volume.</value>
          </Documentation>
          <Display Name="DisplayName_FileSystem" ShortName="DisplayName_FileSystem" Description="DisplayName_FileSystem" />
          <Type>
            <Identifier Name="IUpstreamFileSystem" />
          </Type>
          <!--TODO: Need <xsl:template match="Modifiers" mode="Root"></xsl:template>-->
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="AccessErrors">
          <Documentation>
            <summary>
Gets the access errors for the current file system item.
</summary>
            <value>The access errors for the current file system item.</value>
          </Documentation>
          <Display Name="DisplayName_AccessErrors" ShortName="DisplayName_AccessErrors" Description="DisplayName_AccessErrors" />
          <Type>
            <Generic Name="IEnumerable">
              <Identifier Name="IUpstreamVolumeAccessError" />
            </Generic>
          </Type>
          <!--TODO: Need <xsl:template match="Modifiers" mode="Root"></xsl:template>-->
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="PersonalTags">
          <Type>
            <Generic Name="IEnumerable">
              <Identifier Name="IUpstreamPersonalVolumeTag" />
            </Generic>
          </Type>
          <!--TODO: Need <xsl:template match="Modifiers" mode="Root"></xsl:template>-->
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="SharedTags">
          <Type>
            <Generic Name="IEnumerable">
              <Identifier Name="IUpstreamSharedVolumeTag" />
            </Generic>
          </Type>
          <!--TODO: Need <xsl:template match="Modifiers" mode="Root"></xsl:template>-->
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
      </Interface>
    </Namespace>
  </Source>
  <Source Path="Upstream\Model\IUpstreamVolumeAccessError.cs" Id="7dbc93fc-5f69-438f-9dd5-f00d736202da">
    <Using Name="FsInfoCat.Model" />
    <Using Name="System" />
    <Using Name="System.ComponentModel.DataAnnotations" />
    <Namespace Name="FsInfoCat.Upstream.Model">
      <Interface Name="IUpstreamVolumeAccessError" Access="public">
        <Documentation>
          <summary>
Generic interface for volume access error entities.
</summary>
          <seealso cref="IUpstreamAccessError" />
          <seealso cref="IVolumeAccessError" />
          <seealso cref="Local.Model.ILocalVolumeAccessError" />
          <seealso cref="IEquatable{IUpstreamVolumeAccessError}" />
          <seealso cref="IUpstreamVolume.AccessErrors" />
          <seealso cref="IUpstreamDbContext.VolumeAccessErrors" />
        </Documentation>
        <Implements>
          <SimpleBaseType Name="IUpstreamAccessError" />
          <SimpleBaseType Name="IVolumeAccessError" />
          <SimpleBaseType>
            <!--TODO: Need <xsl:template match="GenericName" mode="BaseTypes"></xsl:template>-->
          </SimpleBaseType>
        </Implements>
        <Property Name="Target">
          <Documentation>
            <summary>
Gets the target volume to which the access error applies.
</summary>
            <value>The <see cref="IUpstreamVolume" /> entity that this error applies to.</value>
          </Documentation>
          <Display Name="DisplayName_Target" ShortName="DisplayName_Target" Description="DisplayName_Target" />
          <Type>
            <Identifier Name="IUpstreamVolume" />
          </Type>
          <!--TODO: Need <xsl:template match="Modifiers" mode="Root"></xsl:template>-->
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
      </Interface>
    </Namespace>
  </Source>
  <Source Path="Upstream\Model\IUpstreamVolumeListItem.cs" Id="868fafd8-88d2-4802-82fa-d854423dfa34">
    <Using Name="FsInfoCat.Model" />
    <Namespace Name="FsInfoCat.Upstream.Model">
      <Interface Name="IUpstreamVolumeListItem" Access="public">
        <Documentation>
          <summary>
Generic interface for list item entities which represent a logical file system volume.
</summary>
          <seealso cref="IUpstreamVolumeRow" />
          <seealso cref="IVolumeListItem" />
          <seealso cref="Local.Model.ILocalVolumeListItem" />
        </Documentation>
        <Implements>
          <SimpleBaseType Name="IUpstreamVolumeRow" />
          <SimpleBaseType Name="IVolumeListItem" />
        </Implements>
      </Interface>
    </Namespace>
  </Source>
  <Source Path="Upstream\Model\IUpstreamVolumeListItemWithFileSystem.cs" Id="0adad83c-5784-497b-9886-1673fc5afb81">
    <Using Name="FsInfoCat.Model" />
    <Namespace Name="FsInfoCat.Upstream.Model">
      <Interface Name="IUpstreamVolumeListItemWithFileSystem" Access="public">
        <Documentation>
          <summary>
Generic interface for list item entities which represent a logical file system volume and contains associated file system properties.
</summary>
          <seealso cref="IUpstreamVolumeListItem" />
          <seealso cref="IVolumeListItemWithFileSystem" />
          <seealso cref="Local.Model.ILocalVolumeListItemWithFileSystem" />
        </Documentation>
        <Implements>
          <SimpleBaseType Name="IUpstreamVolumeListItem" />
          <SimpleBaseType Name="IVolumeListItemWithFileSystem" />
        </Implements>
      </Interface>
    </Namespace>
  </Source>
  <Source Path="Upstream\Model\IUpstreamVolumeRow.cs" Id="283c444c-e8a9-4ebb-ab8a-eef009a2f527">
    <Using Name="FsInfoCat.Model" />
    <Namespace Name="FsInfoCat.Upstream.Model">
      <Interface Name="IUpstreamVolumeRow" Access="public">
        <Documentation>
          <summary>
Generic interface for entities which represent a logical file system volume.
</summary>
          <seealso cref="IUpstreamDbEntity" />
          <seealso cref="IVolumeRow" />
          <seealso cref="Local.Model.ILocalVolumeRow" />
        </Documentation>
        <Implements>
          <SimpleBaseType Name="IUpstreamDbEntity" />
          <SimpleBaseType Name="IVolumeRow" />
        </Implements>
      </Interface>
    </Namespace>
  </Source>
  <Source Path="Upstream\Model\IUpstreamVolumeTag.cs" Id="6e1b56b0-10dc-44e5-a646-9dc2efc85a02">
    <Using Name="FsInfoCat.Model" />
    <Using Name="System" />
    <Namespace Name="FsInfoCat.Upstream.Model">
      <Interface Name="IUpstreamVolumeTag" Access="public">
        <Documentation>
          <summary>
Generic interface for an <see cref="IUpstreamTagDefinition" /> that is associated with an <see cref="IUpstreamVolume" />.
</summary>
          <seealso cref="IUpstreamItemTag" />
          <seealso cref="IVolumeTag" />
          <seealso cref="IHasMembershipKeyReference{IUpstreamVolume, IUpstreamTagDefinition}" />
          <seealso cref="Local.Model.ILocalVolumeTag" />
        </Documentation>
        <Implements>
          <SimpleBaseType Name="IUpstreamItemTag" />
          <SimpleBaseType Name="IVolumeTag" />
          <SimpleBaseType>
            <!--TODO: Need <xsl:template match="GenericName" mode="BaseTypes"></xsl:template>-->
          </SimpleBaseType>
          <SimpleBaseType>
            <!--TODO: Need <xsl:template match="GenericName" mode="BaseTypes"></xsl:template>-->
          </SimpleBaseType>
        </Implements>
        <Property Name="Tagged">
          <Documentation>
            <summary>
Gets the tagged volume.
</summary>
            <value>The tagged <see cref="IUpstreamVolume" />.</value>
          </Documentation>
          <Type>
            <Identifier Name="IUpstreamVolume" />
          </Type>
          <!--TODO: Need <xsl:template match="Modifiers" mode="Root"></xsl:template>-->
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
      </Interface>
    </Namespace>
  </Source>
  <Source Path="Upstream\Model\IUserGroup.cs" Id="c1345f89-0d30-4f0b-80ca-6c3428f6db3c">
    <Using Name="System" />
    <Using Name="System.Collections.Generic" />
    <Using Name="System.ComponentModel.DataAnnotations" />
    <Namespace Name="FsInfoCat.Upstream.Model">
      <Interface Name="IUserGroup" Access="public">
        <Documentation>
          <seealso cref="IEquatable{IUserGroup}" />
        </Documentation>
        <Implements>
          <SimpleBaseType Name="IUserGroupRow" />
          <SimpleBaseType>
            <!--TODO: Need <xsl:template match="GenericName" mode="BaseTypes"></xsl:template>-->
          </SimpleBaseType>
        </Implements>
        <Property Name="Members">
          <Documentation>
            <summary>
Gets the group membership.
</summary>
            <value>An <see cref="IGroupMembership" /> record that defines a user's membership with a specific group.</value>
          </Documentation>
          <Display Name="DisplayName_Members" ShortName="DisplayName_Members" Description="DisplayName_Members" />
          <Type>
            <Generic Name="IEnumerable">
              <Identifier Name="IGroupMembership" />
            </Generic>
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="Tasks">
          <Documentation>
            <summary>
Gets mitigation tasks for the curent group.
</summary>
            <value>Mitigation tasks that have been assigned to the current group.</value>
          </Documentation>
          <Display Name="DisplayName_Tasks" ShortName="DisplayName_Tasks" Description="DisplayName_Tasks" />
          <Type>
            <Generic Name="IEnumerable">
              <Identifier Name="IMitigationTask" />
            </Generic>
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
      </Interface>
    </Namespace>
  </Source>
  <Source Path="Upstream\Model\IUserGroupListItem.cs" Id="c2588ebf-cf31-409f-8ee2-263c48294c49">
    <Namespace Name="FsInfoCat.Upstream.Model">
      <Interface Name="IUserGroupListItem" Access="public">
        <Implements>
          <SimpleBaseType Name="IUserGroupRow" />
        </Implements>
        <Property Name="MemberCount">
          <Type>
            <PredefinedType Keyword="long" />
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="TaskCount">
          <Type>
            <PredefinedType Keyword="long" />
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
      </Interface>
    </Namespace>
  </Source>
  <Source Path="Upstream\Model\IUserGroupRow.cs" Id="3114cd75-4584-4342-85a1-765ce6e660f8">
    <Using Name="System.ComponentModel.DataAnnotations" />
    <Namespace Name="FsInfoCat.Upstream.Model">
      <Interface Name="IUserGroupRow" Access="public">
        <Implements>
          <SimpleBaseType Name="IUpstreamDbEntity" />
        </Implements>
        <Property Name="Name">
          <Documentation>
            <summary>
Gets the group's name.
</summary>
            <value>The name of the group.</value>
          </Documentation>
          <Display Name="DisplayName_Name" ShortName="DisplayName_Name" Description="DisplayName_Name" />
          <Type>
            <PredefinedType Keyword="string" />
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="Roles">
          <Documentation>
            <summary>
Gets roles for the current group.
</summary>
            <value>The <see cref="UserRole">roles</see> that are assigned to all members of the group.</value>
          </Documentation>
          <Display Name="DisplayName_Roles" ShortName="DisplayName_Roles" Description="DisplayName_Roles" />
          <Type>
            <Identifier Name="UserRole" />
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="Notes">
          <Documentation>
            <summary>
Gets notes for the current group.
</summary>
            <value>The custom notes to be associated with the current group.</value>
          </Documentation>
          <Display Name="DisplayName_Notes" ShortName="DisplayName_Notes" Description="DisplayName_Notes" />
          <Type>
            <PredefinedType Keyword="string" />
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="IsInactive">
          <Documentation>
            <summary>
Indicates whether the current group record is inactive.
</summary>
            <value>
                      <see langword="true" /> if the current group record is inactive (archived); otherwise, <see langword="false" /> if it is active.</value>
          </Documentation>
          <Display Name="DisplayName_IsInactive" ShortName="DisplayName_IsInactive" Description="DisplayName_IsInactive" />
          <Type>
            <PredefinedType Keyword="bool" />
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
      </Interface>
    </Namespace>
  </Source>
  <Source Path="Upstream\Model\IUserProfile.cs" Id="585996db-aa35-4fb7-9789-c3921087bd50">
    <Using Name="System" />
    <Using Name="System.Collections.Generic" />
    <Using Name="System.ComponentModel.DataAnnotations" />
    <Namespace Name="FsInfoCat.Upstream.Model">
      <Interface Name="IUserProfile" Access="public">
        <Documentation>
          <summary>
Base interface for user profile database entities.
</summary>
          <seealso cref="IUserProfileRow" />
          <seealso cref="IEquatable{IUserProfile}" />
        </Documentation>
        <Implements>
          <SimpleBaseType Name="IUserProfileRow" />
          <SimpleBaseType>
            <!--TODO: Need <xsl:template match="GenericName" mode="BaseTypes"></xsl:template>-->
          </SimpleBaseType>
        </Implements>
        <Property Name="MemberOf">
          <Documentation>
            <summary>
Gets the membership objects that determine what groups the current user belongs to.
</summary>
            <value>The <see cref="IGroupMembership">membership objects</see> that determine what groups the current user belongs to.</value>
          </Documentation>
          <Display Name="DisplayName_MemberOf" ShortName="DisplayName_MemberOf" Description="DisplayName_MemberOf" />
          <Type>
            <Generic Name="IEnumerable">
              <Identifier Name="IGroupMembership" />
            </Generic>
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="Tasks">
          <Documentation>
            <summary>
Gets the tasks that are assigned to the current user.
</summary>
            <value>The <see cref="IMitigationTask">tasks</see> that are assigned to the current user.</value>
          </Documentation>
          <Display Name="DisplayName_Tasks" ShortName="DisplayName_Tasks" Description="DisplayName_Tasks" />
          <Type>
            <Generic Name="IEnumerable">
              <Identifier Name="IMitigationTask" />
            </Generic>
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
      </Interface>
    </Namespace>
  </Source>
  <Source Path="Upstream\Model\IUserProfileListItem.cs" Id="e519dea6-19d9-42a1-8bef-5eef61981131">
    <Namespace Name="FsInfoCat.Upstream.Model">
      <Interface Name="IUserProfileListItem" Access="public">
        <Implements>
          <SimpleBaseType Name="IUserProfileRow" />
        </Implements>
        <Property Name="MemberOfCount">
          <Type>
            <PredefinedType Keyword="long" />
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="TaskCount">
          <Type>
            <PredefinedType Keyword="long" />
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
      </Interface>
    </Namespace>
  </Source>
  <Source Path="Upstream\Model\IUserProfileRow.cs" Id="52967403-474d-4b62-80f0-ac8ebe718882">
    <Using Name="FsInfoCat.Collections" />
    <Using Name="System.ComponentModel.DataAnnotations" />
    <Namespace Name="FsInfoCat.Upstream.Model">
      <Interface Name="IUserProfileRow" Access="public">
        <Implements>
          <SimpleBaseType Name="IUpstreamDbEntity" />
        </Implements>
        <Property Name="DisplayName">
          <Documentation>
            <summary>
Gets the user's display name
</summary>
            <value>The user's display name</value>
          </Documentation>
          <Display Name="DisplayName_DisplayName" ShortName="DisplayName_DisplayName" Description="DisplayName_DisplayName" />
          <Type>
            <PredefinedType Keyword="string" />
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="FirstName">
          <Documentation>
            <summary>
Gets the user's first name.
</summary>
            <value>The user's first name.</value>
          </Documentation>
          <Display Name="DisplayName_FirstName" ShortName="DisplayName_FirstName" Description="DisplayName_FirstName" />
          <Type>
            <PredefinedType Keyword="string" />
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="LastName">
          <Documentation>
            <summary>
Gets the user's last name.
</summary>
            <value>The user's last name.</value>
          </Documentation>
          <Display Name="DisplayName_LastName" ShortName="DisplayName_LastName" Description="DisplayName_LastName" />
          <Type>
            <PredefinedType Keyword="string" />
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="MI">
          <Documentation>
            <summary>
Gets the user's middle initial.
</summary>
            <value>The user's middle initial.</value>
          </Documentation>
          <Display Name="DisplayName_MI" ShortName="DisplayName_MI" Description="DisplayName_MI" />
          <Type>
            <PredefinedType Keyword="string" />
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="Suffix">
          <Documentation>
            <summary>
Gets the suffix that is to be appended to the user's display name.
</summary>
            <value>The suffix that is to be appended to the user's display name.</value>
          </Documentation>
          <Display Name="DisplayName_Suffix" ShortName="DisplayName_Suffix" Description="DisplayName_Suffix" />
          <Type>
            <PredefinedType Keyword="string" />
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="Title">
          <Documentation>
            <summary>
Gets the user's professional title, position or rank.
</summary>
            <value>The user's professional title, position or rank.</value>
          </Documentation>
          <Display Name="DisplayName_Title" ShortName="DisplayName_Title" Description="DisplayName_Title" />
          <Type>
            <PredefinedType Keyword="string" />
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="DbPrincipalId">
          <Documentation>
            <summary>
Gets the database principal ID for the current user profile record.
</summary>
            <value>The database principal ID for the current user profile record.</value>
          </Documentation>
          <Display Name="DisplayName_DbPrincipalId" ShortName="DisplayName_DbPrincipalId" Description="DisplayName_DbPrincipalId" />
          <Type>
            <!--TODO: Need <xsl:template match="NullableType" mode="Types"></xsl:template>-->
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="SID">
          <Documentation>
            <summary>
Gets the Security Identifier for the user associated with the current user profile record.
</summary>
            <value>The Security Identifier for the user associated with the current user profile record.</value>
          </Documentation>
          <Display Name="DisplayName_SID" ShortName="DisplayName_SID" Description="DisplayName_SID" />
          <Type>
            <Identifier Name="ByteValues" />
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="Notes">
          <Documentation>
            <summary>
Gets the custom notes to be associated with the current user profile.
</summary>
            <value>The custom notes to be associated with the current user profile.</value>
          </Documentation>
          <Display Name="DisplayName_Notes" ShortName="DisplayName_Notes" Description="DisplayName_Notes" />
          <Type>
            <PredefinedType Keyword="string" />
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
        <Property Name="IsInactive">
          <Documentation>
            <summary>
Indicates whether the current user is inactive.
</summary>
            <value>
                      <see langword="true" /> if the current user is inactive; otherwise, <see langword="false" />.</value>
          </Documentation>
          <Display Name="DisplayName_IsInactive" ShortName="DisplayName_IsInactive" Description="DisplayName_IsInactive" />
          <Type>
            <PredefinedType Keyword="bool" />
          </Type>
          <!--TODO: Need <xsl:template match="Accessors" mode="Root"></xsl:template>-->
        </Property>
      </Interface>
    </Namespace>
  </Source>
  <Source Path="Upstream\Model\PlatformType.cs" Id="9196d88e-3bfb-40f1-8abd-bd83655d6798">
    <Using Name="System.ComponentModel.DataAnnotations" />
    <Namespace Name="FsInfoCat.Upstream.Model">
      <Enum Name="PlatformType" BaseType="byte" Access="public">
        <Documentation>
          <summary>
Represents a host platform type.
</summary>
        </Documentation>
        <Field Name="Unknown" Value="0">
          <Documentation>
            <summary>
Host platform type is unknown.
</summary>
          </Documentation>
          <Display Name="DisplayName_PlatformType_Unknown" ShortName="DisplayName_Unknown" Description="Description_PlatformType_Unknown" />
        </Field>
        <Field Name="Windows" Value="1">
          <Documentation>
            <summary>
Host machine runs on a Windows-based operating system.
</summary>
          </Documentation>
          <Display Name="DisplayName_PlatformType_Windows" ShortName="DisplayName_PlatformType_Windows" Description="Description_PlatformType_Windows" />
        </Field>
        <Field Name="Linux" Value="2">
          <Documentation>
            <summary>
Host machine runs on a Linux-based operating system.
</summary>
          </Documentation>
          <Display Name="DisplayName_PlatformType_Linux" ShortName="DisplayName_PlatformType_Linux" Description="Description_PlatformType_Linux" />
        </Field>
        <Field Name="OSX" Value="3">
          <Documentation>
            <summary>
Host machine runs on a OSX-based operating system.
</summary>
          </Documentation>
          <Display Name="DisplayName_PlatformType_OSX" ShortName="DisplayName_PlatformType_OSX" Description="Description_PlatformType_OSX" />
        </Field>
        <Field Name="Android" Value="4">
          <Documentation>
            <summary>
Host is an android device.
</summary>
          </Documentation>
          <Display Name="DisplayName_PlatformType_Android" ShortName="DisplayName_PlatformType_Android" Description="Description_PlatformType_Android" />
        </Field>
        <Field Name="IOS" Value="5">
          <Documentation>
            <summary>
Host is an IOS device.
</summary>
          </Documentation>
          <Display Name="DisplayName_PlatformType_IOS" ShortName="DisplayName_PlatformType_IOS" Description="Description_PlatformType_IOS" />
        </Field>
      </Enum>
    </Namespace>
  </Source>
  <Source Path="Upstream\Model\PriorityLevel.cs" Id="300c4870-45ce-42b7-afc3-8169700d60ab">
    <Using Name="System.ComponentModel.DataAnnotations" />
    <Namespace Name="FsInfoCat.Upstream.Model">
      <Enum Name="PriorityLevel" BaseType="byte" Access="public">
        <Documentation>
          <summary>
Represents the priority level of a task.
</summary>
        </Documentation>
        <Field Name="Deferred" Value="0">
          <Documentation>
            <summary>
Task has been deferred to a later date.
</summary>
          </Documentation>
          <Display Name="DisplayName_Deferred" ShortName="DisplayName_Deferred" Description="Description_PriorityLevel_Deferred" />
        </Field>
        <Field Name="Critical" Value="1">
          <Documentation>
            <summary>
Task has the highest priority.
</summary>
          </Documentation>
          <Display Name="DisplayName_PriorityLevel_Critical" ShortName="DisplayName_Critical" Description="Description_PriorityLevel_Critical" />
        </Field>
        <Field Name="High" Value="2">
          <Documentation>
            <summary>
Task has elevated priority.
</summary>
          </Documentation>
          <Display Name="DisplayName_PriorityLevel_High" ShortName="DisplayName_High" Description="Description_PriorityLevel_High" />
        </Field>
        <Field Name="Normal" Value="3">
          <Documentation>
            <summary>
Task has normal priority.
</summary>
          </Documentation>
          <Display Name="DisplayName_PriorityLevel_Normal" ShortName="DisplayName_Normal" Description="Description_PriorityLevel_Normal" />
        </Field>
        <Field Name="Low" Value="4">
          <Documentation>
            <summary>
Task has low priority.
</summary>
          </Documentation>
          <Display Name="DisplayName_PriorityLevel_Low" ShortName="DisplayName_Low" Description="Description_PriorityLevel_Low" />
        </Field>
      </Enum>
    </Namespace>
  </Source>
  <Source Path="Upstream\Model\TaskStatus.cs" Id="38e45989-d05c-42b4-8ae9-cbacbbf83cda">
    <Using Name="System.ComponentModel.DataAnnotations" />
    <Namespace Name="FsInfoCat.Upstream.Model">
      <Enum Name="TaskStatus" BaseType="byte" Access="public">
        <Documentation>
          <summary>
Represent the status of a task.
</summary>
        </Documentation>
        <Field Name="New" Value="0">
          <Documentation>
            <summary>
Task has not been acknowledged.
</summary>
          </Documentation>
          <Display Name="DisplayName_TaskStatus_New" ShortName="DisplayName_TaskStatus_New" Description="Description_TaskStatus_New" />
        </Field>
        <Field Name="Open" Value="1">
          <Documentation>
            <summary>
Task has been acknowledged, but not yet started.
</summary>
          </Documentation>
          <Display Name="DisplayName_TaskStatus_Open" ShortName="DisplayName_TaskStatus_Open" Description="Description_TaskStatus_Open" />
        </Field>
        <Field Name="Active" Value="2">
          <Documentation>
            <summary>
Task is currently being addressed.
</summary>
          </Documentation>
          <Display Name="DisplayName_TaskStatus_Active" ShortName="DisplayName_TaskStatus_Active" Description="Description_TaskStatus_Active" />
        </Field>
        <Field Name="Pending" Value="3">
          <Documentation>
            <summary>
Task is in a paused state, pending some other factor.
</summary>
          </Documentation>
          <Display Name="DisplayName_Pending" ShortName="DisplayName_Pending" Description="Description_TaskStatus_Pending" />
        </Field>
        <Field Name="Canceled" Value="4">
          <Documentation>
            <summary>
Task has been canceled.
</summary>
          </Documentation>
          <Display Name="DisplayName_Canceled" ShortName="DisplayName_Canceled" Description="Description_TaskStatus_Canceled" />
        </Field>
        <Field Name="Completed" Value="5">
          <Documentation>
            <summary>
Task has been completed.
</summary>
          </Documentation>
          <Display Name="DisplayName_Completed" ShortName="DisplayName_Completed" Description="Description_TaskStatus_Completed" />
        </Field>
      </Enum>
    </Namespace>
  </Source>
  <Source Path="Upstream\Model\UserRole.cs" Id="e47ff413-db56-4253-b52a-746ea6e78b74">
    <Using Name="System" />
    <Using Name="System.ComponentModel.DataAnnotations" />
    <Namespace Name="FsInfoCat.Upstream.Model">
      <Enum Name="UserRole" BaseType="byte" IsFlags="true" Access="public">
        <Documentation>
          <summary>
Defines an application user role.
</summary>
        </Documentation>
        <Field Name="None" Value="0">
          <Documentation>
            <summary>
No application roles/access.
</summary>
          </Documentation>
          <Display Name="DisplayName_UserRole_None" ShortName="DisplayName_None" Description="Description_UserRole_None" />
        </Field>
        <Field Name="Reader" Value="1">
          <Documentation>
            <summary>
Read-only application access.
</summary>
          </Documentation>
          <Display Name="DisplayName_ReadOnly" ShortName="DisplayName_ReadOnly" Description="Description_UserRole_Reader" />
        </Field>
        <Field Name="Auditor" Value="2">
          <Documentation>
            <summary>
Extended read-only application access for auditing purposes.
</summary>
          </Documentation>
          <Display Name="DisplayName_UserRole_Auditor" ShortName="DisplayName_UserRole_Auditor" Description="Description_UserRole_Auditor" />
        </Field>
        <Field Name="Contributor" Value="4">
          <Documentation>
            <summary>
User can read and write file system crawl results for their own shared crawl results as well as read and write task records.
</summary>
          </Documentation>
          <Display Name="DisplayName_Contributor" ShortName="DisplayName_UserRole_Contrib" Description="Description_UserRole_Contributor" />
        </Field>
        <Field Name="ITSupport" Value="8">
          <Documentation>
            <summary>
User can read and write all file system crawl results and task records, including ability to reassign tasks.
</summary>
          </Documentation>
          <Display Name="DisplayName_UserRole_ITSupport" ShortName="DisplayName_UserRole_IT" Description="Description_UserRole_ITSupport" />
        </Field>
        <Field Name="ChangeAdministrator" Value="16">
          <Documentation>
            <summary>
User can create new remediation tasks as well as determine desired state of files and directories.
</summary>
            <remarks>This role implies the privileges of the <see cref="Contributor" /> and <see cref="ITSupport" /> roles as well.</remarks>
          </Documentation>
          <Display Name="DisplayName_UserRole_ChangeAdministrator" ShortName="DisplayName_UserRole_ChangeAdmin" Description="Description_UserRole_ChangeAdministrator" />
        </Field>
        <Field Name="AppAdministrator" Value="32">
          <Documentation>
            <summary>
User can make changes to most application settings.
</summary>
            <remarks>This role implies the privileges of the <see cref="ChangeAdministrator" />, <see cref="Contributor" /> and <see cref="ITSupport" /> roles as well.</remarks>
          </Documentation>
          <Display Name="DisplayName_UserRole_AppAdministrator" ShortName="DisplayName_UserRole_AppAdmin" Description="Description_UserRole_AppAdministrator" />
        </Field>
        <Field Name="SystemAdmin" Value="64">
          <Documentation>
            <summary>
User can make changes to all application settings as well as the ability to read and write all records.
</summary>
          </Documentation>
          <Display Name="DisplayName_UserRole_SystemAdmin" ShortName="DisplayName_UserRole_SysAdmin" Description="Description_UserRole_SystemAdmin" />
        </Field>
      </Enum>
    </Namespace>
  </Source>
  <Source Path="DbConstants.cs" Id="a3b17352-ac5b-4289-85e8-716f5862db4d">
    <Namespace Name="FsInfoCat">
      <Class Name="DbConstants" Access="public" IsStatic="true">
        <Field Name="DbColMaxLen_32" Access="public" IsConstant="true">
          <PredefinedType Keyword="int" />
        </Field>
        <Field Name="DbColMaxLen_64" Access="public" IsConstant="true">
          <PredefinedType Keyword="int" />
        </Field>
        <Field Name="DbColMaxLen_SimpleName" Access="public" IsConstant="true">
          <PredefinedType Keyword="int" />
        </Field>
        <Field Name="DbColMaxLen_LongName" Access="public" IsConstant="true">
          <PredefinedType Keyword="int" />
        </Field>
        <Field Name="DbColMaxLen_ShortName" Access="public" IsConstant="true">
          <PredefinedType Keyword="int" />
        </Field>
        <Field Name="DbColMaxLen_Identifier" Access="public" IsConstant="true">
          <PredefinedType Keyword="int" />
        </Field>
        <Field Name="DbColMaxLen_FileName" Access="public" IsConstant="true">
          <PredefinedType Keyword="int" />
        </Field>
        <Field Name="DbColDefaultValue_MaxNameLength" Access="public" IsConstant="true">
          <PredefinedType Keyword="uint" />
        </Field>
        <Field Name="DbColMinValue_MaxTotalItems" Access="public" IsConstant="true">
          <PredefinedType Keyword="ushort" />
        </Field>
        <Field Name="DbColDefaultValue_MaxRecursionDepth" Access="public" IsConstant="true">
          <PredefinedType Keyword="ushort" />
        </Field>
        <Field Name="DbColMinValue_TTL_TotalMinutes" Access="public" IsConstant="true">
          <PredefinedType Keyword="long" />
        </Field>
        <Field Name="DbColMinValue_TTL_TotalSeconds" Access="public" IsConstant="true">
          <PredefinedType Keyword="long" />
        </Field>
        <Field Name="DbColMinValue_RescheduleInterval_TotalMinutes" Access="public" IsConstant="true">
          <PredefinedType Keyword="long" />
        </Field>
        <Field Name="DbColMinValue_RescheduleInterval_TotalSeconds" Access="public" IsConstant="true">
          <PredefinedType Keyword="long" />
        </Field>
      </Class>
    </Namespace>
  </Source>
</ModelDefinitions>
