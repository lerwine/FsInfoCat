<?xml version="1.0" encoding="utf-8" ?>
<CodeSnippets xmlns="http://schemas.microsoft.com/VisualStudio/2005/CodeSnippet">
  <CodeSnippet Format="1.0.0">
    <Header>
      <Title>Define a read-only DependencyProperty.</Title>
      <Shortcut>propdpro</Shortcut>
      <Description>Code snippet for a read-only property using DependencyProperty as the backing store.</Description>
      <Author>Leonard T. Erwine</Author>
      <SnippetTypes>
        <SnippetType>Expansion</SnippetType>
      </SnippetTypes>
    </Header>
    <Snippet>
      <Declarations>
        <Literal>
          <ID>type</ID>
          <ToolTip>Property Type</ToolTip>
          <Default>/*PropertyType*/</Default>
        </Literal>
        <Literal>
          <ID>property</ID>
          <ToolTip>Property Name</ToolTip>
          <Default>MyProperty</Default>
        </Literal>
        <Literal>
          <ID>ownerclass</ID>
          <Function>ClassName()</Function>
          <ToolTip>The owning class of this Property. Typically the class that it is declared in.</ToolTip>
        </Literal>
        <Literal>
          <ID>defaultvalue</ID>
          <ToolTip>The default value for this property.</ToolTip>
          <Default>null</Default>
        </Literal>
        <Literal>
          <ID>summary</ID>
          <ToolTip>The summary description of this property.</ToolTip>
          <Default>Gets .</Default>
        </Literal>
        <Literal>
          <ID>returnValue</ID>
          <ToolTip>Describes the value of this property.</ToolTip>
          <Default>The .</Default>
        </Literal>
      </Declarations>
      <Code Language="csharp">
        <![CDATA[
#region $property$ Property Members

private static readonly DependencyPropertyKey $property$PropertyKey = DependencyProperty.RegisterReadOnly(nameof($property$), typeof($type$), typeof($ownerclass$),
        new PropertyMetadata($defaultvalue$));

/// <summary>
/// Identifies the <see cref="$property$"/> dependency property.
/// </summary>
public static readonly DependencyProperty $property$Property = $property$PropertyKey.DependencyProperty;

/// <summary>
/// $summary$
/// </summary>
/// <value>$returnValue$</value>
public $type$ $property$ { get => ($type$)GetValue($property$Property); private set => SetValue($property$PropertyKey, value); }

#endregion
$end$]]>
      </Code>
    </Snippet>
  </CodeSnippet>
</CodeSnippets>
